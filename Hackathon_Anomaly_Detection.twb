<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20203.20.1018.2303                               -->
<workbook original-version='18.1' source-build='2020.3.2 (20203.20.1018.2303)' source-platform='win' version='18.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <AutoCreateAndUpdateDSDPhoneLayouts />
    <MapboxVectorStylesAndLayers />
    <_.fcp.MarkAnimation.true...MarkAnimation />
    <_.fcp.ObjectModelEncapsulateLegacy.true...ObjectModelEncapsulateLegacy />
    <_.fcp.ObjectModelTableType.true...ObjectModelTableType />
    <SavingAnalyticObjects />
    <_.fcp.SchemaViewerObjectModel.true...SchemaViewerObjectModel />
    <_.fcp.SetMembershipControl.true...SetMembershipControl />
    <SheetIdentifierTracking />
    <SortTagCleanup />
    <WindowsPersistSimpleIdentifiers />
    <ZoneBackgroundTransparency />
  </document-format-change-manifest>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <style-theme name='classic' />
  <datasources>
    <datasource caption='outlier_data' inline='true' name='federated.12vh8ue0eh2a7y1gdi8a105v0ete' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='outlier_data' name='textscan.1invvlr0n1kyn0162kljn1p03dc5'>
            <connection class='textscan' directory='C:/Users/Jainam/Downloads/archive (2)' filename='outlier_data.csv' password='' server='' />
          </named-connection>
          <named-connection caption='outlier_data (2)' name='textscan.10v44kh0mcdkf61dmdm6g14zmz7j'>
            <connection class='textscan' directory='C:/Users/Jainam/Downloads/archive (2)' filename='outlier_data.csv' password='' server='' />
          </named-connection>
          <named-connection caption='outlier_data-1' name='textscan.02v17sv170kprl16pp0kk1gb0d5c'>
            <connection class='textscan' directory='C:/Users/Jainam/Downloads' filename='outlier_data-1.csv' password='' server='' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='textscan.1invvlr0n1kyn0162kljn1p03dc5' name='outlier_data.csv' table='[outlier_data#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_IN' separator=','>
            <column datatype='string' name='order_id' ordinal='0' />
            <column datatype='date' name='date' ordinal='1' />
            <column datatype='datetime' name='time' ordinal='2' />
            <column datatype='string' name='order_type' ordinal='3' />
            <column datatype='string' name='branch_code' ordinal='4' />
            <column datatype='string' name='order_items' ordinal='5' />
            <column datatype='real' name='order_price' ordinal='6' />
            <column datatype='real' name='customer_lat' ordinal='7' />
            <column datatype='real' name='customer_lon' ordinal='8' />
            <column datatype='integer' name='customerHasloyalty?' ordinal='9' />
            <column datatype='real' name='distance_to_customer_KM' ordinal='10' />
            <column datatype='real' name='delivery_fee' ordinal='11' />
            <column datatype='string' name='Status' ordinal='12' />
            <column datatype='integer' name='Complain' ordinal='13' />
            <column datatype='integer' name='Refund' ordinal='14' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='textscan.1invvlr0n1kyn0162kljn1p03dc5' name='outlier_data.csv' table='[outlier_data#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_IN' separator=','>
            <column datatype='string' name='order_id' ordinal='0' />
            <column datatype='date' name='date' ordinal='1' />
            <column datatype='datetime' name='time' ordinal='2' />
            <column datatype='string' name='order_type' ordinal='3' />
            <column datatype='string' name='branch_code' ordinal='4' />
            <column datatype='string' name='order_items' ordinal='5' />
            <column datatype='real' name='order_price' ordinal='6' />
            <column datatype='real' name='customer_lat' ordinal='7' />
            <column datatype='real' name='customer_lon' ordinal='8' />
            <column datatype='integer' name='customerHasloyalty?' ordinal='9' />
            <column datatype='real' name='distance_to_customer_KM' ordinal='10' />
            <column datatype='real' name='delivery_fee' ordinal='11' />
            <column datatype='string' name='Status' ordinal='12' />
            <column datatype='integer' name='Complain' ordinal='13' />
            <column datatype='integer' name='Refund' ordinal='14' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[outlier_data.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_GB&quot;</attribute>
              <attribute datatype='string' name='currency'>&quot;Rs&quot;</attribute>
              <attribute datatype='string' name='debit-close-char'>&quot;&quot;</attribute>
              <attribute datatype='string' name='debit-open-char'>&quot;&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_IN&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>order_id</remote-name>
            <remote-type>129</remote-type>
            <local-name>[order_id]</local-name>
            <parent-name>[outlier_data.csv]</parent-name>
            <remote-alias>order_id</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[outlier_data.csv_1D226D598B08465EB1EB579E0E9F5609]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>date</remote-name>
            <remote-type>133</remote-type>
            <local-name>[date]</local-name>
            <parent-name>[outlier_data.csv]</parent-name>
            <remote-alias>date</remote-alias>
            <ordinal>1</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[outlier_data.csv_1D226D598B08465EB1EB579E0E9F5609]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>time</remote-name>
            <remote-type>134</remote-type>
            <local-name>[time]</local-name>
            <parent-name>[outlier_data.csv]</parent-name>
            <remote-alias>time</remote-alias>
            <ordinal>2</ordinal>
            <local-type>datetime</local-type>
            <aggregation>Hour</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[outlier_data.csv_1D226D598B08465EB1EB579E0E9F5609]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>order_type</remote-name>
            <remote-type>129</remote-type>
            <local-name>[order_type]</local-name>
            <parent-name>[outlier_data.csv]</parent-name>
            <remote-alias>order_type</remote-alias>
            <ordinal>3</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[outlier_data.csv_1D226D598B08465EB1EB579E0E9F5609]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>branch_code</remote-name>
            <remote-type>129</remote-type>
            <local-name>[branch_code]</local-name>
            <parent-name>[outlier_data.csv]</parent-name>
            <remote-alias>branch_code</remote-alias>
            <ordinal>4</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[outlier_data.csv_1D226D598B08465EB1EB579E0E9F5609]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>order_items</remote-name>
            <remote-type>129</remote-type>
            <local-name>[order_items]</local-name>
            <parent-name>[outlier_data.csv]</parent-name>
            <remote-alias>order_items</remote-alias>
            <ordinal>5</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[outlier_data.csv_1D226D598B08465EB1EB579E0E9F5609]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>order_price</remote-name>
            <remote-type>5</remote-type>
            <local-name>[order_price]</local-name>
            <parent-name>[outlier_data.csv]</parent-name>
            <remote-alias>order_price</remote-alias>
            <ordinal>6</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[outlier_data.csv_1D226D598B08465EB1EB579E0E9F5609]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>customer_lat</remote-name>
            <remote-type>5</remote-type>
            <local-name>[customer_lat]</local-name>
            <parent-name>[outlier_data.csv]</parent-name>
            <remote-alias>customer_lat</remote-alias>
            <ordinal>7</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[outlier_data.csv_1D226D598B08465EB1EB579E0E9F5609]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>customer_lon</remote-name>
            <remote-type>5</remote-type>
            <local-name>[customer_lon]</local-name>
            <parent-name>[outlier_data.csv]</parent-name>
            <remote-alias>customer_lon</remote-alias>
            <ordinal>8</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[outlier_data.csv_1D226D598B08465EB1EB579E0E9F5609]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>customerHasloyalty?</remote-name>
            <remote-type>20</remote-type>
            <local-name>[customerHasloyalty?]</local-name>
            <parent-name>[outlier_data.csv]</parent-name>
            <remote-alias>customerHasloyalty?</remote-alias>
            <ordinal>9</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[outlier_data.csv_1D226D598B08465EB1EB579E0E9F5609]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>distance_to_customer_KM</remote-name>
            <remote-type>5</remote-type>
            <local-name>[distance_to_customer_KM]</local-name>
            <parent-name>[outlier_data.csv]</parent-name>
            <remote-alias>distance_to_customer_KM</remote-alias>
            <ordinal>10</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[outlier_data.csv_1D226D598B08465EB1EB579E0E9F5609]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>delivery_fee</remote-name>
            <remote-type>5</remote-type>
            <local-name>[delivery_fee]</local-name>
            <parent-name>[outlier_data.csv]</parent-name>
            <remote-alias>delivery_fee</remote-alias>
            <ordinal>11</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[outlier_data.csv_1D226D598B08465EB1EB579E0E9F5609]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Status</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Status]</local-name>
            <parent-name>[outlier_data.csv]</parent-name>
            <remote-alias>Status</remote-alias>
            <ordinal>12</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[outlier_data.csv_1D226D598B08465EB1EB579E0E9F5609]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Complain</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Complain]</local-name>
            <parent-name>[outlier_data.csv]</parent-name>
            <remote-alias>Complain</remote-alias>
            <ordinal>13</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[outlier_data.csv_1D226D598B08465EB1EB579E0E9F5609]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Refund</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Refund]</local-name>
            <parent-name>[outlier_data.csv]</parent-name>
            <remote-alias>Refund</remote-alias>
            <ordinal>14</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[outlier_data.csv_1D226D598B08465EB1EB579E0E9F5609]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column datatype='string' name='[Refund (group)]' role='dimension' type='nominal'>
        <calculation class='categorical-bin' column='[Refund]' default='&quot;Other&quot;' new-bin='true' />
      </column>
      <column datatype='integer' name='[Refund]' role='measure' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='outlier_data.csv' datatype='table' name='[__tableau_internal_object_id__].[outlier_data.csv_1D226D598B08465EB1EB579E0E9F5609]' role='measure' type='quantitative' />
      <column caption='Branch Code' datatype='string' name='[branch_code]' role='dimension' type='nominal' />
      <column datatype='integer' name='[customerHasloyalty?]' role='dimension' type='ordinal' />
      <column aggregation='Avg' caption='Customer Lat' datatype='real' name='[customer_lat]' role='measure' semantic-role='[Geographical].[Latitude]' type='quantitative' />
      <column aggregation='Avg' caption='Customer Lon' datatype='real' name='[customer_lon]' role='measure' semantic-role='[Geographical].[Longitude]' type='quantitative' />
      <column caption='Date' datatype='date' name='[date]' role='dimension' type='ordinal' />
      <column caption='Delivery Fee' datatype='real' name='[delivery_fee]' role='measure' type='quantitative' />
      <column caption='distance to customer KM' datatype='real' name='[distance_to_customer_KM]' role='measure' type='quantitative' />
      <column caption='Order Id' datatype='string' name='[order_id]' role='dimension' type='nominal' />
      <column caption='Order Items' datatype='string' name='[order_items]' role='dimension' type='nominal' />
      <column caption='Order Price' datatype='real' name='[order_price]' role='measure' type='quantitative' />
      <column caption='Order Type' datatype='string' name='[order_type]' role='dimension' type='nominal' />
      <column aggregation='Hour' caption='Time' datatype='datetime' name='[time]' role='dimension' type='ordinal' />
      <column-instance column='[order_id]' derivation='Count' name='[cnt:order_id:qk]' pivot='key' type='quantitative' />
      <column-instance column='[customerHasloyalty?]' derivation='None' name='[none:customerHasloyalty?:ok]' pivot='key' type='ordinal' />
      <column-instance column='[customer_lat]' derivation='None' name='[none:customer_lat:qk]' pivot='key' type='quantitative' />
      <column-instance column='[customer_lon]' derivation='None' name='[none:customer_lon:qk]' pivot='key' type='quantitative' />
      <column-instance column='[order_items]' derivation='None' name='[none:order_items:nk]' pivot='key' type='nominal' />
      <column-instance column='[order_type]' derivation='None' name='[none:order_type:nk]' pivot='key' type='nominal' />
      <group hidden='true' name='[Exclusions (Customer Lat,Customer Lon)]' name-style='unqualified' user:auto-column='exclude'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[none:customer_lat:qk]' />
          <groupfilter function='level-members' level='[none:customer_lon:qk]' />
        </groupfilter>
      </group>
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='false' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:order_items:nk]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;[(&apos;Cereal&apos;, 9), (&apos;Eggs&apos;, 5), (&apos;Pancake&apos;, 5)]&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;[(&apos;Chicken&apos;, 1), (&apos;Salad&apos;, 9), (&apos;Burger&apos;, 10), (&apos;Steak&apos;, 7)]&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;[(&apos;Chicken&apos;, 10), (&apos;Salad&apos;, 6), (&apos;Steak&apos;, 5), (&apos;Fries&apos;, 6)]&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;[(&apos;Chicken&apos;, 7), (&apos;Steak&apos;, 2), (&apos;Salad&apos;, 2), (&apos;Burger&apos;, 1)]&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;[(&apos;Chicken&apos;, 9), (&apos;Steak&apos;, 5), (&apos;Fries&apos;, 10), (&apos;Salad&apos;, 5), (&apos;Burger&apos;, 8)]&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;[(&apos;Coffee&apos;, 3), (&apos;Eggs&apos;, 7)]&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;[(&apos;Coffee&apos;, 8), (&apos;Pancake&apos;, 10), (&apos;Eggs&apos;, 7)]&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;[(&apos;Eggs&apos;, 4), (&apos;Coffee&apos;, 7)]&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;[(&apos;Eggs&apos;, 6), (&apos;Pancake&apos;, 6), (&apos;Coffee&apos;, 1)]&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;[(&apos;Eggs&apos;, 7), (&apos;Coffee&apos;, 8), (&apos;Cereal&apos;, 2)]&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;[(&apos;Fish&amp;Chips&apos;, 10), (&apos;Salmon&apos;, 9), (&apos;Pasta&apos;, 9), (&apos;Shrimp&apos;, 2)]&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;[(&apos;Fish&amp;Chips&apos;, 5), (&apos;Shrimp&apos;, 2), (&apos;Salmon&apos;, 2), (&apos;Pasta&apos;, 9)]&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;[(&apos;Fish&amp;Chips&apos;, 8), (&apos;Salmon&apos;, 1)]&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;[(&apos;Fries&apos;, 4), (&apos;Burger&apos;, 1)]&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;[(&apos;Fries&apos;, 7), (&apos;Steak&apos;, 7)]&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;[(&apos;Pancake&apos;, 5), (&apos;Eggs&apos;, 6), (&apos;Cereal&apos;, 1), (&apos;Coffee&apos;, 9)]&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;[(&apos;Pasta&apos;, 1), (&apos;Shrimp&apos;, 2), (&apos;Fish&amp;Chips&apos;, 2), (&apos;Salmon&apos;, 9)]&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;[(&apos;Pasta&apos;, 3), (&apos;Fish&amp;Chips&apos;, 6), (&apos;Shrimp&apos;, 6), (&apos;Salmon&apos;, 1)]&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;[(&apos;Salad&apos;, 6), (&apos;Chicken&apos;, 8)]&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;[(&apos;Salmon&apos;, 1), (&apos;Shrimp&apos;, 3)]&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;[(&apos;Salmon&apos;, 5), (&apos;Pasta&apos;, 1)]&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;[(&apos;Salmon&apos;, 9), (&apos;Shrimp&apos;, 4), (&apos;Fish&amp;Chips&apos;, 9)]&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;[(&apos;Shrimp&apos;, 4), (&apos;Pasta&apos;, 10), (&apos;Salmon&apos;, 4), (&apos;Fish&amp;Chips&apos;, 3)]&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;[(&apos;Steak&apos;, 8), (&apos;Salad&apos;, 5), (&apos;Fries&apos;, 1), (&apos;Chicken&apos;, 1)]&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;[(&apos;Steak&apos;, 9), (&apos;Salad&apos;, 7)]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[(&apos;Burger&apos;, 8), (&apos;Chicken&apos;, 8)]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[(&apos;Burger&apos;, 8), (&apos;Steak&apos;, 5)]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[(&apos;Cereal&apos;, 4), (&apos;Pancake&apos;, 5), (&apos;Eggs&apos;, 5), (&apos;Coffee&apos;, 4)]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[(&apos;Cereal&apos;, 7), (&apos;Coffee&apos;, 9), (&apos;Pancake&apos;, 7)]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[(&apos;Cereal&apos;, 7), (&apos;Eggs&apos;, 2)]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[(&apos;Chicken&apos;, 10), (&apos;Steak&apos;, 2)]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[(&apos;Chicken&apos;, 2), (&apos;Salad&apos;, 6), (&apos;Fries&apos;, 9), (&apos;Steak&apos;, 10), (&apos;Burger&apos;, 2)]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[(&apos;Chicken&apos;, 9), (&apos;Steak&apos;, 8), (&apos;Salad&apos;, 9), (&apos;Fries&apos;, 5), (&apos;Burger&apos;, 5)]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[(&apos;Coffee&apos;, 9), (&apos;Cereal&apos;, 9), (&apos;Pancake&apos;, 9)]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[(&apos;Fish&amp;Chips&apos;, 10), (&apos;Shrimp&apos;, 9)]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[(&apos;Fish&amp;Chips&apos;, 8), (&apos;Salmon&apos;, 1), (&apos;Shrimp&apos;, 5)]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[(&apos;Fish&amp;Chips&apos;, 8), (&apos;Salmon&apos;, 2), (&apos;Pasta&apos;, 4), (&apos;Shrimp&apos;, 5)]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[(&apos;Fish&amp;Chips&apos;, 9), (&apos;Pasta&apos;, 10), (&apos;Salmon&apos;, 8)]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[(&apos;Pancake&apos;, 10), (&apos;Cereal&apos;, 4)]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[(&apos;Pancake&apos;, 2), (&apos;Cereal&apos;, 5)]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[(&apos;Pancake&apos;, 2), (&apos;Eggs&apos;, 6), (&apos;Cereal&apos;, 9)]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[(&apos;Pasta&apos;, 2), (&apos;Fish&amp;Chips&apos;, 6)]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[(&apos;Pasta&apos;, 2), (&apos;Salmon&apos;, 6)]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[(&apos;Pasta&apos;, 9), (&apos;Shrimp&apos;, 9), (&apos;Salmon&apos;, 5), (&apos;Fish&amp;Chips&apos;, 9)]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[(&apos;Salad&apos;, 1), (&apos;Steak&apos;, 2)]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[(&apos;Salmon&apos;, 2), (&apos;Pasta&apos;, 3), (&apos;Shrimp&apos;, 3), (&apos;Fish&amp;Chips&apos;, 3)]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[(&apos;Shrimp&apos;, 2), (&apos;Salmon&apos;, 8), (&apos;Fish&amp;Chips&apos;, 4), (&apos;Pasta&apos;, 2)]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[(&apos;Shrimp&apos;, 8), (&apos;Salmon&apos;, 3)]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[(&apos;Steak&apos;, 2), (&apos;Chicken&apos;, 4)]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[(&apos;Steak&apos;, 7), (&apos;Chicken&apos;, 9), (&apos;Salad&apos;, 3), (&apos;Fries&apos;, 2)]&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;[(&apos;Burger&apos;, 2), (&apos;Chicken&apos;, 3), (&apos;Salad&apos;, 6)]&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;[(&apos;Burger&apos;, 3), (&apos;Salad&apos;, 3), (&apos;Fries&apos;, 5), (&apos;Chicken&apos;, 7)]&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;[(&apos;Cereal&apos;, 7), (&apos;Pancake&apos;, 5), (&apos;Coffee&apos;, 1), (&apos;Eggs&apos;, 6)]&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;[(&apos;Chicken&apos;, 1), (&apos;Fries&apos;, 6), (&apos;Steak&apos;, 7), (&apos;Salad&apos;, 3), (&apos;Burger&apos;, 5)]&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;[(&apos;Chicken&apos;, 2), (&apos;Fries&apos;, 5), (&apos;Steak&apos;, 10), (&apos;Salad&apos;, 9), (&apos;Burger&apos;, 8)]&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;[(&apos;Coffee&apos;, 3), (&apos;Pancake&apos;, 3)]&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;[(&apos;Coffee&apos;, 3), (&apos;Pancake&apos;, 8), (&apos;Cereal&apos;, 8), (&apos;Eggs&apos;, 7)]&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;[(&apos;Coffee&apos;, 6), (&apos;Cereal&apos;, 8), (&apos;Eggs&apos;, 7)]&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;[(&apos;Coffee&apos;, 9), (&apos;Cereal&apos;, 10), (&apos;Eggs&apos;, 3)]&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;[(&apos;Eggs&apos;, 1), (&apos;Cereal&apos;, 9)]&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;[(&apos;Eggs&apos;, 1), (&apos;Pancake&apos;, 3), (&apos;Coffee&apos;, 7)]&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;[(&apos;Eggs&apos;, 5), (&apos;Coffee&apos;, 9), (&apos;Cereal&apos;, 2), (&apos;Pancake&apos;, 3)]&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;[(&apos;Fish&amp;Chips&apos;, 4), (&apos;Salmon&apos;, 5), (&apos;Pasta&apos;, 9), (&apos;Shrimp&apos;, 10)]&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;[(&apos;Fish&amp;Chips&apos;, 7), (&apos;Salmon&apos;, 2), (&apos;Shrimp&apos;, 1)]&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;[(&apos;Fries&apos;, 1), (&apos;Salad&apos;, 10)]&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;[(&apos;Pancake&apos;, 10), (&apos;Coffee&apos;, 6), (&apos;Cereal&apos;, 9), (&apos;Eggs&apos;, 1)]&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;[(&apos;Pancake&apos;, 5), (&apos;Cereal&apos;, 5), (&apos;Coffee&apos;, 2), (&apos;Eggs&apos;, 10)]&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;[(&apos;Pasta&apos;, 1), (&apos;Salmon&apos;, 8), (&apos;Fish&amp;Chips&apos;, 9)]&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;[(&apos;Pasta&apos;, 7), (&apos;Shrimp&apos;, 6), (&apos;Fish&amp;Chips&apos;, 3), (&apos;Salmon&apos;, 5)]&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;[(&apos;Salmon&apos;, 1), (&apos;Pasta&apos;, 9), (&apos;Fish&amp;Chips&apos;, 1)]&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;[(&apos;Salmon&apos;, 4), (&apos;Fish&amp;Chips&apos;, 2)]&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;[(&apos;Salmon&apos;, 9), (&apos;Shrimp&apos;, 10)]&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;[(&apos;Shrimp&apos;, 8), (&apos;Salmon&apos;, 3), (&apos;Pasta&apos;, 8)]&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;[(&apos;Steak&apos;, 5), (&apos;Burger&apos;, 8), (&apos;Chicken&apos;, 1), (&apos;Fries&apos;, 4), (&apos;Salad&apos;, 2)]&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;[(&apos;Steak&apos;, 8), (&apos;Fries&apos;, 9), (&apos;Burger&apos;, 3), (&apos;Salad&apos;, 8), (&apos;Chicken&apos;, 1)]&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;[(&apos;Burger&apos;, 9), (&apos;Chicken&apos;, 5), (&apos;Steak&apos;, 1)]&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;[(&apos;Cereal&apos;, 2), (&apos;Pancake&apos;, 1)]&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;[(&apos;Cereal&apos;, 4), (&apos;Pancake&apos;, 6)]&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;[(&apos;Chicken&apos;, 9), (&apos;Salad&apos;, 3), (&apos;Burger&apos;, 6), (&apos;Steak&apos;, 1)]&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;[(&apos;Coffee&apos;, 2), (&apos;Cereal&apos;, 1), (&apos;Pancake&apos;, 4), (&apos;Eggs&apos;, 10)]&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;[(&apos;Coffee&apos;, 4), (&apos;Cereal&apos;, 6), (&apos;Eggs&apos;, 7), (&apos;Pancake&apos;, 1)]&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;[(&apos;Coffee&apos;, 5), (&apos;Cereal&apos;, 8), (&apos;Pancake&apos;, 10)]&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;[(&apos;Coffee&apos;, 8), (&apos;Eggs&apos;, 4), (&apos;Cereal&apos;, 1)]&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;[(&apos;Eggs&apos;, 4), (&apos;Cereal&apos;, 9)]&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;[(&apos;Fish&amp;Chips&apos;, 3), (&apos;Salmon&apos;, 7)]&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;[(&apos;Fish&amp;Chips&apos;, 4), (&apos;Shrimp&apos;, 2)]&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;[(&apos;Fish&amp;Chips&apos;, 6), (&apos;Salmon&apos;, 5)]&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;[(&apos;Fries&apos;, 4), (&apos;Burger&apos;, 9), (&apos;Chicken&apos;, 6)]&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;[(&apos;Fries&apos;, 7), (&apos;Salad&apos;, 1), (&apos;Steak&apos;, 7), (&apos;Burger&apos;, 10), (&apos;Chicken&apos;, 10)]&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;[(&apos;Fries&apos;, 8), (&apos;Chicken&apos;, 1)]&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;[(&apos;Pancake&apos;, 10), (&apos;Coffee&apos;, 1), (&apos;Eggs&apos;, 2), (&apos;Cereal&apos;, 1)]&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;[(&apos;Pasta&apos;, 10), (&apos;Fish&amp;Chips&apos;, 9), (&apos;Shrimp&apos;, 4)]&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;[(&apos;Pasta&apos;, 6), (&apos;Fish&amp;Chips&apos;, 1)]&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;[(&apos;Salad&apos;, 8), (&apos;Steak&apos;, 1), (&apos;Burger&apos;, 9), (&apos;Chicken&apos;, 6)]&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;[(&apos;Salad&apos;, 9), (&apos;Burger&apos;, 8), (&apos;Fries&apos;, 5), (&apos;Steak&apos;, 9)]&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;[(&apos;Salmon&apos;, 7), (&apos;Shrimp&apos;, 5), (&apos;Pasta&apos;, 3), (&apos;Fish&amp;Chips&apos;, 3)]&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;[(&apos;Shrimp&apos;, 8), (&apos;Fish&amp;Chips&apos;, 5)]&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;[(&apos;Steak&apos;, 2), (&apos;Chicken&apos;, 10), (&apos;Salad&apos;, 3), (&apos;Fries&apos;, 3), (&apos;Burger&apos;, 7)]&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;[(&apos;Steak&apos;, 8), (&apos;Chicken&apos;, 8), (&apos;Salad&apos;, 8), (&apos;Burger&apos;, 4), (&apos;Fries&apos;, 7)]&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;[(&apos;Steak&apos;, 9), (&apos;Burger&apos;, 9), (&apos;Salad&apos;, 2), (&apos;Chicken&apos;, 1)]&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;[(&apos;Burger&apos;, 1), (&apos;Steak&apos;, 2), (&apos;Salad&apos;, 4), (&apos;Fries&apos;, 9), (&apos;Chicken&apos;, 6)]&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;[(&apos;Burger&apos;, 7), (&apos;Fries&apos;, 4), (&apos;Steak&apos;, 7), (&apos;Chicken&apos;, 10)]&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;[(&apos;Cereal&apos;, 2), (&apos;Eggs&apos;, 6)]&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;[(&apos;Cereal&apos;, 6), (&apos;Eggs&apos;, 3), (&apos;Pancake&apos;, 8), (&apos;Coffee&apos;, 9)]&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;[(&apos;Chicken&apos;, 10), (&apos;Fries&apos;, 3), (&apos;Burger&apos;, 6), (&apos;Salad&apos;, 4)]&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;[(&apos;Chicken&apos;, 10), (&apos;Fries&apos;, 5), (&apos;Steak&apos;, 5), (&apos;Salad&apos;, 3)]&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;[(&apos;Chicken&apos;, 10), (&apos;Steak&apos;, 1), (&apos;Fries&apos;, 7), (&apos;Burger&apos;, 4)]&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;[(&apos;Chicken&apos;, 3), (&apos;Fries&apos;, 7), (&apos;Salad&apos;, 3)]&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;[(&apos;Chicken&apos;, 5), (&apos;Fries&apos;, 8)]&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;[(&apos;Coffee&apos;, 2), (&apos;Cereal&apos;, 8), (&apos;Pancake&apos;, 4)]&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;[(&apos;Coffee&apos;, 7), (&apos;Cereal&apos;, 1)]&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;[(&apos;Eggs&apos;, 5), (&apos;Coffee&apos;, 4), (&apos;Pancake&apos;, 9)]&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;[(&apos;Fries&apos;, 10), (&apos;Salad&apos;, 5), (&apos;Chicken&apos;, 6)]&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;[(&apos;Fries&apos;, 5), (&apos;Steak&apos;, 2), (&apos;Salad&apos;, 4), (&apos;Chicken&apos;, 5)]&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;[(&apos;Pancake&apos;, 8), (&apos;Cereal&apos;, 6)]&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;[(&apos;Pasta&apos;, 1), (&apos;Salmon&apos;, 6), (&apos;Fish&amp;Chips&apos;, 1), (&apos;Shrimp&apos;, 4)]&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;[(&apos;Pasta&apos;, 9), (&apos;Shrimp&apos;, 3), (&apos;Fish&amp;Chips&apos;, 10)]&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;[(&apos;Salad&apos;, 5), (&apos;Fries&apos;, 8), (&apos;Chicken&apos;, 9), (&apos;Burger&apos;, 9), (&apos;Steak&apos;, 7)]&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;[(&apos;Salad&apos;, 9), (&apos;Fries&apos;, 4)]&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;[(&apos;Salmon&apos;, 1), (&apos;Shrimp&apos;, 4), (&apos;Pasta&apos;, 3)]&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;[(&apos;Salmon&apos;, 2), (&apos;Shrimp&apos;, 1)]&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;[(&apos;Shrimp&apos;, 10), (&apos;Pasta&apos;, 7), (&apos;Salmon&apos;, 4), (&apos;Fish&amp;Chips&apos;, 2)]&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;[(&apos;Steak&apos;, 6), (&apos;Salad&apos;, 2), (&apos;Burger&apos;, 8), (&apos;Chicken&apos;, 8)]&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;[(&apos;Steak&apos;, 8), (&apos;Burger&apos;, 1), (&apos;Fries&apos;, 1), (&apos;Salad&apos;, 1)]&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;[(&apos;Steak&apos;, 9), (&apos;Burger&apos;, 8), (&apos;Chicken&apos;, 2)]&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;[(&apos;Burger&apos;, 1), (&apos;Fries&apos;, 9), (&apos;Steak&apos;, 1)]&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;[(&apos;Burger&apos;, 7), (&apos;Chicken&apos;, 10)]&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;[(&apos;Cereal&apos;, 1), (&apos;Coffee&apos;, 9), (&apos;Eggs&apos;, 10), (&apos;Pancake&apos;, 4)]&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;[(&apos;Cereal&apos;, 5), (&apos;Coffee&apos;, 5), (&apos;Pancake&apos;, 2), (&apos;Eggs&apos;, 6)]&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;[(&apos;Cereal&apos;, 9), (&apos;Eggs&apos;, 7)]&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;[(&apos;Chicken&apos;, 2), (&apos;Fries&apos;, 9), (&apos;Burger&apos;, 2)]&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;[(&apos;Chicken&apos;, 2), (&apos;Salad&apos;, 3), (&apos;Steak&apos;, 2), (&apos;Burger&apos;, 2), (&apos;Fries&apos;, 2)]&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;[(&apos;Coffee&apos;, 2), (&apos;Eggs&apos;, 7), (&apos;Pancake&apos;, 8)]&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;[(&apos;Coffee&apos;, 4), (&apos;Pancake&apos;, 2), (&apos;Eggs&apos;, 3)]&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;[(&apos;Eggs&apos;, 5), (&apos;Pancake&apos;, 4)]&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;[(&apos;Fish&amp;Chips&apos;, 10), (&apos;Pasta&apos;, 4)]&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;[(&apos;Fish&amp;Chips&apos;, 4), (&apos;Pasta&apos;, 9), (&apos;Shrimp&apos;, 2)]&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;[(&apos;Fish&amp;Chips&apos;, 7), (&apos;Salmon&apos;, 6), (&apos;Shrimp&apos;, 10), (&apos;Pasta&apos;, 3)]&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;[(&apos;Fries&apos;, 8), (&apos;Steak&apos;, 10), (&apos;Burger&apos;, 9)]&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;[(&apos;Fries&apos;, 9), (&apos;Burger&apos;, 5), (&apos;Steak&apos;, 10), (&apos;Salad&apos;, 3)]&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;[(&apos;Pancake&apos;, 1), (&apos;Coffee&apos;, 9)]&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;[(&apos;Pasta&apos;, 10), (&apos;Fish&amp;Chips&apos;, 3)]&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;[(&apos;Pasta&apos;, 5), (&apos;Salmon&apos;, 6), (&apos;Fish&amp;Chips&apos;, 8)]&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;[(&apos;Pasta&apos;, 7), (&apos;Salmon&apos;, 4), (&apos;Fish&amp;Chips&apos;, 3), (&apos;Shrimp&apos;, 3)]&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;[(&apos;Pasta&apos;, 9), (&apos;Fish&amp;Chips&apos;, 2), (&apos;Salmon&apos;, 10)]&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;[(&apos;Salad&apos;, 5), (&apos;Burger&apos;, 2), (&apos;Steak&apos;, 1), (&apos;Fries&apos;, 3), (&apos;Chicken&apos;, 1)]&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;[(&apos;Shrimp&apos;, 4), (&apos;Fish&amp;Chips&apos;, 10), (&apos;Salmon&apos;, 10)]&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;[(&apos;Shrimp&apos;, 4), (&apos;Pasta&apos;, 3), (&apos;Fish&amp;Chips&apos;, 8), (&apos;Salmon&apos;, 8)]&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;[(&apos;Steak&apos;, 3), (&apos;Fries&apos;, 7), (&apos;Salad&apos;, 7), (&apos;Burger&apos;, 8)]&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;[(&apos;Steak&apos;, 4), (&apos;Burger&apos;, 8)]&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;[(&apos;Burger&apos;, 4), (&apos;Fries&apos;, 3), (&apos;Salad&apos;, 1), (&apos;Steak&apos;, 2)]&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;[(&apos;Burger&apos;, 5), (&apos;Chicken&apos;, 7), (&apos;Salad&apos;, 7), (&apos;Steak&apos;, 3)]&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;[(&apos;Cereal&apos;, 5), (&apos;Coffee&apos;, 7)]&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;[(&apos;Cereal&apos;, 7), (&apos;Coffee&apos;, 1), (&apos;Pancake&apos;, 6), (&apos;Eggs&apos;, 4)]&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;[(&apos;Cereal&apos;, 7), (&apos;Pancake&apos;, 3)]&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;[(&apos;Chicken&apos;, 10), (&apos;Salad&apos;, 7), (&apos;Fries&apos;, 10)]&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;[(&apos;Coffee&apos;, 1), (&apos;Cereal&apos;, 3), (&apos;Pancake&apos;, 7), (&apos;Eggs&apos;, 4)]&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;[(&apos;Coffee&apos;, 2), (&apos;Pancake&apos;, 4)]&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;[(&apos;Coffee&apos;, 4), (&apos;Cereal&apos;, 9)]&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;[(&apos;Coffee&apos;, 8), (&apos;Eggs&apos;, 6)]&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;[(&apos;Eggs&apos;, 1), (&apos;Coffee&apos;, 7), (&apos;Cereal&apos;, 4), (&apos;Pancake&apos;, 6)]&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;[(&apos;Fish&amp;Chips&apos;, 1), (&apos;Shrimp&apos;, 9), (&apos;Pasta&apos;, 6)]&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;[(&apos;Fish&amp;Chips&apos;, 5), (&apos;Salmon&apos;, 5), (&apos;Shrimp&apos;, 4), (&apos;Pasta&apos;, 7)]&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;[(&apos;Fish&amp;Chips&apos;, 9), (&apos;Shrimp&apos;, 3)]&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;[(&apos;Pancake&apos;, 10), (&apos;Coffee&apos;, 7), (&apos;Cereal&apos;, 8), (&apos;Eggs&apos;, 6)]&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;[(&apos;Pancake&apos;, 9), (&apos;Coffee&apos;, 3)]&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;[(&apos;Pasta&apos;, 10), (&apos;Shrimp&apos;, 4), (&apos;Fish&amp;Chips&apos;, 7), (&apos;Salmon&apos;, 7)]&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;[(&apos;Pasta&apos;, 2), (&apos;Fish&amp;Chips&apos;, 8), (&apos;Shrimp&apos;, 3), (&apos;Salmon&apos;, 6)]&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;[(&apos;Pasta&apos;, 5), (&apos;Fish&amp;Chips&apos;, 10), (&apos;Salmon&apos;, 3), (&apos;Shrimp&apos;, 6)]&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;[(&apos;Pasta&apos;, 7), (&apos;Salmon&apos;, 3), (&apos;Shrimp&apos;, 1)]&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;[(&apos;Salad&apos;, 5), (&apos;Steak&apos;, 1), (&apos;Chicken&apos;, 2), (&apos;Burger&apos;, 10)]&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;[(&apos;Salmon&apos;, 6), (&apos;Pasta&apos;, 6)]&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;[(&apos;Steak&apos;, 2), (&apos;Chicken&apos;, 8)]&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;[(&apos;Steak&apos;, 3), (&apos;Chicken&apos;, 7), (&apos;Burger&apos;, 10), (&apos;Salad&apos;, 5), (&apos;Fries&apos;, 7)]&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;[(&apos;Cereal&apos;, 10), (&apos;Eggs&apos;, 2), (&apos;Pancake&apos;, 9)]&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;[(&apos;Cereal&apos;, 3), (&apos;Eggs&apos;, 2)]&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;[(&apos;Cereal&apos;, 3), (&apos;Pancake&apos;, 1), (&apos;Eggs&apos;, 8)]&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;[(&apos;Chicken&apos;, 7), (&apos;Burger&apos;, 6)]&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;[(&apos;Chicken&apos;, 7), (&apos;Steak&apos;, 9), (&apos;Salad&apos;, 1), (&apos;Burger&apos;, 1)]&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;[(&apos;Coffee&apos;, 5), (&apos;Eggs&apos;, 2), (&apos;Cereal&apos;, 7), (&apos;Pancake&apos;, 4)]&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;[(&apos;Eggs&apos;, 1), (&apos;Pancake&apos;, 8)]&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;[(&apos;Eggs&apos;, 3), (&apos;Coffee&apos;, 6), (&apos;Cereal&apos;, 2)]&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;[(&apos;Eggs&apos;, 7), (&apos;Pancake&apos;, 1), (&apos;Cereal&apos;, 9), (&apos;Coffee&apos;, 2)]&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;[(&apos;Fish&amp;Chips&apos;, 3), (&apos;Shrimp&apos;, 9)]&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;[(&apos;Fish&amp;Chips&apos;, 4), (&apos;Salmon&apos;, 7), (&apos;Pasta&apos;, 8), (&apos;Shrimp&apos;, 5)]&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;[(&apos;Pancake&apos;, 2), (&apos;Cereal&apos;, 9), (&apos;Eggs&apos;, 6)]&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;[(&apos;Pancake&apos;, 6), (&apos;Eggs&apos;, 2)]&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;[(&apos;Pancake&apos;, 9), (&apos;Cereal&apos;, 2), (&apos;Coffee&apos;, 9), (&apos;Eggs&apos;, 8)]&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;[(&apos;Pancake&apos;, 9), (&apos;Coffee&apos;, 5), (&apos;Cereal&apos;, 2)]&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;[(&apos;Pasta&apos;, 10), (&apos;Shrimp&apos;, 8), (&apos;Salmon&apos;, 10), (&apos;Fish&amp;Chips&apos;, 3)]&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;[(&apos;Pasta&apos;, 8), (&apos;Fish&amp;Chips&apos;, 4), (&apos;Shrimp&apos;, 5)]&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;[(&apos;Pasta&apos;, 8), (&apos;Fish&amp;Chips&apos;, 6)]&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;[(&apos;Salad&apos;, 1), (&apos;Burger&apos;, 7), (&apos;Chicken&apos;, 7), (&apos;Steak&apos;, 4), (&apos;Fries&apos;, 8)]&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;[(&apos;Salad&apos;, 1), (&apos;Chicken&apos;, 3), (&apos;Burger&apos;, 4)]&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;[(&apos;Salad&apos;, 4), (&apos;Steak&apos;, 8), (&apos;Fries&apos;, 4), (&apos;Burger&apos;, 10)]&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;[(&apos;Shrimp&apos;, 9), (&apos;Salmon&apos;, 2), (&apos;Pasta&apos;, 4), (&apos;Fish&amp;Chips&apos;, 9)]&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;[(&apos;Steak&apos;, 5), (&apos;Fries&apos;, 10)]&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;[(&apos;Steak&apos;, 6), (&apos;Burger&apos;, 7), (&apos;Salad&apos;, 7), (&apos;Chicken&apos;, 7)]&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;[(&apos;Steak&apos;, 7), (&apos;Salad&apos;, 1), (&apos;Burger&apos;, 7)]&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;[(&apos;Cereal&apos;, 6), (&apos;Eggs&apos;, 7), (&apos;Coffee&apos;, 9)]&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;[(&apos;Cereal&apos;, 7), (&apos;Eggs&apos;, 1), (&apos;Pancake&apos;, 8), (&apos;Coffee&apos;, 1)]&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;[(&apos;Cereal&apos;, 8), (&apos;Coffee&apos;, 10)]&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;[(&apos;Chicken&apos;, 5), (&apos;Burger&apos;, 9)]&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;[(&apos;Coffee&apos;, 2), (&apos;Cereal&apos;, 4), (&apos;Eggs&apos;, 3)]&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;[(&apos;Eggs&apos;, 1), (&apos;Cereal&apos;, 1), (&apos;Pancake&apos;, 3)]&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;[(&apos;Eggs&apos;, 1), (&apos;Coffee&apos;, 4)]&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;[(&apos;Fish&amp;Chips&apos;, 4), (&apos;Shrimp&apos;, 1), (&apos;Pasta&apos;, 1)]&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;[(&apos;Fish&amp;Chips&apos;, 7), (&apos;Pasta&apos;, 4), (&apos;Shrimp&apos;, 4), (&apos;Salmon&apos;, 3)]&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;[(&apos;Pancake&apos;, 2), (&apos;Cereal&apos;, 7)]&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;[(&apos;Pancake&apos;, 5), (&apos;Cereal&apos;, 10)]&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;[(&apos;Pancake&apos;, 6), (&apos;Coffee&apos;, 4), (&apos;Eggs&apos;, 8), (&apos;Cereal&apos;, 6)]&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;[(&apos;Pancake&apos;, 6), (&apos;Coffee&apos;, 8), (&apos;Eggs&apos;, 3)]&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;[(&apos;Pancake&apos;, 9), (&apos;Cereal&apos;, 10), (&apos;Coffee&apos;, 1), (&apos;Eggs&apos;, 6)]&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;[(&apos;Pancake&apos;, 9), (&apos;Cereal&apos;, 6), (&apos;Coffee&apos;, 9)]&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;[(&apos;Pasta&apos;, 10), (&apos;Shrimp&apos;, 6)]&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;[(&apos;Pasta&apos;, 3), (&apos;Fish&amp;Chips&apos;, 3), (&apos;Salmon&apos;, 3)]&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;[(&apos;Salad&apos;, 5), (&apos;Steak&apos;, 9), (&apos;Fries&apos;, 8), (&apos;Chicken&apos;, 4), (&apos;Burger&apos;, 10)]&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;[(&apos;Salmon&apos;, 4), (&apos;Fish&amp;Chips&apos;, 4), (&apos;Shrimp&apos;, 5), (&apos;Pasta&apos;, 8)]&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;[(&apos;Salmon&apos;, 7), (&apos;Pasta&apos;, 4), (&apos;Fish&amp;Chips&apos;, 10)]&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;[(&apos;Shrimp&apos;, 2), (&apos;Fish&amp;Chips&apos;, 5), (&apos;Pasta&apos;, 9), (&apos;Salmon&apos;, 10)]&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;[(&apos;Shrimp&apos;, 4), (&apos;Salmon&apos;, 2), (&apos;Fish&amp;Chips&apos;, 3), (&apos;Pasta&apos;, 4)]&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;[(&apos;Steak&apos;, 3), (&apos;Chicken&apos;, 6), (&apos;Burger&apos;, 10)]&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;[(&apos;Steak&apos;, 4), (&apos;Salad&apos;, 10), (&apos;Fries&apos;, 3)]&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;[(&apos;Steak&apos;, 9), (&apos;Chicken&apos;, 7), (&apos;Fries&apos;, 5), (&apos;Salad&apos;, 9)]&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;[(&apos;Cereal&apos;, 1), (&apos;Eggs&apos;, 10), (&apos;Pancake&apos;, 5)]&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;[(&apos;Cereal&apos;, 7), (&apos;Coffee&apos;, 8)]&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;[(&apos;Cereal&apos;, 8), (&apos;Coffee&apos;, 1), (&apos;Eggs&apos;, 6), (&apos;Pancake&apos;, 4)]&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;[(&apos;Chicken&apos;, 1), (&apos;Salad&apos;, 4), (&apos;Burger&apos;, 9)]&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;[(&apos;Chicken&apos;, 7), (&apos;Steak&apos;, 9), (&apos;Burger&apos;, 3)]&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;[(&apos;Coffee&apos;, 1), (&apos;Eggs&apos;, 8)]&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;[(&apos;Eggs&apos;, 10), (&apos;Coffee&apos;, 9)]&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;[(&apos;Eggs&apos;, 5), (&apos;Pancake&apos;, 3), (&apos;Cereal&apos;, 1), (&apos;Coffee&apos;, 4)]&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;[(&apos;Fish&amp;Chips&apos;, 1), (&apos;Pasta&apos;, 2), (&apos;Shrimp&apos;, 1)]&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;[(&apos;Fish&amp;Chips&apos;, 1), (&apos;Pasta&apos;, 2)]&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;[(&apos;Fish&amp;Chips&apos;, 10), (&apos;Salmon&apos;, 10), (&apos;Pasta&apos;, 1), (&apos;Shrimp&apos;, 6)]&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;[(&apos;Fish&amp;Chips&apos;, 3), (&apos;Salmon&apos;, 10), (&apos;Shrimp&apos;, 2)]&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;[(&apos;Fries&apos;, 6), (&apos;Steak&apos;, 6)]&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;[(&apos;Fries&apos;, 9), (&apos;Steak&apos;, 8), (&apos;Burger&apos;, 10), (&apos;Salad&apos;, 2)]&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;[(&apos;Pasta&apos;, 1), (&apos;Shrimp&apos;, 6), (&apos;Salmon&apos;, 10)]&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;[(&apos;Pasta&apos;, 1), (&apos;Shrimp&apos;, 8)]&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;[(&apos;Pasta&apos;, 4), (&apos;Salmon&apos;, 1), (&apos;Shrimp&apos;, 2)]&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;[(&apos;Pasta&apos;, 6), (&apos;Fish&amp;Chips&apos;, 8), (&apos;Shrimp&apos;, 6), (&apos;Salmon&apos;, 5)]&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;[(&apos;Pasta&apos;, 7), (&apos;Fish&amp;Chips&apos;, 4), (&apos;Salmon&apos;, 8)]&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;[(&apos;Salad&apos;, 10), (&apos;Steak&apos;, 4), (&apos;Chicken&apos;, 2), (&apos;Burger&apos;, 1), (&apos;Fries&apos;, 4)]&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;[(&apos;Salmon&apos;, 3), (&apos;Pasta&apos;, 7), (&apos;Shrimp&apos;, 7), (&apos;Fish&amp;Chips&apos;, 6)]&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;[(&apos;Salmon&apos;, 9), (&apos;Shrimp&apos;, 3), (&apos;Pasta&apos;, 2)]&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;[(&apos;Shrimp&apos;, 2), (&apos;Fish&amp;Chips&apos;, 6), (&apos;Pasta&apos;, 4)]&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;[(&apos;Steak&apos;, 2), (&apos;Salad&apos;, 1), (&apos;Fries&apos;, 5), (&apos;Burger&apos;, 5)]&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;[(&apos;Steak&apos;, 3), (&apos;Fries&apos;, 1), (&apos;Salad&apos;, 4), (&apos;Chicken&apos;, 10)]&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;[(&apos;Burger&apos;, 8), (&apos;Fries&apos;, 2), (&apos;Chicken&apos;, 8), (&apos;Salad&apos;, 9), (&apos;Steak&apos;, 8)]&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;[(&apos;Cereal&apos;, 4), (&apos;Coffee&apos;, 4), (&apos;Eggs&apos;, 10)]&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;[(&apos;Cereal&apos;, 5), (&apos;Coffee&apos;, 9), (&apos;Pancake&apos;, 9)]&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;[(&apos;Chicken&apos;, 6), (&apos;Salad&apos;, 2), (&apos;Steak&apos;, 8), (&apos;Fries&apos;, 10)]&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;[(&apos;Coffee&apos;, 2), (&apos;Eggs&apos;, 7), (&apos;Pancake&apos;, 6)]&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;[(&apos;Coffee&apos;, 2), (&apos;Eggs&apos;, 7)]&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;[(&apos;Coffee&apos;, 5), (&apos;Eggs&apos;, 2), (&apos;Pancake&apos;, 1), (&apos;Cereal&apos;, 1)]&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;[(&apos;Coffee&apos;, 6), (&apos;Cereal&apos;, 1)]&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;[(&apos;Eggs&apos;, 10), (&apos;Coffee&apos;, 1), (&apos;Pancake&apos;, 2)]&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;[(&apos;Eggs&apos;, 6), (&apos;Pancake&apos;, 9)]&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;[(&apos;Fish&amp;Chips&apos;, 1), (&apos;Pasta&apos;, 6)]&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;[(&apos;Fish&amp;Chips&apos;, 10), (&apos;Pasta&apos;, 8), (&apos;Shrimp&apos;, 7)]&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;[(&apos;Fish&amp;Chips&apos;, 5), (&apos;Pasta&apos;, 5), (&apos;Salmon&apos;, 8), (&apos;Shrimp&apos;, 4)]&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;[(&apos;Fish&amp;Chips&apos;, 6), (&apos;Shrimp&apos;, 2), (&apos;Pasta&apos;, 6)]&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;[(&apos;Pancake&apos;, 1), (&apos;Cereal&apos;, 6), (&apos;Coffee&apos;, 10)]&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;[(&apos;Pasta&apos;, 10), (&apos;Salmon&apos;, 8)]&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;[(&apos;Salad&apos;, 4), (&apos;Steak&apos;, 10)]&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;[(&apos;Salad&apos;, 5), (&apos;Burger&apos;, 4), (&apos;Steak&apos;, 8)]&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;[(&apos;Salad&apos;, 8), (&apos;Fries&apos;, 4), (&apos;Burger&apos;, 6)]&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;[(&apos;Salad&apos;, 9), (&apos;Burger&apos;, 3)]&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;[(&apos;Salmon&apos;, 6), (&apos;Fish&amp;Chips&apos;, 4), (&apos;Pasta&apos;, 1)]&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;[(&apos;Salmon&apos;, 8), (&apos;Shrimp&apos;, 7), (&apos;Fish&amp;Chips&apos;, 2), (&apos;Pasta&apos;, 1)]&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;[(&apos;Shrimp&apos;, 6), (&apos;Salmon&apos;, 8)]&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;[(&apos;Steak&apos;, 5), (&apos;Chicken&apos;, 1), (&apos;Fries&apos;, 7), (&apos;Salad&apos;, 6)]&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;[(&apos;Steak&apos;, 9), (&apos;Burger&apos;, 7), (&apos;Chicken&apos;, 4)]&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;[(&apos;Burger&apos;, 1), (&apos;Steak&apos;, 10)]&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;[(&apos;Burger&apos;, 6), (&apos;Salad&apos;, 10), (&apos;Fries&apos;, 4), (&apos;Steak&apos;, 3), (&apos;Chicken&apos;, 5)]&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;[(&apos;Chicken&apos;, 10), (&apos;Burger&apos;, 10), (&apos;Salad&apos;, 10)]&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;[(&apos;Chicken&apos;, 2), (&apos;Fries&apos;, 5)]&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;[(&apos;Chicken&apos;, 7), (&apos;Steak&apos;, 3), (&apos;Fries&apos;, 1)]&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;[(&apos;Chicken&apos;, 9), (&apos;Fries&apos;, 2)]&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;[(&apos;Chicken&apos;, 9), (&apos;Steak&apos;, 4), (&apos;Salad&apos;, 4), (&apos;Burger&apos;, 5)]&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;[(&apos;Coffee&apos;, 6), (&apos;Eggs&apos;, 5), (&apos;Cereal&apos;, 10), (&apos;Pancake&apos;, 2)]&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;[(&apos;Coffee&apos;, 7), (&apos;Eggs&apos;, 6), (&apos;Pancake&apos;, 5), (&apos;Cereal&apos;, 4)]&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;[(&apos;Eggs&apos;, 5), (&apos;Coffee&apos;, 4), (&apos;Cereal&apos;, 3), (&apos;Pancake&apos;, 3)]&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;[(&apos;Eggs&apos;, 7), (&apos;Cereal&apos;, 1)]&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;[(&apos;Eggs&apos;, 8), (&apos;Pancake&apos;, 2)]&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;[(&apos;Fish&amp;Chips&apos;, 10), (&apos;Pasta&apos;, 2), (&apos;Shrimp&apos;, 3), (&apos;Salmon&apos;, 2)]&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;[(&apos;Fish&amp;Chips&apos;, 4), (&apos;Shrimp&apos;, 4), (&apos;Pasta&apos;, 3), (&apos;Salmon&apos;, 4)]&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;[(&apos;Fish&amp;Chips&apos;, 5), (&apos;Shrimp&apos;, 8), (&apos;Salmon&apos;, 6)]&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;[(&apos;Fries&apos;, 1), (&apos;Salad&apos;, 3)]&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;[(&apos;Fries&apos;, 5), (&apos;Burger&apos;, 3), (&apos;Steak&apos;, 4)]&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;[(&apos;Pancake&apos;, 6), (&apos;Eggs&apos;, 4), (&apos;Cereal&apos;, 10)]&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;[(&apos;Pasta&apos;, 1), (&apos;Fish&amp;Chips&apos;, 4)]&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;[(&apos;Pasta&apos;, 1), (&apos;Shrimp&apos;, 7), (&apos;Salmon&apos;, 4)]&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;[(&apos;Pasta&apos;, 2), (&apos;Salmon&apos;, 2), (&apos;Shrimp&apos;, 7)]&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;[(&apos;Pasta&apos;, 6), (&apos;Salmon&apos;, 2)]&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;[(&apos;Salad&apos;, 4), (&apos;Chicken&apos;, 9), (&apos;Burger&apos;, 9), (&apos;Steak&apos;, 2), (&apos;Fries&apos;, 2)]&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;[(&apos;Salmon&apos;, 4), (&apos;Fish&amp;Chips&apos;, 1)]&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;[(&apos;Salmon&apos;, 5), (&apos;Fish&amp;Chips&apos;, 8), (&apos;Shrimp&apos;, 6), (&apos;Pasta&apos;, 5)]&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;[(&apos;Burger&apos;, 4), (&apos;Fries&apos;, 3)]&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;[(&apos;Cereal&apos;, 3), (&apos;Coffee&apos;, 2), (&apos;Eggs&apos;, 3), (&apos;Pancake&apos;, 2)]&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;[(&apos;Cereal&apos;, 5), (&apos;Eggs&apos;, 4), (&apos;Pancake&apos;, 9)]&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;[(&apos;Cereal&apos;, 5), (&apos;Pancake&apos;, 10)]&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;[(&apos;Chicken&apos;, 2), (&apos;Salad&apos;, 6), (&apos;Burger&apos;, 10)]&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;[(&apos;Chicken&apos;, 5), (&apos;Burger&apos;, 1), (&apos;Steak&apos;, 1), (&apos;Salad&apos;, 4)]&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;[(&apos;Chicken&apos;, 9), (&apos;Salad&apos;, 3), (&apos;Burger&apos;, 2), (&apos;Fries&apos;, 9)]&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;[(&apos;Coffee&apos;, 3), (&apos;Eggs&apos;, 1)]&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;[(&apos;Eggs&apos;, 10), (&apos;Coffee&apos;, 4), (&apos;Cereal&apos;, 5), (&apos;Pancake&apos;, 10)]&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;[(&apos;Eggs&apos;, 4), (&apos;Pancake&apos;, 1)]&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;[(&apos;Eggs&apos;, 8), (&apos;Coffee&apos;, 6)]&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;[(&apos;Fish&amp;Chips&apos;, 7), (&apos;Pasta&apos;, 9), (&apos;Salmon&apos;, 9), (&apos;Shrimp&apos;, 3)]&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;[(&apos;Fish&amp;Chips&apos;, 8), (&apos;Pasta&apos;, 4), (&apos;Shrimp&apos;, 2), (&apos;Salmon&apos;, 6)]&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;[(&apos;Fries&apos;, 2), (&apos;Burger&apos;, 7)]&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;[(&apos;Fries&apos;, 6), (&apos;Burger&apos;, 6), (&apos;Steak&apos;, 4)]&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;[(&apos;Pancake&apos;, 6), (&apos;Cereal&apos;, 6)]&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;[(&apos;Pancake&apos;, 8), (&apos;Eggs&apos;, 5), (&apos;Cereal&apos;, 4)]&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;[(&apos;Pancake&apos;, 9), (&apos;Coffee&apos;, 3), (&apos;Eggs&apos;, 4)]&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;[(&apos;Pasta&apos;, 10), (&apos;Salmon&apos;, 1), (&apos;Shrimp&apos;, 1)]&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;[(&apos;Pasta&apos;, 6), (&apos;Salmon&apos;, 8), (&apos;Fish&amp;Chips&apos;, 1), (&apos;Shrimp&apos;, 3)]&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;[(&apos;Salmon&apos;, 10), (&apos;Pasta&apos;, 2), (&apos;Shrimp&apos;, 7)]&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;[(&apos;Salmon&apos;, 2), (&apos;Fish&amp;Chips&apos;, 3), (&apos;Shrimp&apos;, 7)]&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;[(&apos;Salmon&apos;, 4), (&apos;Pasta&apos;, 8), (&apos;Fish&amp;Chips&apos;, 5), (&apos;Shrimp&apos;, 7)]&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;[(&apos;Shrimp&apos;, 3), (&apos;Fish&amp;Chips&apos;, 5), (&apos;Pasta&apos;, 6), (&apos;Salmon&apos;, 7)]&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;[(&apos;Shrimp&apos;, 8), (&apos;Salmon&apos;, 5)]&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;[(&apos;Burger&apos;, 3), (&apos;Steak&apos;, 2), (&apos;Chicken&apos;, 2), (&apos;Fries&apos;, 5), (&apos;Salad&apos;, 6)]&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;[(&apos;Burger&apos;, 7), (&apos;Steak&apos;, 10), (&apos;Salad&apos;, 10)]&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;[(&apos;Burger&apos;, 8), (&apos;Fries&apos;, 3), (&apos;Steak&apos;, 6), (&apos;Salad&apos;, 3), (&apos;Chicken&apos;, 10)]&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;[(&apos;Cereal&apos;, 5), (&apos;Eggs&apos;, 3), (&apos;Coffee&apos;, 6), (&apos;Pancake&apos;, 1)]&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;[(&apos;Chicken&apos;, 3), (&apos;Burger&apos;, 2), (&apos;Salad&apos;, 8), (&apos;Steak&apos;, 2)]&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;[(&apos;Chicken&apos;, 4), (&apos;Fries&apos;, 3), (&apos;Salad&apos;, 9), (&apos;Burger&apos;, 6)]&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;[(&apos;Chicken&apos;, 4), (&apos;Fries&apos;, 4), (&apos;Salad&apos;, 6), (&apos;Burger&apos;, 5)]&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;[(&apos;Coffee&apos;, 3), (&apos;Cereal&apos;, 7), (&apos;Eggs&apos;, 6)]&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;[(&apos;Coffee&apos;, 3), (&apos;Eggs&apos;, 4)]&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;[(&apos;Coffee&apos;, 4), (&apos;Cereal&apos;, 9), (&apos;Pancake&apos;, 1), (&apos;Eggs&apos;, 1)]&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;[(&apos;Coffee&apos;, 6), (&apos;Cereal&apos;, 7)]&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;[(&apos;Coffee&apos;, 8), (&apos;Eggs&apos;, 2), (&apos;Pancake&apos;, 3), (&apos;Cereal&apos;, 2)]&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;[(&apos;Fish&amp;Chips&apos;, 6), (&apos;Pasta&apos;, 4), (&apos;Shrimp&apos;, 1), (&apos;Salmon&apos;, 9)]&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;[(&apos;Fish&amp;Chips&apos;, 9), (&apos;Salmon&apos;, 1), (&apos;Shrimp&apos;, 8)]&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;[(&apos;Fries&apos;, 2), (&apos;Burger&apos;, 6), (&apos;Chicken&apos;, 2), (&apos;Salad&apos;, 3), (&apos;Steak&apos;, 8)]&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;[(&apos;Fries&apos;, 2), (&apos;Chicken&apos;, 3), (&apos;Salad&apos;, 4), (&apos;Steak&apos;, 3), (&apos;Burger&apos;, 10)]&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;[(&apos;Fries&apos;, 6), (&apos;Chicken&apos;, 8)]&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;[(&apos;Pancake&apos;, 1), (&apos;Eggs&apos;, 6)]&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;[(&apos;Pasta&apos;, 3), (&apos;Salmon&apos;, 7)]&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;[(&apos;Pasta&apos;, 4), (&apos;Fish&amp;Chips&apos;, 7), (&apos;Salmon&apos;, 5)]&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;[(&apos;Salad&apos;, 5), (&apos;Chicken&apos;, 10), (&apos;Burger&apos;, 6)]&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;[(&apos;Salad&apos;, 7), (&apos;Steak&apos;, 5)]&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;[(&apos;Salmon&apos;, 1), (&apos;Shrimp&apos;, 8)]&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;[(&apos;Shrimp&apos;, 7), (&apos;Salmon&apos;, 2), (&apos;Fish&amp;Chips&apos;, 9), (&apos;Pasta&apos;, 9)]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[(&apos;Burger&apos;, 1), (&apos;Chicken&apos;, 7), (&apos;Salad&apos;, 8), (&apos;Steak&apos;, 4)]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[(&apos;Burger&apos;, 5), (&apos;Steak&apos;, 7), (&apos;Fries&apos;, 1), (&apos;Chicken&apos;, 4)]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[(&apos;Cereal&apos;, 5), (&apos;Pancake&apos;, 4)]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[(&apos;Cereal&apos;, 7), (&apos;Pancake&apos;, 2), (&apos;Coffee&apos;, 1), (&apos;Eggs&apos;, 7)]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[(&apos;Chicken&apos;, 3), (&apos;Burger&apos;, 7), (&apos;Salad&apos;, 1), (&apos;Steak&apos;, 2)]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[(&apos;Chicken&apos;, 5), (&apos;Burger&apos;, 9), (&apos;Fries&apos;, 3), (&apos;Steak&apos;, 4), (&apos;Salad&apos;, 6)]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[(&apos;Chicken&apos;, 8), (&apos;Steak&apos;, 4), (&apos;Salad&apos;, 1)]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[(&apos;Coffee&apos;, 10), (&apos;Pancake&apos;, 4)]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[(&apos;Coffee&apos;, 6), (&apos;Pancake&apos;, 1)]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[(&apos;Coffee&apos;, 6), (&apos;Pancake&apos;, 10), (&apos;Eggs&apos;, 9)]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[(&apos;Eggs&apos;, 9), (&apos;Cereal&apos;, 1), (&apos;Coffee&apos;, 8)]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[(&apos;Eggs&apos;, 9), (&apos;Coffee&apos;, 7)]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[(&apos;Fish&amp;Chips&apos;, 2), (&apos;Pasta&apos;, 3), (&apos;Salmon&apos;, 4)]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[(&apos;Fish&amp;Chips&apos;, 5), (&apos;Salmon&apos;, 4)]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[(&apos;Fries&apos;, 4), (&apos;Chicken&apos;, 4), (&apos;Steak&apos;, 7), (&apos;Burger&apos;, 1)]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[(&apos;Pasta&apos;, 1), (&apos;Fish&amp;Chips&apos;, 3)]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[(&apos;Salad&apos;, 1), (&apos;Burger&apos;, 8), (&apos;Steak&apos;, 3), (&apos;Fries&apos;, 5), (&apos;Chicken&apos;, 8)]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[(&apos;Salad&apos;, 4), (&apos;Burger&apos;, 7), (&apos;Steak&apos;, 10), (&apos;Fries&apos;, 6)]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[(&apos;Salmon&apos;, 1), (&apos;Shrimp&apos;, 2), (&apos;Pasta&apos;, 3)]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[(&apos;Salmon&apos;, 7), (&apos;Pasta&apos;, 8), (&apos;Shrimp&apos;, 2), (&apos;Fish&amp;Chips&apos;, 10)]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[(&apos;Shrimp&apos;, 3), (&apos;Fish&amp;Chips&apos;, 2), (&apos;Pasta&apos;, 6)]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[(&apos;Shrimp&apos;, 4), (&apos;Salmon&apos;, 9), (&apos;Fish&amp;Chips&apos;, 2)]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[(&apos;Shrimp&apos;, 9), (&apos;Pasta&apos;, 9), (&apos;Salmon&apos;, 8)]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[(&apos;Steak&apos;, 1), (&apos;Chicken&apos;, 5), (&apos;Salad&apos;, 3), (&apos;Fries&apos;, 10)]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[(&apos;Steak&apos;, 8), (&apos;Salad&apos;, 2), (&apos;Burger&apos;, 10), (&apos;Chicken&apos;, 6)]&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;[(&apos;Burger&apos;, 10), (&apos;Fries&apos;, 1)]&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;[(&apos;Cereal&apos;, 10), (&apos;Pancake&apos;, 10), (&apos;Eggs&apos;, 4), (&apos;Coffee&apos;, 10)]&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;[(&apos;Cereal&apos;, 10), (&apos;Pancake&apos;, 7)]&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;[(&apos;Cereal&apos;, 2), (&apos;Pancake&apos;, 4), (&apos;Eggs&apos;, 3)]&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;[(&apos;Cereal&apos;, 5), (&apos;Eggs&apos;, 3), (&apos;Coffee&apos;, 5), (&apos;Pancake&apos;, 1)]&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;[(&apos;Chicken&apos;, 1), (&apos;Burger&apos;, 10)]&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;[(&apos;Chicken&apos;, 3), (&apos;Salad&apos;, 4), (&apos;Steak&apos;, 3), (&apos;Burger&apos;, 2)]&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;[(&apos;Chicken&apos;, 6), (&apos;Burger&apos;, 3), (&apos;Steak&apos;, 8), (&apos;Fries&apos;, 2), (&apos;Salad&apos;, 3)]&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;[(&apos;Chicken&apos;, 8), (&apos;Steak&apos;, 2), (&apos;Salad&apos;, 7), (&apos;Burger&apos;, 2), (&apos;Fries&apos;, 4)]&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;[(&apos;Coffee&apos;, 1), (&apos;Pancake&apos;, 8), (&apos;Cereal&apos;, 4)]&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;[(&apos;Fish&amp;Chips&apos;, 1), (&apos;Salmon&apos;, 4), (&apos;Shrimp&apos;, 7), (&apos;Pasta&apos;, 3)]&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;[(&apos;Fish&amp;Chips&apos;, 1), (&apos;Shrimp&apos;, 2)]&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;[(&apos;Fish&amp;Chips&apos;, 5), (&apos;Pasta&apos;, 5), (&apos;Shrimp&apos;, 2)]&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;[(&apos;Fries&apos;, 10), (&apos;Chicken&apos;, 1), (&apos;Salad&apos;, 2), (&apos;Steak&apos;, 10), (&apos;Burger&apos;, 4)]&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;[(&apos;Fries&apos;, 9), (&apos;Salad&apos;, 4)]&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;[(&apos;Pancake&apos;, 1), (&apos;Coffee&apos;, 3), (&apos;Cereal&apos;, 10)]&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;[(&apos;Pancake&apos;, 2), (&apos;Coffee&apos;, 2), (&apos;Cereal&apos;, 1)]&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;[(&apos;Pasta&apos;, 2), (&apos;Salmon&apos;, 8), (&apos;Fish&amp;Chips&apos;, 4), (&apos;Shrimp&apos;, 7)]&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;[(&apos;Pasta&apos;, 6), (&apos;Fish&amp;Chips&apos;, 3), (&apos;Salmon&apos;, 4), (&apos;Shrimp&apos;, 7)]&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;[(&apos;Pasta&apos;, 9), (&apos;Fish&amp;Chips&apos;, 6)]&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;[(&apos;Shrimp&apos;, 3), (&apos;Pasta&apos;, 6), (&apos;Salmon&apos;, 8), (&apos;Fish&amp;Chips&apos;, 9)]&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;[(&apos;Steak&apos;, 10), (&apos;Fries&apos;, 7), (&apos;Burger&apos;, 8), (&apos;Chicken&apos;, 10)]&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;[(&apos;Steak&apos;, 4), (&apos;Fries&apos;, 3), (&apos;Chicken&apos;, 3), (&apos;Burger&apos;, 7)]&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;[(&apos;Steak&apos;, 6), (&apos;Fries&apos;, 10), (&apos;Salad&apos;, 6)]&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;[(&apos;Steak&apos;, 7), (&apos;Fries&apos;, 7)]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[(&apos;Burger&apos;, 8), (&apos;Fries&apos;, 8), (&apos;Chicken&apos;, 10), (&apos;Salad&apos;, 7)]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[(&apos;Chicken&apos;, 3), (&apos;Burger&apos;, 5), (&apos;Fries&apos;, 8), (&apos;Salad&apos;, 2)]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[(&apos;Coffee&apos;, 6), (&apos;Cereal&apos;, 2), (&apos;Eggs&apos;, 8)]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[(&apos;Eggs&apos;, 1), (&apos;Cereal&apos;, 4)]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[(&apos;Eggs&apos;, 10), (&apos;Cereal&apos;, 10)]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[(&apos;Eggs&apos;, 10), (&apos;Coffee&apos;, 2)]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[(&apos;Eggs&apos;, 10), (&apos;Pancake&apos;, 10)]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[(&apos;Eggs&apos;, 2), (&apos;Cereal&apos;, 4), (&apos;Pancake&apos;, 7)]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[(&apos;Fish&amp;Chips&apos;, 1), (&apos;Salmon&apos;, 10), (&apos;Shrimp&apos;, 10)]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[(&apos;Fish&amp;Chips&apos;, 2), (&apos;Salmon&apos;, 6), (&apos;Shrimp&apos;, 1), (&apos;Pasta&apos;, 8)]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[(&apos;Fries&apos;, 1), (&apos;Chicken&apos;, 3), (&apos;Burger&apos;, 10), (&apos;Steak&apos;, 7)]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[(&apos;Fries&apos;, 5), (&apos;Burger&apos;, 5)]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[(&apos;Fries&apos;, 7), (&apos;Chicken&apos;, 10), (&apos;Steak&apos;, 6)]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[(&apos;Fries&apos;, 9), (&apos;Chicken&apos;, 2), (&apos;Salad&apos;, 10)]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[(&apos;Pancake&apos;, 10), (&apos;Cereal&apos;, 6)]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[(&apos;Pancake&apos;, 2), (&apos;Coffee&apos;, 8), (&apos;Eggs&apos;, 6), (&apos;Cereal&apos;, 8)]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[(&apos;Pancake&apos;, 5), (&apos;Coffee&apos;, 9)]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[(&apos;Pasta&apos;, 1), (&apos;Salmon&apos;, 3)]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[(&apos;Shrimp&apos;, 2), (&apos;Salmon&apos;, 5), (&apos;Fish&amp;Chips&apos;, 9)]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[(&apos;Shrimp&apos;, 4), (&apos;Salmon&apos;, 5), (&apos;Pasta&apos;, 3)]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[(&apos;Shrimp&apos;, 4), (&apos;Salmon&apos;, 8)]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[(&apos;Shrimp&apos;, 5), (&apos;Pasta&apos;, 2)]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[(&apos;Shrimp&apos;, 7), (&apos;Salmon&apos;, 9), (&apos;Pasta&apos;, 3)]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[(&apos;Shrimp&apos;, 8), (&apos;Fish&amp;Chips&apos;, 9), (&apos;Pasta&apos;, 4), (&apos;Salmon&apos;, 8)]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[(&apos;Shrimp&apos;, 9), (&apos;Fish&amp;Chips&apos;, 4), (&apos;Salmon&apos;, 7)]&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;[(&apos;Burger&apos;, 6), (&apos;Chicken&apos;, 5), (&apos;Steak&apos;, 3), (&apos;Salad&apos;, 7)]&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;[(&apos;Burger&apos;, 7), (&apos;Chicken&apos;, 6), (&apos;Steak&apos;, 9), (&apos;Salad&apos;, 2)]&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;[(&apos;Burger&apos;, 9), (&apos;Chicken&apos;, 5), (&apos;Steak&apos;, 2), (&apos;Fries&apos;, 10)]&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;[(&apos;Cereal&apos;, 1), (&apos;Eggs&apos;, 8)]&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;[(&apos;Cereal&apos;, 1), (&apos;Pancake&apos;, 1), (&apos;Coffee&apos;, 1)]&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;[(&apos;Chicken&apos;, 1), (&apos;Fries&apos;, 7)]&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;[(&apos;Chicken&apos;, 1), (&apos;Salad&apos;, 7), (&apos;Burger&apos;, 3)]&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;[(&apos;Chicken&apos;, 5), (&apos;Fries&apos;, 7), (&apos;Burger&apos;, 1)]&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;[(&apos;Chicken&apos;, 8), (&apos;Salad&apos;, 6), (&apos;Fries&apos;, 8), (&apos;Burger&apos;, 8), (&apos;Steak&apos;, 1)]&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;[(&apos;Coffee&apos;, 10), (&apos;Cereal&apos;, 8), (&apos;Pancake&apos;, 7)]&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;[(&apos;Coffee&apos;, 10), (&apos;Cereal&apos;, 9), (&apos;Eggs&apos;, 8)]&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;[(&apos;Coffee&apos;, 4), (&apos;Pancake&apos;, 7), (&apos;Eggs&apos;, 3), (&apos;Cereal&apos;, 5)]&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;[(&apos;Coffee&apos;, 6), (&apos;Cereal&apos;, 5), (&apos;Pancake&apos;, 10), (&apos;Eggs&apos;, 8)]&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;[(&apos;Coffee&apos;, 6), (&apos;Cereal&apos;, 6), (&apos;Pancake&apos;, 9)]&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;[(&apos;Fish&amp;Chips&apos;, 2), (&apos;Salmon&apos;, 10)]&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;[(&apos;Fish&amp;Chips&apos;, 3), (&apos;Salmon&apos;, 10)]&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;[(&apos;Fish&amp;Chips&apos;, 6), (&apos;Shrimp&apos;, 9)]&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;[(&apos;Fries&apos;, 1), (&apos;Burger&apos;, 5)]&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;[(&apos;Fries&apos;, 10), (&apos;Salad&apos;, 6)]&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;[(&apos;Pancake&apos;, 5), (&apos;Eggs&apos;, 1), (&apos;Cereal&apos;, 9)]&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;[(&apos;Pasta&apos;, 6), (&apos;Fish&amp;Chips&apos;, 3), (&apos;Salmon&apos;, 1)]&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;[(&apos;Salad&apos;, 2), (&apos;Burger&apos;, 7), (&apos;Steak&apos;, 10), (&apos;Chicken&apos;, 5), (&apos;Fries&apos;, 7)]&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;[(&apos;Salad&apos;, 2), (&apos;Steak&apos;, 7)]&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;[(&apos;Salmon&apos;, 4), (&apos;Fish&amp;Chips&apos;, 8), (&apos;Shrimp&apos;, 2), (&apos;Pasta&apos;, 9)]&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;[(&apos;Shrimp&apos;, 10), (&apos;Salmon&apos;, 6), (&apos;Pasta&apos;, 9)]&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;[(&apos;Burger&apos;, 4), (&apos;Salad&apos;, 9), (&apos;Chicken&apos;, 3)]&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;[(&apos;Burger&apos;, 8), (&apos;Steak&apos;, 8), (&apos;Salad&apos;, 7), (&apos;Fries&apos;, 8), (&apos;Chicken&apos;, 7)]&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;[(&apos;Cereal&apos;, 4), (&apos;Eggs&apos;, 4)]&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;[(&apos;Cereal&apos;, 4), (&apos;Pancake&apos;, 2)]&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;[(&apos;Chicken&apos;, 10), (&apos;Salad&apos;, 8), (&apos;Fries&apos;, 6), (&apos;Burger&apos;, 3), (&apos;Steak&apos;, 6)]&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;[(&apos;Coffee&apos;, 3), (&apos;Pancake&apos;, 1), (&apos;Cereal&apos;, 1)]&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;[(&apos;Coffee&apos;, 5), (&apos;Cereal&apos;, 3), (&apos;Eggs&apos;, 3)]&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;[(&apos;Coffee&apos;, 7), (&apos;Eggs&apos;, 2), (&apos;Cereal&apos;, 5)]&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;[(&apos;Coffee&apos;, 8), (&apos;Cereal&apos;, 5), (&apos;Eggs&apos;, 3)]&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;[(&apos;Eggs&apos;, 8), (&apos;Pancake&apos;, 10)]&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;[(&apos;Fish&amp;Chips&apos;, 10), (&apos;Pasta&apos;, 2), (&apos;Salmon&apos;, 1), (&apos;Shrimp&apos;, 3)]&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;[(&apos;Fish&amp;Chips&apos;, 2), (&apos;Salmon&apos;, 6)]&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;[(&apos;Fish&amp;Chips&apos;, 5), (&apos;Shrimp&apos;, 10), (&apos;Pasta&apos;, 9)]&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;[(&apos;Fries&apos;, 9), (&apos;Steak&apos;, 6), (&apos;Chicken&apos;, 4), (&apos;Burger&apos;, 2), (&apos;Salad&apos;, 5)]&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;[(&apos;Pancake&apos;, 6), (&apos;Cereal&apos;, 9)]&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;[(&apos;Pasta&apos;, 1), (&apos;Salmon&apos;, 8)]&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;[(&apos;Salad&apos;, 8), (&apos;Chicken&apos;, 6), (&apos;Steak&apos;, 9), (&apos;Fries&apos;, 6)]&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;[(&apos;Salmon&apos;, 1), (&apos;Fish&amp;Chips&apos;, 8), (&apos;Pasta&apos;, 2), (&apos;Shrimp&apos;, 2)]&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;[(&apos;Salmon&apos;, 10), (&apos;Pasta&apos;, 4)]&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;[(&apos;Salmon&apos;, 3), (&apos;Pasta&apos;, 2), (&apos;Shrimp&apos;, 8), (&apos;Fish&amp;Chips&apos;, 3)]&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;[(&apos;Salmon&apos;, 5), (&apos;Pasta&apos;, 9)]&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;[(&apos;Shrimp&apos;, 5), (&apos;Salmon&apos;, 2), (&apos;Pasta&apos;, 8)]&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;[(&apos;Steak&apos;, 2), (&apos;Chicken&apos;, 3), (&apos;Fries&apos;, 2), (&apos;Salad&apos;, 4)]&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;[(&apos;Steak&apos;, 3), (&apos;Fries&apos;, 1), (&apos;Chicken&apos;, 4), (&apos;Burger&apos;, 1), (&apos;Salad&apos;, 5)]&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;[(&apos;Steak&apos;, 4), (&apos;Fries&apos;, 3), (&apos;Chicken&apos;, 9), (&apos;Burger&apos;, 8)]&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;[(&apos;Burger&apos;, 3), (&apos;Steak&apos;, 2), (&apos;Chicken&apos;, 1), (&apos;Fries&apos;, 4)]&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;[(&apos;Burger&apos;, 9), (&apos;Salad&apos;, 8), (&apos;Steak&apos;, 1)]&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;[(&apos;Cereal&apos;, 3), (&apos;Coffee&apos;, 1), (&apos;Eggs&apos;, 8), (&apos;Pancake&apos;, 5)]&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;[(&apos;Cereal&apos;, 8), (&apos;Eggs&apos;, 2)]&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;[(&apos;Chicken&apos;, 5), (&apos;Fries&apos;, 9), (&apos;Steak&apos;, 9)]&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;[(&apos;Coffee&apos;, 3), (&apos;Cereal&apos;, 6)]&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;[(&apos;Eggs&apos;, 10), (&apos;Cereal&apos;, 5)]&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;[(&apos;Eggs&apos;, 10), (&apos;Coffee&apos;, 10)]&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;[(&apos;Fish&amp;Chips&apos;, 3), (&apos;Shrimp&apos;, 1), (&apos;Salmon&apos;, 8), (&apos;Pasta&apos;, 2)]&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;[(&apos;Fish&amp;Chips&apos;, 9), (&apos;Shrimp&apos;, 9), (&apos;Salmon&apos;, 3), (&apos;Pasta&apos;, 2)]&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;[(&apos;Fries&apos;, 3), (&apos;Salad&apos;, 4)]&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;[(&apos;Fries&apos;, 8), (&apos;Burger&apos;, 8)]&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;[(&apos;Pancake&apos;, 10), (&apos;Eggs&apos;, 10), (&apos;Coffee&apos;, 5)]&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;[(&apos;Pancake&apos;, 7), (&apos;Coffee&apos;, 2)]&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;[(&apos;Pasta&apos;, 1), (&apos;Shrimp&apos;, 9), (&apos;Salmon&apos;, 1), (&apos;Fish&amp;Chips&apos;, 1)]&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;[(&apos;Salad&apos;, 1), (&apos;Burger&apos;, 7)]&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;[(&apos;Salad&apos;, 5), (&apos;Chicken&apos;, 5), (&apos;Steak&apos;, 3)]&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;[(&apos;Salad&apos;, 6), (&apos;Burger&apos;, 6), (&apos;Chicken&apos;, 1), (&apos;Fries&apos;, 9)]&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;[(&apos;Salad&apos;, 8), (&apos;Steak&apos;, 8), (&apos;Fries&apos;, 2), (&apos;Chicken&apos;, 8)]&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;[(&apos;Salmon&apos;, 4), (&apos;Shrimp&apos;, 6), (&apos;Fish&amp;Chips&apos;, 4)]&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;[(&apos;Salmon&apos;, 6), (&apos;Pasta&apos;, 1), (&apos;Shrimp&apos;, 9), (&apos;Fish&amp;Chips&apos;, 2)]&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;[(&apos;Salmon&apos;, 6), (&apos;Shrimp&apos;, 9)]&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;[(&apos;Salmon&apos;, 9), (&apos;Pasta&apos;, 7), (&apos;Fish&amp;Chips&apos;, 10)]&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;[(&apos;Shrimp&apos;, 8), (&apos;Salmon&apos;, 8), (&apos;Pasta&apos;, 9), (&apos;Fish&amp;Chips&apos;, 4)]&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;[(&apos;Steak&apos;, 8), (&apos;Fries&apos;, 4)]&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:customerHasloyalty?:ok]' type='palette'>
            <map to='#4e79a7'>
              <bucket>%null%</bucket>
            </map>
            <map to='#e15759'>
              <bucket>1</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>0</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:AdhocCluster:1:ok]' type='palette'>
            <map to='#59a14f'>
              <bucket>5</bucket>
            </map>
            <map to='#aa0000'>
              <bucket>2</bucket>
            </map>
            <map to='#edc948'>
              <bucket>6</bucket>
            </map>
            <map to='#ff0000'>
              <bucket>3</bucket>
            </map>
            <map to='#ff007f'>
              <bucket>4</bucket>
            </map>
            <map to='#ffaaff'>
              <bucket>1</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:order_type:nk]' type='palette'>
            <map to='#4e79a7'>
              <bucket>%null%</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;Lunch&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Dinner&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Breakfast&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;India&quot;' />
      </semantic-values>
      <analytic-model>
        <name>
          <field name='[AnalyticModel:{40a1f67d-2e74-41a4-a848-5d21ecc402a1}]' />
        </name>
        <analytic-model-specifications class='cluster-specifications'>
          <analysis-fields>
            <field name='[federated.12vh8ue0eh2a7y1gdi8a105v0ete].[cnt:order_id:qk]' />
          </analysis-fields>
          <filter-fields />
          <lod-fields />
          <number-of-desired-clusters>4</number-of-desired-clusters>
          <is-dissagregate>false</is-dissagregate>
        </analytic-model-specifications>
        <result-fields />
      </analytic-model>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='outlier_data.csv' id='outlier_data.csv_1D226D598B08465EB1EB579E0E9F5609'>
            <properties context=''>
              <relation connection='textscan.1invvlr0n1kyn0162kljn1p03dc5' name='outlier_data.csv' table='[outlier_data#csv]' type='table'>
                <columns character-set='UTF-8' header='yes' locale='en_IN' separator=','>
                  <column datatype='string' name='order_id' ordinal='0' />
                  <column datatype='date' name='date' ordinal='1' />
                  <column datatype='datetime' name='time' ordinal='2' />
                  <column datatype='string' name='order_type' ordinal='3' />
                  <column datatype='string' name='branch_code' ordinal='4' />
                  <column datatype='string' name='order_items' ordinal='5' />
                  <column datatype='real' name='order_price' ordinal='6' />
                  <column datatype='real' name='customer_lat' ordinal='7' />
                  <column datatype='real' name='customer_lon' ordinal='8' />
                  <column datatype='integer' name='customerHasloyalty?' ordinal='9' />
                  <column datatype='real' name='distance_to_customer_KM' ordinal='10' />
                  <column datatype='real' name='delivery_fee' ordinal='11' />
                  <column datatype='string' name='Status' ordinal='12' />
                  <column datatype='integer' name='Complain' ordinal='13' />
                  <column datatype='integer' name='Refund' ordinal='14' />
                </columns>
              </relation>
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
    <datasource caption='outlier_data-1' inline='true' name='federated.1pox3z816ynujy1czskml0omw4jy' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='outlier_data-1' name='textscan.16pnyu802f3man18gw13000akshd'>
            <connection class='textscan' directory='C:/Users/Jainam/Downloads' filename='outlier_data-1.csv' password='' server='' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='textscan.16pnyu802f3man18gw13000akshd' name='outlier_data-1.csv' table='[outlier_data-1#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_IN' separator=','>
            <column datatype='string' name='order_id' ordinal='0' />
            <column datatype='date' name='date' ordinal='1' />
            <column datatype='datetime' name='time' ordinal='2' />
            <column datatype='string' name='order_type' ordinal='3' />
            <column datatype='string' name='branch_code' ordinal='4' />
            <column datatype='string' name='order_items' ordinal='5' />
            <column datatype='real' name='order_price' ordinal='6' />
            <column datatype='real' name='customer_lat' ordinal='7' />
            <column datatype='real' name='customer_lon' ordinal='8' />
            <column datatype='integer' name='customerHasloyalty?' ordinal='9' />
            <column datatype='real' name='distance_to_customer_KM' ordinal='10' />
            <column datatype='real' name='delivery_fee' ordinal='11' />
            <column datatype='string' name='Status' ordinal='12' />
            <column datatype='integer' name='Complain' ordinal='13' />
            <column datatype='integer' name='Refund' ordinal='14' />
            <column datatype='real' name='Account Number' ordinal='15' />
            <column datatype='string' name='Phone Number' ordinal='16' />
            <column datatype='string' name='F18' ordinal='17' />
            <column datatype='string' name='F19' ordinal='18' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='textscan.16pnyu802f3man18gw13000akshd' name='outlier_data-1.csv' table='[outlier_data-1#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_IN' separator=','>
            <column datatype='string' name='order_id' ordinal='0' />
            <column datatype='date' name='date' ordinal='1' />
            <column datatype='datetime' name='time' ordinal='2' />
            <column datatype='string' name='order_type' ordinal='3' />
            <column datatype='string' name='branch_code' ordinal='4' />
            <column datatype='string' name='order_items' ordinal='5' />
            <column datatype='real' name='order_price' ordinal='6' />
            <column datatype='real' name='customer_lat' ordinal='7' />
            <column datatype='real' name='customer_lon' ordinal='8' />
            <column datatype='integer' name='customerHasloyalty?' ordinal='9' />
            <column datatype='real' name='distance_to_customer_KM' ordinal='10' />
            <column datatype='real' name='delivery_fee' ordinal='11' />
            <column datatype='string' name='Status' ordinal='12' />
            <column datatype='integer' name='Complain' ordinal='13' />
            <column datatype='integer' name='Refund' ordinal='14' />
            <column datatype='real' name='Account Number' ordinal='15' />
            <column datatype='string' name='Phone Number' ordinal='16' />
            <column datatype='string' name='F18' ordinal='17' />
            <column datatype='string' name='F19' ordinal='18' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[outlier_data-1.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_GB&quot;</attribute>
              <attribute datatype='string' name='currency'>&quot;Rs&quot;</attribute>
              <attribute datatype='string' name='debit-close-char'>&quot;&quot;</attribute>
              <attribute datatype='string' name='debit-open-char'>&quot;&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_IN&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>order_id</remote-name>
            <remote-type>129</remote-type>
            <local-name>[order_id]</local-name>
            <parent-name>[outlier_data-1.csv]</parent-name>
            <remote-alias>order_id</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[outlier_data-1.csv_C71C13717AD843F8AFF404FCCCE25504]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>date</remote-name>
            <remote-type>133</remote-type>
            <local-name>[date]</local-name>
            <parent-name>[outlier_data-1.csv]</parent-name>
            <remote-alias>date</remote-alias>
            <ordinal>1</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[outlier_data-1.csv_C71C13717AD843F8AFF404FCCCE25504]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>time</remote-name>
            <remote-type>134</remote-type>
            <local-name>[time]</local-name>
            <parent-name>[outlier_data-1.csv]</parent-name>
            <remote-alias>time</remote-alias>
            <ordinal>2</ordinal>
            <local-type>datetime</local-type>
            <aggregation>Hour</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[outlier_data-1.csv_C71C13717AD843F8AFF404FCCCE25504]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>order_type</remote-name>
            <remote-type>129</remote-type>
            <local-name>[order_type]</local-name>
            <parent-name>[outlier_data-1.csv]</parent-name>
            <remote-alias>order_type</remote-alias>
            <ordinal>3</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[outlier_data-1.csv_C71C13717AD843F8AFF404FCCCE25504]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>branch_code</remote-name>
            <remote-type>129</remote-type>
            <local-name>[branch_code]</local-name>
            <parent-name>[outlier_data-1.csv]</parent-name>
            <remote-alias>branch_code</remote-alias>
            <ordinal>4</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[outlier_data-1.csv_C71C13717AD843F8AFF404FCCCE25504]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>order_items</remote-name>
            <remote-type>129</remote-type>
            <local-name>[order_items]</local-name>
            <parent-name>[outlier_data-1.csv]</parent-name>
            <remote-alias>order_items</remote-alias>
            <ordinal>5</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[outlier_data-1.csv_C71C13717AD843F8AFF404FCCCE25504]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>order_price</remote-name>
            <remote-type>5</remote-type>
            <local-name>[order_price]</local-name>
            <parent-name>[outlier_data-1.csv]</parent-name>
            <remote-alias>order_price</remote-alias>
            <ordinal>6</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[outlier_data-1.csv_C71C13717AD843F8AFF404FCCCE25504]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>customer_lat</remote-name>
            <remote-type>5</remote-type>
            <local-name>[customer_lat]</local-name>
            <parent-name>[outlier_data-1.csv]</parent-name>
            <remote-alias>customer_lat</remote-alias>
            <ordinal>7</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[outlier_data-1.csv_C71C13717AD843F8AFF404FCCCE25504]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>customer_lon</remote-name>
            <remote-type>5</remote-type>
            <local-name>[customer_lon]</local-name>
            <parent-name>[outlier_data-1.csv]</parent-name>
            <remote-alias>customer_lon</remote-alias>
            <ordinal>8</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[outlier_data-1.csv_C71C13717AD843F8AFF404FCCCE25504]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>customerHasloyalty?</remote-name>
            <remote-type>20</remote-type>
            <local-name>[customerHasloyalty?]</local-name>
            <parent-name>[outlier_data-1.csv]</parent-name>
            <remote-alias>customerHasloyalty?</remote-alias>
            <ordinal>9</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[outlier_data-1.csv_C71C13717AD843F8AFF404FCCCE25504]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>distance_to_customer_KM</remote-name>
            <remote-type>5</remote-type>
            <local-name>[distance_to_customer_KM]</local-name>
            <parent-name>[outlier_data-1.csv]</parent-name>
            <remote-alias>distance_to_customer_KM</remote-alias>
            <ordinal>10</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[outlier_data-1.csv_C71C13717AD843F8AFF404FCCCE25504]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>delivery_fee</remote-name>
            <remote-type>5</remote-type>
            <local-name>[delivery_fee]</local-name>
            <parent-name>[outlier_data-1.csv]</parent-name>
            <remote-alias>delivery_fee</remote-alias>
            <ordinal>11</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[outlier_data-1.csv_C71C13717AD843F8AFF404FCCCE25504]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Status</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Status]</local-name>
            <parent-name>[outlier_data-1.csv]</parent-name>
            <remote-alias>Status</remote-alias>
            <ordinal>12</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[outlier_data-1.csv_C71C13717AD843F8AFF404FCCCE25504]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Complain</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Complain]</local-name>
            <parent-name>[outlier_data-1.csv]</parent-name>
            <remote-alias>Complain</remote-alias>
            <ordinal>13</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[outlier_data-1.csv_C71C13717AD843F8AFF404FCCCE25504]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Refund</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Refund]</local-name>
            <parent-name>[outlier_data-1.csv]</parent-name>
            <remote-alias>Refund</remote-alias>
            <ordinal>14</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[outlier_data-1.csv_C71C13717AD843F8AFF404FCCCE25504]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Account Number</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Account Number]</local-name>
            <parent-name>[outlier_data-1.csv]</parent-name>
            <remote-alias>Account Number</remote-alias>
            <ordinal>15</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[outlier_data-1.csv_C71C13717AD843F8AFF404FCCCE25504]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Phone Number</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Phone Number]</local-name>
            <parent-name>[outlier_data-1.csv]</parent-name>
            <remote-alias>Phone Number</remote-alias>
            <ordinal>16</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[outlier_data-1.csv_C71C13717AD843F8AFF404FCCCE25504]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>F18</remote-name>
            <remote-type>129</remote-type>
            <local-name>[F18]</local-name>
            <parent-name>[outlier_data-1.csv]</parent-name>
            <remote-alias>F18</remote-alias>
            <ordinal>17</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>1</approx-count>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[outlier_data-1.csv_C71C13717AD843F8AFF404FCCCE25504]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>F19</remote-name>
            <remote-type>129</remote-type>
            <local-name>[F19]</local-name>
            <parent-name>[outlier_data-1.csv]</parent-name>
            <remote-alias>F19</remote-alias>
            <ordinal>18</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>1</approx-count>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[outlier_data-1.csv_C71C13717AD843F8AFF404FCCCE25504]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column datatype='real' name='[Account Number]' role='dimension' type='ordinal' />
      <_.fcp.ObjectModelTableType.true...column caption='outlier_data-1.csv' datatype='table' name='[__tableau_internal_object_id__].[outlier_data-1.csv_C71C13717AD843F8AFF404FCCCE25504]' role='measure' type='quantitative' />
      <column caption='Branch Code' datatype='string' name='[branch_code]' role='dimension' type='nominal' />
      <column aggregation='Avg' caption='Customer Lat' datatype='real' name='[customer_lat]' role='measure' semantic-role='[Geographical].[Latitude]' type='quantitative' />
      <column aggregation='Avg' caption='Customer Lon' datatype='real' name='[customer_lon]' role='measure' semantic-role='[Geographical].[Longitude]' type='quantitative' />
      <column caption='Date' datatype='date' name='[date]' role='dimension' type='ordinal' />
      <column caption='Delivery Fee' datatype='real' name='[delivery_fee]' role='measure' type='quantitative' />
      <column caption='distance to customer KM' datatype='real' name='[distance_to_customer_KM]' role='measure' type='quantitative' />
      <column caption='Order Id' datatype='string' name='[order_id]' role='dimension' type='nominal' />
      <column caption='Order Items' datatype='string' name='[order_items]' role='dimension' type='nominal' />
      <column caption='Order Price' datatype='real' name='[order_price]' role='measure' type='quantitative' />
      <column caption='Order Type' datatype='string' name='[order_type]' role='dimension' type='nominal' />
      <column aggregation='Hour' caption='Time' datatype='datetime' name='[time]' role='dimension' type='ordinal' />
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;India&quot;' />
      </semantic-values>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='outlier_data-1.csv' id='outlier_data-1.csv_C71C13717AD843F8AFF404FCCCE25504'>
            <properties context=''>
              <relation connection='textscan.16pnyu802f3man18gw13000akshd' name='outlier_data-1.csv' table='[outlier_data-1#csv]' type='table'>
                <columns character-set='UTF-8' header='yes' locale='en_IN' separator=','>
                  <column datatype='string' name='order_id' ordinal='0' />
                  <column datatype='date' name='date' ordinal='1' />
                  <column datatype='datetime' name='time' ordinal='2' />
                  <column datatype='string' name='order_type' ordinal='3' />
                  <column datatype='string' name='branch_code' ordinal='4' />
                  <column datatype='string' name='order_items' ordinal='5' />
                  <column datatype='real' name='order_price' ordinal='6' />
                  <column datatype='real' name='customer_lat' ordinal='7' />
                  <column datatype='real' name='customer_lon' ordinal='8' />
                  <column datatype='integer' name='customerHasloyalty?' ordinal='9' />
                  <column datatype='real' name='distance_to_customer_KM' ordinal='10' />
                  <column datatype='real' name='delivery_fee' ordinal='11' />
                  <column datatype='string' name='Status' ordinal='12' />
                  <column datatype='integer' name='Complain' ordinal='13' />
                  <column datatype='integer' name='Refund' ordinal='14' />
                  <column datatype='real' name='Account Number' ordinal='15' />
                  <column datatype='string' name='Phone Number' ordinal='16' />
                  <column datatype='string' name='F18' ordinal='17' />
                  <column datatype='string' name='F19' ordinal='18' />
                </columns>
              </relation>
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
  </datasources>
  <mapsources>
    <mapsource name='Tableau' />
  </mapsources>
  <worksheets>
    <worksheet name='Sheet 1'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontname='Tableau Bold' fontsize='16'>Clustering Map</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='outlier_data' name='federated.12vh8ue0eh2a7y1gdi8a105v0ete' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.12vh8ue0eh2a7y1gdi8a105v0ete'>
            <column auto-hidden='true' caption='Clusters' datatype='integer' hidden='true' is-adhoc-cluster='true' name='[AdhocCluster:1]' parent-model='[AnalyticModel:{40a1f67d-2e74-41a4-a848-5d21ecc402a1}]' role='dimension' type='ordinal'>
              <aliases>
                <alias key='-1' value='Cluster Outliers' />
                <alias key='0' value='Not Clustered' />
                <alias key='1' value='Cluster 1' />
                <alias key='2' value='Cluster 2' />
                <alias key='3' value='Cluster 3' />
                <alias key='4' value='Cluster 4' />
                <alias key='5' value='Cluster 5' />
                <alias key='6' value='Cluster 6' />
                <alias key='7' value='Cluster 7' />
                <alias key='8' value='Cluster 8' />
                <alias key='9' value='Cluster 9' />
                <alias key='10' value='Cluster 10' />
                <alias key='11' value='Cluster 11' />
                <alias key='12' value='Cluster 12' />
                <alias key='13' value='Cluster 13' />
                <alias key='14' value='Cluster 14' />
                <alias key='15' value='Cluster 15' />
                <alias key='16' value='Cluster 16' />
                <alias key='17' value='Cluster 17' />
                <alias key='18' value='Cluster 18' />
                <alias key='19' value='Cluster 19' />
                <alias key='20' value='Cluster 20' />
                <alias key='21' value='Cluster 21' />
                <alias key='22' value='Cluster 22' />
                <alias key='23' value='Cluster 23' />
                <alias key='24' value='Cluster 24' />
                <alias key='25' value='Cluster 25' />
                <alias key='26' value='Cluster 26' />
                <alias key='27' value='Cluster 27' />
                <alias key='28' value='Cluster 28' />
                <alias key='29' value='Cluster 29' />
                <alias key='30' value='Cluster 30' />
                <alias key='31' value='Cluster 31' />
                <alias key='32' value='Cluster 32' />
                <alias key='33' value='Cluster 33' />
                <alias key='34' value='Cluster 34' />
                <alias key='35' value='Cluster 35' />
                <alias key='36' value='Cluster 36' />
                <alias key='37' value='Cluster 37' />
                <alias key='38' value='Cluster 38' />
                <alias key='39' value='Cluster 39' />
                <alias key='40' value='Cluster 40' />
                <alias key='41' value='Cluster 41' />
                <alias key='42' value='Cluster 42' />
                <alias key='43' value='Cluster 43' />
                <alias key='44' value='Cluster 44' />
                <alias key='45' value='Cluster 45' />
                <alias key='46' value='Cluster 46' />
                <alias key='47' value='Cluster 47' />
                <alias key='48' value='Cluster 48' />
                <alias key='49' value='Cluster 49' />
                <alias key='50' value='Cluster 50' />
              </aliases>
            </column>
            <column datatype='integer' name='[Complain]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Refund]' role='measure' type='quantitative' />
            <column-instance column='[order_id]' derivation='Count' name='[cnt:order_id:qk]' pivot='key' type='quantitative' />
            <column datatype='integer' name='[customerHasloyalty?]' role='dimension' type='ordinal' />
            <column aggregation='Avg' caption='Customer Lat' datatype='real' name='[customer_lat]' role='measure' semantic-role='[Geographical].[Latitude]' type='quantitative' />
            <column aggregation='Avg' caption='Customer Lon' datatype='real' name='[customer_lon]' role='measure' semantic-role='[Geographical].[Longitude]' type='quantitative' />
            <column-instance column='[AdhocCluster:1]' derivation='None' is-adhoc-cluster='true' name='[none:AdhocCluster:1:ok]' pivot='key' type='ordinal' />
            <column-instance column='[customer_lat]' derivation='None' name='[none:customer_lat:qk]' pivot='key' type='quantitative' />
            <column-instance column='[customer_lon]' derivation='None' name='[none:customer_lon:qk]' pivot='key' type='quantitative' />
            <column caption='Order Id' datatype='string' name='[order_id]' role='dimension' type='nominal' />
            <column-instance column='[Complain]' derivation='Sum' name='[sum:Complain:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Refund]' derivation='Sum' name='[sum:Refund:qk]' pivot='key' type='quantitative' />
            <column-instance column='[customerHasloyalty?]' derivation='Sum' name='[sum:customerHasloyalty?:qk]' pivot='key' type='quantitative' />
            <style>
              <style-rule element='mark'>
                <encoding attr='color' field='[none:AdhocCluster:1:ok]' type='palette'>
                  <map to='#59a14f'>
                    <bucket>5</bucket>
                  </map>
                  <map to='#aa0000'>
                    <bucket>2</bucket>
                  </map>
                  <map to='#edc948'>
                    <bucket>6</bucket>
                  </map>
                  <map to='#ff0000'>
                    <bucket>3</bucket>
                  </map>
                  <map to='#ff007f'>
                    <bucket>4</bucket>
                  </map>
                  <map to='#ffaaff'>
                    <bucket>1</bucket>
                  </map>
                </encoding>
              </style-rule>
            </style>
          </datasource-dependencies>
          <filter class='categorical' column='[federated.12vh8ue0eh2a7y1gdi8a105v0ete].[Exclusions (Customer Lat,Customer Lon)]'>
            <groupfilter function='except' user:ui-domain='database' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='crossjoin'>
                <groupfilter function='level-members' level='[none:customer_lat:qk]' />
                <groupfilter function='level-members' level='[none:customer_lon:qk]' />
              </groupfilter>
              <groupfilter function='union'>
                <groupfilter function='crossjoin'>
                  <groupfilter function='member' level='[none:customer_lat:qk]' member='-37.8235004' />
                  <groupfilter function='member' level='[none:customer_lon:qk]' member='144.9690153' />
                </groupfilter>
                <groupfilter function='crossjoin'>
                  <groupfilter function='member' level='[none:customer_lat:qk]' member='-37.823390000000003' />
                  <groupfilter function='member' level='[none:customer_lon:qk]' member='144.94793999999999' />
                </groupfilter>
                <groupfilter function='crossjoin'>
                  <groupfilter function='member' level='[none:customer_lat:qk]' member='-37.8233885' />
                  <groupfilter function='member' level='[none:customer_lon:qk]' member='144.96809469999999' />
                </groupfilter>
                <groupfilter function='crossjoin'>
                  <groupfilter function='member' level='[none:customer_lat:qk]' member='-37.8223938' />
                  <groupfilter function='member' level='[none:customer_lon:qk]' member='144.94874160000001' />
                </groupfilter>
                <groupfilter function='crossjoin'>
                  <groupfilter function='member' level='[none:customer_lat:qk]' member='-37.822177099999998' />
                  <groupfilter function='member' level='[none:customer_lon:qk]' member='144.94774469999999' />
                </groupfilter>
                <groupfilter function='crossjoin'>
                  <groupfilter function='member' level='[none:customer_lat:qk]' member='-37.820859200000001' />
                  <groupfilter function='member' level='[none:customer_lon:qk]' member='144.94811910000001' />
                </groupfilter>
                <groupfilter function='crossjoin'>
                  <groupfilter function='member' level='[none:customer_lat:qk]' member='-37.820813899999997' />
                  <groupfilter function='member' level='[none:customer_lon:qk]' member='144.94806070000001' />
                </groupfilter>
                <groupfilter function='crossjoin'>
                  <groupfilter function='member' level='[none:customer_lat:qk]' member='-37.819693200000003' />
                  <groupfilter function='member' level='[none:customer_lon:qk]' member='145.01067180000001' />
                </groupfilter>
                <groupfilter function='crossjoin'>
                  <groupfilter function='member' level='[none:customer_lat:qk]' member='-37.8177655' />
                  <groupfilter function='member' level='[none:customer_lon:qk]' member='144.94692480000001' />
                </groupfilter>
                <groupfilter function='crossjoin'>
                  <groupfilter function='member' level='[none:customer_lat:qk]' member='-37.817452299999999' />
                  <groupfilter function='member' level='[none:customer_lon:qk]' member='144.94596749999999' />
                </groupfilter>
                <groupfilter function='crossjoin'>
                  <groupfilter function='member' level='[none:customer_lat:qk]' member='-37.816288200000002' />
                  <groupfilter function='member' level='[none:customer_lon:qk]' member='144.93727530000001' />
                </groupfilter>
                <groupfilter function='crossjoin'>
                  <groupfilter function='member' level='[none:customer_lat:qk]' member='-37.816088000000001' />
                  <groupfilter function='member' level='[none:customer_lon:qk]' member='144.93930539999999' />
                </groupfilter>
                <groupfilter function='crossjoin'>
                  <groupfilter function='member' level='[none:customer_lat:qk]' member='-37.815608400000002' />
                  <groupfilter function='member' level='[none:customer_lon:qk]' member='144.9357637' />
                </groupfilter>
                <groupfilter function='crossjoin'>
                  <groupfilter function='member' level='[none:customer_lat:qk]' member='-37.815484900000001' />
                  <groupfilter function='member' level='[none:customer_lon:qk]' member='144.9377978' />
                </groupfilter>
                <groupfilter function='crossjoin'>
                  <groupfilter function='member' level='[none:customer_lat:qk]' member='-37.815460000000002' />
                  <groupfilter function='member' level='[none:customer_lon:qk]' member='144.93828999999999' />
                </groupfilter>
                <groupfilter function='crossjoin'>
                  <groupfilter function='member' level='[none:customer_lat:qk]' member='-37.815300000000001' />
                  <groupfilter function='member' level='[none:customer_lon:qk]' member='144.9383' />
                </groupfilter>
                <groupfilter function='crossjoin'>
                  <groupfilter function='member' level='[none:customer_lat:qk]' member='-37.814884399999997' />
                  <groupfilter function='member' level='[none:customer_lon:qk]' member='144.93768270000001' />
                </groupfilter>
                <groupfilter function='crossjoin'>
                  <groupfilter function='member' level='[none:customer_lat:qk]' member='-37.814562100000003' />
                  <groupfilter function='member' level='[none:customer_lon:qk]' member='144.93822349999999' />
                </groupfilter>
                <groupfilter function='crossjoin'>
                  <groupfilter function='member' level='[none:customer_lat:qk]' member='-37.814264399999999' />
                  <groupfilter function='member' level='[none:customer_lon:qk]' member='144.93791139999999' />
                </groupfilter>
                <groupfilter function='crossjoin'>
                  <groupfilter function='member' level='[none:customer_lat:qk]' member='-37.813369999999999' />
                  <groupfilter function='member' level='[none:customer_lon:qk]' member='144.95187999999999' />
                </groupfilter>
                <groupfilter function='crossjoin'>
                  <groupfilter function='member' level='[none:customer_lat:qk]' member='-37.812414400000002' />
                  <groupfilter function='member' level='[none:customer_lon:qk]' member='144.95359379999999' />
                </groupfilter>
                <groupfilter function='crossjoin'>
                  <groupfilter function='member' level='[none:customer_lat:qk]' member='-37.812305700000003' />
                  <groupfilter function='member' level='[none:customer_lon:qk]' member='144.95335940000001' />
                </groupfilter>
                <groupfilter function='crossjoin'>
                  <groupfilter function='member' level='[none:customer_lat:qk]' member='-37.812240000000003' />
                  <groupfilter function='member' level='[none:customer_lon:qk]' member='144.95357000000001' />
                </groupfilter>
                <groupfilter function='crossjoin'>
                  <groupfilter function='member' level='[none:customer_lat:qk]' member='-37.812150000000003' />
                  <groupfilter function='member' level='[none:customer_lon:qk]' member='144.95350999999999' />
                </groupfilter>
                <groupfilter function='crossjoin'>
                  <groupfilter function='member' level='[none:customer_lat:qk]' member='-37.811951700000002' />
                  <groupfilter function='member' level='[none:customer_lon:qk]' member='144.95137260000001' />
                </groupfilter>
                <groupfilter function='crossjoin'>
                  <groupfilter function='member' level='[none:customer_lat:qk]' member='-37.811540100000002' />
                  <groupfilter function='member' level='[none:customer_lon:qk]' member='144.95306110000001' />
                </groupfilter>
                <groupfilter function='crossjoin'>
                  <groupfilter function='member' level='[none:customer_lat:qk]' member='-37.805619700000001' />
                  <groupfilter function='member' level='[none:customer_lon:qk]' member='144.9537607' />
                </groupfilter>
                <groupfilter function='crossjoin'>
                  <groupfilter function='member' level='[none:customer_lat:qk]' member='-37.805573000000003' />
                  <groupfilter function='member' level='[none:customer_lon:qk]' member='144.95348960000001' />
                </groupfilter>
                <groupfilter function='crossjoin'>
                  <groupfilter function='member' level='[none:customer_lat:qk]' member='-37.804963499999999' />
                  <groupfilter function='member' level='[none:customer_lon:qk]' member='144.95537669999999' />
                </groupfilter>
                <groupfilter function='crossjoin'>
                  <groupfilter function='member' level='[none:customer_lat:qk]' member='-37.804229999999997' />
                  <groupfilter function='member' level='[none:customer_lon:qk]' member='144.95366999999999' />
                </groupfilter>
                <groupfilter function='crossjoin'>
                  <groupfilter function='member' level='[none:customer_lat:qk]' member='-37.803960000000004' />
                  <groupfilter function='member' level='[none:customer_lon:qk]' member='144.95597000000001' />
                </groupfilter>
                <groupfilter function='crossjoin'>
                  <groupfilter function='member' level='[none:customer_lat:qk]' member='-37.803049999999999' />
                  <groupfilter function='member' level='[none:customer_lon:qk]' member='144.9545' />
                </groupfilter>
                <groupfilter function='crossjoin'>
                  <groupfilter function='member' level='[none:customer_lat:qk]' member='-37.802039999999998' />
                  <groupfilter function='member' level='[none:customer_lon:qk]' member='144.95446000000001' />
                </groupfilter>
              </groupfilter>
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.12vh8ue0eh2a7y1gdi8a105v0ete].[none:AdhocCluster:1:ok]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:AdhocCluster:1:ok]' member='1' />
              <groupfilter function='member' level='[none:AdhocCluster:1:ok]' member='2' />
              <groupfilter function='member' level='[none:AdhocCluster:1:ok]' member='3' />
              <groupfilter function='member' level='[none:AdhocCluster:1:ok]' member='4' />
            </groupfilter>
          </filter>
          <filter class='quantitative' column='[federated.12vh8ue0eh2a7y1gdi8a105v0ete].[sum:Complain:qk]' included-values='in-range'>
            <min>0</min>
            <max>4</max>
          </filter>
          <filter class='quantitative' column='[federated.12vh8ue0eh2a7y1gdi8a105v0ete].[sum:Refund:qk]' included-values='in-range'>
            <min>0</min>
            <max>4</max>
          </filter>
          <slices>
            <column>[federated.12vh8ue0eh2a7y1gdi8a105v0ete].[sum:Refund:qk]</column>
            <column>[federated.12vh8ue0eh2a7y1gdi8a105v0ete].[sum:Complain:qk]</column>
            <column>[federated.12vh8ue0eh2a7y1gdi8a105v0ete].[none:AdhocCluster:1:ok]</column>
            <column>[federated.12vh8ue0eh2a7y1gdi8a105v0ete].[Exclusions (Customer Lat,Customer Lon)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.12vh8ue0eh2a7y1gdi8a105v0ete].[none:customer_lon:qk]' field-type='quantitative' max='16143669.763323776' min='16129852.2032091' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.12vh8ue0eh2a7y1gdi8a105v0ete].[none:customer_lat:qk]' field-type='quantitative' max='-4549827.8985047713' min='-4557909.6554683615' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='map-layer'>
            <format attr='enabled' id='tunnel-service-link-track-case' value='true' />
            <format attr='enabled' id='tunnel-street_limited-case' value='true' />
            <format attr='enabled' id='tunnel-street-case' value='true' />
            <format attr='enabled' id='tunnel-secondary-tertiary-case' value='true' />
            <format attr='enabled' id='tunnel-primary-case' value='true' />
            <format attr='enabled' id='tunnel-trunk_link-case' value='true' />
            <format attr='enabled' id='tunnel-motorway_link-case' value='true' />
            <format attr='enabled' id='tunnel-trunk-case' value='true' />
            <format attr='enabled' id='tunnel-motorway-case' value='true' />
            <format attr='enabled' id='tunnel-trunk_link' value='true' />
            <format attr='enabled' id='tunnel-motorway_link' value='true' />
            <format attr='enabled' id='tunnel-service-link-track' value='true' />
            <format attr='enabled' id='tunnel-street_limited' value='true' />
            <format attr='enabled' id='tunnel-street' value='true' />
            <format attr='enabled' id='tunnel-tertiary' value='true' />
            <format attr='enabled' id='tunnel-secondary' value='true' />
            <format attr='enabled' id='tunnel-primary' value='true' />
            <format attr='enabled' id='tunnel-trunk' value='true' />
            <format attr='enabled' id='tunnel-motorway' value='true' />
            <format attr='enabled' id='road-street-low' value='true' />
            <format attr='enabled' id='road-street_limited-low' value='true' />
            <format attr='enabled' id='road-pedestrian-case' value='true' />
            <format attr='enabled' id='road-service-link-track-case' value='true' />
            <format attr='enabled' id='road-street_limited-case' value='true' />
            <format attr='enabled' id='road-street-case' value='true' />
            <format attr='enabled' id='road-tertiary-case' value='true' />
            <format attr='enabled' id='road-secondary-case' value='true' />
            <format attr='enabled' id='road-primary-case' value='true' />
            <format attr='enabled' id='road-motorway_link-case' value='true' />
            <format attr='enabled' id='road-trunk_link-case' value='true' />
            <format attr='enabled' id='road-trunk-case' value='true' />
            <format attr='enabled' id='road-motorway-case' value='true' />
            <format attr='enabled' id='road-trunk_link' value='true' />
            <format attr='enabled' id='road-motorway_link' value='true' />
            <format attr='enabled' id='road-path' value='true' />
            <format attr='enabled' id='road-pedestrian' value='true' />
            <format attr='enabled' id='road-polygon' value='true' />
            <format attr='enabled' id='road-service-link-track' value='true' />
            <format attr='enabled' id='road-street_limited' value='true' />
            <format attr='enabled' id='road-street' value='true' />
            <format attr='enabled' id='road-tertiary' value='true' />
            <format attr='enabled' id='road-secondary' value='true' />
            <format attr='enabled' id='road-primary' value='true' />
            <format attr='enabled' id='road-trunk' value='true' />
            <format attr='enabled' id='road-motorway' value='true' />
            <format attr='enabled' id='road-rail' value='true' />
            <format attr='enabled' id='road-rail-tracks' value='true' />
            <format attr='enabled' id='bridge-street-low' value='true' />
            <format attr='enabled' id='bridge-street_limited-low' value='true' />
            <format attr='enabled' id='bridge-pedestrian-case' value='true' />
            <format attr='enabled' id='bridge-service-link-track-case' value='true' />
            <format attr='enabled' id='bridge-street_limited-case' value='true' />
            <format attr='enabled' id='bridge-street-case' value='true' />
            <format attr='enabled' id='bridge-tertiary-case' value='true' />
            <format attr='enabled' id='bridge-secondary-case' value='true' />
            <format attr='enabled' id='bridge-primary-case' value='true' />
            <format attr='enabled' id='bridge-trunk_link-case' value='true' />
            <format attr='enabled' id='bridge-motorway_link-case' value='true' />
            <format attr='enabled' id='bridge-trunk-case' value='true' />
            <format attr='enabled' id='bridge-motorway-case' value='true' />
            <format attr='enabled' id='bridge-trunk_link' value='true' />
            <format attr='enabled' id='bridge-motorway_link' value='true' />
            <format attr='enabled' id='bridge-path' value='true' />
            <format attr='enabled' id='bridge-pedestrian' value='true' />
            <format attr='enabled' id='bridge-service-link-track' value='true' />
            <format attr='enabled' id='bridge-street_limited' value='true' />
            <format attr='enabled' id='bridge-street' value='true' />
            <format attr='enabled' id='bridge-tertiary' value='true' />
            <format attr='enabled' id='bridge-secondary' value='true' />
            <format attr='enabled' id='bridge-primary' value='true' />
            <format attr='enabled' id='bridge-trunk' value='true' />
            <format attr='enabled' id='bridge-motorway' value='true' />
            <format attr='enabled' id='bridge-rail' value='true' />
            <format attr='enabled' id='bridge-rail-tracks' value='true' />
            <format attr='enabled' id='bridge-trunk_link-2-case' value='true' />
            <format attr='enabled' id='bridge-motorway_link-2-case' value='true' />
            <format attr='enabled' id='bridge-trunk-2-case' value='true' />
            <format attr='enabled' id='bridge-motorway-2-case' value='true' />
            <format attr='enabled' id='bridge-trunk_link-2' value='true' />
            <format attr='enabled' id='bridge-motorway_link-2' value='true' />
            <format attr='enabled' id='bridge-trunk-2' value='true' />
            <format attr='enabled' id='bridge-motorway-2' value='true' />
            <format attr='enabled' id='road-shields-2-white' value='true' />
            <format attr='enabled' id='road-shields-2-black' value='true' />
            <format attr='enabled' id='road-shields-1-white' value='true' />
            <format attr='enabled' id='road-shields-1-black' value='true' />
            <format attr='enabled' id='road-label-small' value='true' />
            <format attr='enabled' id='road-label-big' value='true' />
            <format attr='enabled' id='light-admin-0-boundaries-bg' value='true' />
            <format attr='enabled' id='light-admin-0-boundaries' value='true' />
            <format attr='enabled' id='light-admin-0-boundaries-dispute' value='true' />
            <format attr='enabled' id='light-admin-0-label-5th-tier' value='true' />
            <format attr='enabled' id='light-admin-0-label-4th-tier' value='true' />
            <format attr='enabled' id='light-admin-0-label-3rd-tier' value='true' />
            <format attr='enabled' id='light-admin-0-label-2nd-tier' value='true' />
            <format attr='enabled' id='light-admin-0-label-1st-tier' value='true' />
            <format attr='enabled' id='light-admin-0-boundaries-bg-sub' value='true' />
            <format attr='enabled' id='light-admin-1-boundaries-supress-bg' value='true' />
            <format attr='enabled' id='light-admin-1-boundaries-sm-parents-bg' value='true' />
            <format attr='enabled' id='light-admin-1-boundaries-md-parents-bg' value='true' />
            <format attr='enabled' id='light-admin-1-boundaries-lg-parents-bg' value='true' />
            <format attr='enabled' id='light-admin-0-boundaries-dispute-sub' value='true' />
            <format attr='enabled' id='light-admin-0-boundaries-sub' value='true' />
            <format attr='enabled' id='light-admin-1-boundaries-supress' value='true' />
            <format attr='enabled' id='light-admin-1-boundaries-sm-parents' value='true' />
            <format attr='enabled' id='light-admin-1-boundaries-md-parents' value='true' />
            <format attr='enabled' id='light-admin-1-boundaries-lg-parents' value='true' />
            <format attr='enabled' id='light-admin1-water-lines-usa-tableau' value='true' />
            <format attr='enabled' id='light-9-dash-line-casing' value='true' />
            <format attr='enabled' id='light-9-dash-line' value='true' />
            <format attr='enabled' id='light-admin-1-label-9th-tier' value='true' />
            <format attr='enabled' id='light-admin-1-label-8th-tier' value='true' />
            <format attr='enabled' id='light-admin-1-label-7th-tier' value='true' />
            <format attr='enabled' id='light-admin-1-label-6th-tier' value='true' />
            <format attr='enabled' id='light-admin-1-label-5th-tier' value='true' />
            <format attr='enabled' id='light-admin-1-label-4th-tier' value='true' />
            <format attr='enabled' id='light-admin-1-label-3rd-tier' value='true' />
            <format attr='enabled' id='light-admin-1-label-2nd-tier' value='true' />
            <format attr='enabled' id='light-admin-1-label-1st-tier' value='true' />
            <format attr='enabled' id='light-us-admin-1-label-abbr-3rd-tier' value='true' />
            <format attr='enabled' id='light-us-admin-1-label-abbr-2nd-tier' value='true' />
            <format attr='enabled' id='light-us-admin-1-label-abbr-1st-tier' value='true' />
            <format attr='enabled' id='admin-2-boundaries-bg' value='true' />
            <format attr='enabled' id='admin-2-boundaries' value='true' />
            <format attr='enabled' id='admin-2-label' value='true' />
            <format attr='enabled' id='Area Code Labels' value='true' />
            <format attr='enabled' id='place-village' value='true' />
            <format attr='enabled' id='place-town' value='true' />
            <format attr='enabled' id='place-islands' value='true' />
            <format attr='enabled' id='place-city-sm' value='true' />
            <format attr='enabled' id='place-city-md-s' value='true' />
            <format attr='enabled' id='place-city-md-n' value='true' />
            <format attr='enabled' id='place-city-lg-s' value='true' />
            <format attr='enabled' id='place-city-lg-n' value='true' />
            <format attr='enabled' id='place-capital-s' value='true' />
            <format attr='enabled' id='place-capital-n' value='true' />
            <format attr='enabled' id='poi-minor-secondary' value='true' />
            <format attr='enabled' id='poi-minor-primary' value='true' />
            <format attr='enabled' id='poi-main-monuments' value='true' />
            <format attr='enabled' id='poi-main-cemetery' value='true' />
            <format attr='enabled' id='poi-main-greenspace' value='true' />
            <format attr='enabled' id='poi-main-primary' value='true' />
            <format attr='enabled' id='poi-main-peaks' value='true' />
            <format attr='enabled' id='poi-rail' value='true' />
            <format attr='enabled' id='airport-label' value='true' />
            <format attr='enabled' id='marine-label-sm-ln' value='true' />
            <format attr='enabled' id='marine-label-sm-pt' value='true' />
            <format attr='enabled' id='marine-label-md-ln' value='true' />
            <format attr='enabled' id='marine-label-md-pt' value='true' />
            <format attr='enabled' id='marine-label-lg-ln' value='true' />
            <format attr='enabled' id='marine-label-lg-pt' value='true' />
            <format attr='enabled' id='water-label' value='true' />
            <format attr='enabled' id='US Metro Labels CBSA' value='true' />
            <format attr='enabled' id='US Metro Boundaries CBSA' value='true' />
            <format attr='enabled' id='Area Code Boundaries' value='true' />
            <format attr='enabled' id='Zip Code Boundaries' value='true' />
            <format attr='enabled' id='Zip Code Labels' value='true' />
            <format attr='enabled' id='place-suburb' value='true' />
            <format attr='enabled' id='place-neighborhood' value='true' />
            <format attr='enabled' id='parks' value='false' />
            <format attr='enabled' id='landcover_wood' value='false' />
            <format attr='enabled' id='landcover_scrub' value='false' />
            <format attr='enabled' id='landcover_grass' value='false' />
            <format attr='enabled' id='landcover_crop' value='false' />
            <format attr='enabled' id='hillshade_highlight_bright' value='true' />
            <format attr='enabled' id='hillshade_highlight_med' value='true' />
            <format attr='enabled' id='hillshade_shadow_faint' value='true' />
            <format attr='enabled' id='hillshade_shadow_med' value='true' />
            <format attr='enabled' id='hillshade_shadow_dark' value='true' />
            <format attr='enabled' id='hillshade_shadow_extreme' value='true' />
            <format attr='enabled' id='Coastline' value='true' />
            <format attr='enabled' id='background' value='false' />
            <format attr='enabled' id='barrier_line-land-polygon' value='false' />
            <format attr='enabled' id='barrier_line-land-line' value='false' />
            <format attr='enabled' id='national_park' value='false' />
            <format attr='enabled' id='pitch' value='false' />
            <format attr='enabled' id='industrial' value='false' />
            <format attr='enabled' id='built-up-area' value='false' />
            <format attr='enabled' id='water' value='false' />
            <format attr='enabled' id='waterway-river-canal' value='false' />
            <format attr='enabled' id='aeroway-polygon' value='false' />
            <format attr='enabled' id='aeroway-runway' value='false' />
            <format attr='enabled' id='aeroway-taxiway' value='false' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <lod column='[federated.12vh8ue0eh2a7y1gdi8a105v0ete].[cnt:order_id:qk]' />
              <color column='[federated.12vh8ue0eh2a7y1gdi8a105v0ete].[none:AdhocCluster:1:ok]' />
              <lod column='[federated.12vh8ue0eh2a7y1gdi8a105v0ete].[sum:Refund:qk]' />
              <lod column='[federated.12vh8ue0eh2a7y1gdi8a105v0ete].[sum:Complain:qk]' />
              <lod column='[federated.12vh8ue0eh2a7y1gdi8a105v0ete].[sum:customerHasloyalty?:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='size' value='1' />
                <format attr='mark-labels-cull' value='false' />
                <format attr='mark-labels-mode' value='highlight' />
                <format attr='mark-transparency' value='255' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.12vh8ue0eh2a7y1gdi8a105v0ete].[none:customer_lat:qk]</rows>
        <cols>[federated.12vh8ue0eh2a7y1gdi8a105v0ete].[none:customer_lon:qk]</cols>
      </table>
      <simple-id uuid='{7C7343E9-941A-4403-866A-09AC2E251F70}' />
    </worksheet>
    <worksheet name='Sheet 2'>
      <table>
        <view>
          <datasources>
            <datasource caption='outlier_data' name='federated.12vh8ue0eh2a7y1gdi8a105v0ete' />
          </datasources>
          <datasource-dependencies datasource='federated.12vh8ue0eh2a7y1gdi8a105v0ete'>
            <column datatype='string' name='[Status]' role='dimension' type='nominal' />
            <column-instance column='[Status]' derivation='None' name='[none:Status:nk]' pivot='key' type='nominal' />
            <column-instance column='[order_items]' derivation='None' name='[none:order_items:nk]' pivot='key' type='nominal' />
            <column-instance column='[order_type]' derivation='None' name='[none:order_type:nk]' pivot='key' type='nominal' />
            <column caption='Order Items' datatype='string' name='[order_items]' role='dimension' type='nominal' />
            <column caption='Order Price' datatype='real' name='[order_price]' role='measure' type='quantitative' />
            <column caption='Order Type' datatype='string' name='[order_type]' role='dimension' type='nominal' />
            <column-instance column='[order_price]' derivation='Sum' name='[sum:order_price:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <manual-sort column='[federated.12vh8ue0eh2a7y1gdi8a105v0ete].[none:order_items:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[(&apos;Pasta&apos;, 9), (&apos;Shrimp&apos;, 9), (&apos;Salmon&apos;, 5), (&apos;Fish&amp;Chips&apos;, 9)]&quot;</bucket>
              <bucket>&quot;[(&apos;Pasta&apos;, 10), (&apos;Shrimp&apos;, 8), (&apos;Salmon&apos;, 10), (&apos;Fish&amp;Chips&apos;, 3)]&quot;</bucket>
              <bucket>&quot;[(&apos;Shrimp&apos;, 8), (&apos;Fish&amp;Chips&apos;, 9), (&apos;Pasta&apos;, 4), (&apos;Salmon&apos;, 8)]&quot;</bucket>
              <bucket>&quot;[(&apos;Shrimp&apos;, 8), (&apos;Salmon&apos;, 8), (&apos;Pasta&apos;, 9), (&apos;Fish&amp;Chips&apos;, 4)]&quot;</bucket>
              <bucket>&quot;[(&apos;Fish&amp;Chips&apos;, 4), (&apos;Salmon&apos;, 5), (&apos;Pasta&apos;, 9), (&apos;Shrimp&apos;, 10)]&quot;</bucket>
              <bucket>&quot;[(&apos;Fish&amp;Chips&apos;, 7), (&apos;Salmon&apos;, 6), (&apos;Shrimp&apos;, 10), (&apos;Pasta&apos;, 3)]&quot;</bucket>
              <bucket>&quot;[(&apos;Fish&amp;Chips&apos;, 10), (&apos;Salmon&apos;, 10), (&apos;Pasta&apos;, 1), (&apos;Shrimp&apos;, 6)]&quot;</bucket>
              <bucket>&quot;[(&apos;Steak&apos;, 10), (&apos;Fries&apos;, 7), (&apos;Burger&apos;, 8), (&apos;Chicken&apos;, 10)]&quot;</bucket>
              <bucket>&quot;[(&apos;Fish&amp;Chips&apos;, 10), (&apos;Salmon&apos;, 9), (&apos;Pasta&apos;, 9), (&apos;Shrimp&apos;, 2)]&quot;</bucket>
              <bucket>&quot;[(&apos;Salad&apos;, 5), (&apos;Fries&apos;, 8), (&apos;Chicken&apos;, 9), (&apos;Burger&apos;, 9), (&apos;Steak&apos;, 7)]&quot;</bucket>
              <bucket>&quot;[(&apos;Shrimp&apos;, 9), (&apos;Pasta&apos;, 9), (&apos;Salmon&apos;, 8)]&quot;</bucket>
              <bucket>&quot;[(&apos;Burger&apos;, 8), (&apos;Steak&apos;, 8), (&apos;Salad&apos;, 7), (&apos;Fries&apos;, 8), (&apos;Chicken&apos;, 7)]&quot;</bucket>
              <bucket>&quot;[(&apos;Fries&apos;, 7), (&apos;Salad&apos;, 1), (&apos;Steak&apos;, 7), (&apos;Burger&apos;, 10), (&apos;Chicken&apos;, 10)]&quot;</bucket>
              <bucket>&quot;[(&apos;Burger&apos;, 8), (&apos;Fries&apos;, 2), (&apos;Chicken&apos;, 8), (&apos;Salad&apos;, 9), (&apos;Steak&apos;, 8)]&quot;</bucket>
              <bucket>&quot;[(&apos;Chicken&apos;, 9), (&apos;Steak&apos;, 4), (&apos;Salad&apos;, 4), (&apos;Burger&apos;, 5)]&quot;</bucket>
              <bucket>&quot;[(&apos;Shrimp&apos;, 10), (&apos;Salmon&apos;, 6), (&apos;Pasta&apos;, 9)]&quot;</bucket>
              <bucket>&quot;[(&apos;Salad&apos;, 5), (&apos;Steak&apos;, 9), (&apos;Fries&apos;, 8), (&apos;Chicken&apos;, 4), (&apos;Burger&apos;, 10)]&quot;</bucket>
              <bucket>&quot;[(&apos;Fish&amp;Chips&apos;, 7), (&apos;Pasta&apos;, 9), (&apos;Salmon&apos;, 9), (&apos;Shrimp&apos;, 3)]&quot;</bucket>
              <bucket>&quot;[(&apos;Pasta&apos;, 10), (&apos;Shrimp&apos;, 4), (&apos;Fish&amp;Chips&apos;, 7), (&apos;Salmon&apos;, 7)]&quot;</bucket>
              <bucket>&quot;[(&apos;Shrimp&apos;, 7), (&apos;Salmon&apos;, 2), (&apos;Fish&amp;Chips&apos;, 9), (&apos;Pasta&apos;, 9)]&quot;</bucket>
              <bucket>&quot;[(&apos;Chicken&apos;, 9), (&apos;Steak&apos;, 8), (&apos;Salad&apos;, 9), (&apos;Fries&apos;, 5), (&apos;Burger&apos;, 5)]&quot;</bucket>
              <bucket>&quot;[(&apos;Shrimp&apos;, 9), (&apos;Salmon&apos;, 2), (&apos;Pasta&apos;, 4), (&apos;Fish&amp;Chips&apos;, 9)]&quot;</bucket>
              <bucket>&quot;[(&apos;Fish&amp;Chips&apos;, 1), (&apos;Salmon&apos;, 10), (&apos;Shrimp&apos;, 10)]&quot;</bucket>
              <bucket>&quot;[(&apos;Fish&amp;Chips&apos;, 9), (&apos;Shrimp&apos;, 9), (&apos;Salmon&apos;, 3), (&apos;Pasta&apos;, 2)]&quot;</bucket>
              <bucket>&quot;[(&apos;Chicken&apos;, 2), (&apos;Fries&apos;, 5), (&apos;Steak&apos;, 10), (&apos;Salad&apos;, 9), (&apos;Burger&apos;, 8)]&quot;</bucket>
              <bucket>&quot;[(&apos;Shrimp&apos;, 4), (&apos;Fish&amp;Chips&apos;, 10), (&apos;Salmon&apos;, 10)]&quot;</bucket>
              <bucket>&quot;[(&apos;Pasta&apos;, 6), (&apos;Fish&amp;Chips&apos;, 8), (&apos;Shrimp&apos;, 6), (&apos;Salmon&apos;, 5)]&quot;</bucket>
              <bucket>&quot;[(&apos;Shrimp&apos;, 3), (&apos;Pasta&apos;, 6), (&apos;Salmon&apos;, 8), (&apos;Fish&amp;Chips&apos;, 9)]&quot;</bucket>
              <bucket>&quot;[(&apos;Chicken&apos;, 9), (&apos;Steak&apos;, 5), (&apos;Fries&apos;, 10), (&apos;Salad&apos;, 5), (&apos;Burger&apos;, 8)]&quot;</bucket>
              <bucket>&quot;[(&apos;Shrimp&apos;, 10), (&apos;Pasta&apos;, 7), (&apos;Salmon&apos;, 4), (&apos;Fish&amp;Chips&apos;, 2)]&quot;</bucket>
              <bucket>&quot;[(&apos;Salmon&apos;, 7), (&apos;Pasta&apos;, 8), (&apos;Shrimp&apos;, 2), (&apos;Fish&amp;Chips&apos;, 10)]&quot;</bucket>
              <bucket>&quot;[(&apos;Fish&amp;Chips&apos;, 5), (&apos;Shrimp&apos;, 10), (&apos;Pasta&apos;, 9)]&quot;</bucket>
              <bucket>&quot;[(&apos;Steak&apos;, 8), (&apos;Chicken&apos;, 8), (&apos;Salad&apos;, 8), (&apos;Burger&apos;, 4), (&apos;Fries&apos;, 7)]&quot;</bucket>
              <bucket>&quot;[(&apos;Fish&amp;Chips&apos;, 10), (&apos;Pasta&apos;, 8), (&apos;Shrimp&apos;, 7)]&quot;</bucket>
              <bucket>&quot;[(&apos;Salmon&apos;, 5), (&apos;Fish&amp;Chips&apos;, 8), (&apos;Shrimp&apos;, 6), (&apos;Pasta&apos;, 5)]&quot;</bucket>
              <bucket>&quot;[(&apos;Salad&apos;, 2), (&apos;Burger&apos;, 7), (&apos;Steak&apos;, 10), (&apos;Chicken&apos;, 5), (&apos;Fries&apos;, 7)]&quot;</bucket>
              <bucket>&quot;[(&apos;Shrimp&apos;, 2), (&apos;Fish&amp;Chips&apos;, 5), (&apos;Pasta&apos;, 9), (&apos;Salmon&apos;, 10)]&quot;</bucket>
              <bucket>&quot;[(&apos;Salmon&apos;, 4), (&apos;Pasta&apos;, 8), (&apos;Fish&amp;Chips&apos;, 5), (&apos;Shrimp&apos;, 7)]&quot;</bucket>
              <bucket>&quot;[(&apos;Pasta&apos;, 5), (&apos;Fish&amp;Chips&apos;, 10), (&apos;Salmon&apos;, 3), (&apos;Shrimp&apos;, 6)]&quot;</bucket>
              <bucket>&quot;[(&apos;Burger&apos;, 8), (&apos;Fries&apos;, 3), (&apos;Steak&apos;, 6), (&apos;Salad&apos;, 3), (&apos;Chicken&apos;, 10)]&quot;</bucket>
              <bucket>&quot;[(&apos;Fish&amp;Chips&apos;, 9), (&apos;Pasta&apos;, 10), (&apos;Salmon&apos;, 8)]&quot;</bucket>
              <bucket>&quot;[(&apos;Fish&amp;Chips&apos;, 4), (&apos;Salmon&apos;, 7), (&apos;Pasta&apos;, 8), (&apos;Shrimp&apos;, 5)]&quot;</bucket>
              <bucket>&quot;[(&apos;Shrimp&apos;, 9), (&apos;Fish&amp;Chips&apos;, 4), (&apos;Salmon&apos;, 7)]&quot;</bucket>
              <bucket>&quot;[(&apos;Salmon&apos;, 9), (&apos;Pasta&apos;, 7), (&apos;Fish&amp;Chips&apos;, 10)]&quot;</bucket>
              <bucket>&quot;[(&apos;Salmon&apos;, 9), (&apos;Shrimp&apos;, 10)]&quot;</bucket>
              <bucket>&quot;[(&apos;Shrimp&apos;, 4), (&apos;Pasta&apos;, 3), (&apos;Fish&amp;Chips&apos;, 8), (&apos;Salmon&apos;, 8)]&quot;</bucket>
              <bucket>&quot;[(&apos;Salmon&apos;, 3), (&apos;Pasta&apos;, 7), (&apos;Shrimp&apos;, 7), (&apos;Fish&amp;Chips&apos;, 6)]&quot;</bucket>
              <bucket>&quot;[(&apos;Pasta&apos;, 2), (&apos;Salmon&apos;, 8), (&apos;Fish&amp;Chips&apos;, 4), (&apos;Shrimp&apos;, 7)]&quot;</bucket>
              <bucket>&quot;[(&apos;Salmon&apos;, 9), (&apos;Shrimp&apos;, 4), (&apos;Fish&amp;Chips&apos;, 9)]&quot;</bucket>
              <bucket>&quot;[(&apos;Burger&apos;, 7), (&apos;Fries&apos;, 4), (&apos;Steak&apos;, 7), (&apos;Chicken&apos;, 10)]&quot;</bucket>
              <bucket>&quot;[(&apos;Steak&apos;, 8), (&apos;Salad&apos;, 2), (&apos;Burger&apos;, 10), (&apos;Chicken&apos;, 6)]&quot;</bucket>
              <bucket>&quot;[(&apos;Chicken&apos;, 10), (&apos;Salad&apos;, 8), (&apos;Fries&apos;, 6), (&apos;Burger&apos;, 3), (&apos;Steak&apos;, 6)]&quot;</bucket>
              <bucket>&quot;[(&apos;Salad&apos;, 9), (&apos;Burger&apos;, 8), (&apos;Fries&apos;, 5), (&apos;Steak&apos;, 9)]&quot;</bucket>
              <bucket>&quot;[(&apos;Fish&amp;Chips&apos;, 5), (&apos;Pasta&apos;, 5), (&apos;Salmon&apos;, 8), (&apos;Shrimp&apos;, 4)]&quot;</bucket>
              <bucket>&quot;[(&apos;Fish&amp;Chips&apos;, 5), (&apos;Shrimp&apos;, 8), (&apos;Salmon&apos;, 6)]&quot;</bucket>
              <bucket>&quot;[(&apos;Burger&apos;, 7), (&apos;Chicken&apos;, 6), (&apos;Steak&apos;, 9), (&apos;Salad&apos;, 2)]&quot;</bucket>
              <bucket>&quot;[(&apos;Steak&apos;, 9), (&apos;Chicken&apos;, 7), (&apos;Fries&apos;, 5), (&apos;Salad&apos;, 9)]&quot;</bucket>
              <bucket>&quot;[(&apos;Salmon&apos;, 10), (&apos;Pasta&apos;, 2), (&apos;Shrimp&apos;, 7)]&quot;</bucket>
              <bucket>&quot;[(&apos;Steak&apos;, 3), (&apos;Chicken&apos;, 7), (&apos;Burger&apos;, 10), (&apos;Salad&apos;, 5), (&apos;Fries&apos;, 7)]&quot;</bucket>
              <bucket>&quot;[(&apos;Burger&apos;, 7), (&apos;Steak&apos;, 10), (&apos;Salad&apos;, 10)]&quot;</bucket>
              <bucket>&quot;[(&apos;Fish&amp;Chips&apos;, 10), (&apos;Shrimp&apos;, 9)]&quot;</bucket>
              <bucket>&quot;[(&apos;Steak&apos;, 6), (&apos;Burger&apos;, 7), (&apos;Salad&apos;, 7), (&apos;Chicken&apos;, 7)]&quot;</bucket>
              <bucket>&quot;[(&apos;Shrimp&apos;, 7), (&apos;Salmon&apos;, 9), (&apos;Pasta&apos;, 3)]&quot;</bucket>
              <bucket>&quot;[(&apos;Salmon&apos;, 6), (&apos;Pasta&apos;, 1), (&apos;Shrimp&apos;, 9), (&apos;Fish&amp;Chips&apos;, 2)]&quot;</bucket>
              <bucket>&quot;[(&apos;Pasta&apos;, 7), (&apos;Shrimp&apos;, 6), (&apos;Fish&amp;Chips&apos;, 3), (&apos;Salmon&apos;, 5)]&quot;</bucket>
              <bucket>&quot;[(&apos;Fries&apos;, 8), (&apos;Steak&apos;, 10), (&apos;Burger&apos;, 9)]&quot;</bucket>
              <bucket>&quot;[(&apos;Fries&apos;, 9), (&apos;Steak&apos;, 8), (&apos;Burger&apos;, 10), (&apos;Salad&apos;, 2)]&quot;</bucket>
              <bucket>&quot;[(&apos;Pasta&apos;, 6), (&apos;Fish&amp;Chips&apos;, 3), (&apos;Salmon&apos;, 4), (&apos;Shrimp&apos;, 7)]&quot;</bucket>
              <bucket>&quot;[(&apos;Chicken&apos;, 1), (&apos;Salad&apos;, 9), (&apos;Burger&apos;, 10), (&apos;Steak&apos;, 7)]&quot;</bucket>
              <bucket>&quot;[(&apos;Steak&apos;, 6), (&apos;Salad&apos;, 2), (&apos;Burger&apos;, 8), (&apos;Chicken&apos;, 8)]&quot;</bucket>
              <bucket>&quot;[(&apos;Salad&apos;, 4), (&apos;Burger&apos;, 7), (&apos;Steak&apos;, 10), (&apos;Fries&apos;, 6)]&quot;</bucket>
              <bucket>&quot;[(&apos;Salad&apos;, 8), (&apos;Chicken&apos;, 6), (&apos;Steak&apos;, 9), (&apos;Fries&apos;, 6)]&quot;</bucket>
              <bucket>&quot;[(&apos;Pasta&apos;, 10), (&apos;Fish&amp;Chips&apos;, 9), (&apos;Shrimp&apos;, 4)]&quot;</bucket>
              <bucket>&quot;[(&apos;Salmon&apos;, 8), (&apos;Shrimp&apos;, 7), (&apos;Fish&amp;Chips&apos;, 2), (&apos;Pasta&apos;, 1)]&quot;</bucket>
              <bucket>&quot;[(&apos;Chicken&apos;, 10), (&apos;Burger&apos;, 10), (&apos;Salad&apos;, 10)]&quot;</bucket>
              <bucket>&quot;[(&apos;Salmon&apos;, 4), (&apos;Fish&amp;Chips&apos;, 8), (&apos;Shrimp&apos;, 2), (&apos;Pasta&apos;, 9)]&quot;</bucket>
              <bucket>&quot;[(&apos;Salmon&apos;, 4), (&apos;Fish&amp;Chips&apos;, 4), (&apos;Shrimp&apos;, 5), (&apos;Pasta&apos;, 8)]&quot;</bucket>
              <bucket>&quot;[(&apos;Shrimp&apos;, 3), (&apos;Fish&amp;Chips&apos;, 5), (&apos;Pasta&apos;, 6), (&apos;Salmon&apos;, 7)]&quot;</bucket>
              <bucket>&quot;[(&apos;Fish&amp;Chips&apos;, 5), (&apos;Salmon&apos;, 5), (&apos;Shrimp&apos;, 4), (&apos;Pasta&apos;, 7)]&quot;</bucket>
              <bucket>&quot;[(&apos;Fish&amp;Chips&apos;, 9), (&apos;Salmon&apos;, 1), (&apos;Shrimp&apos;, 8)]&quot;</bucket>
              <bucket>&quot;[(&apos;Chicken&apos;, 2), (&apos;Salad&apos;, 6), (&apos;Fries&apos;, 9), (&apos;Steak&apos;, 10), (&apos;Burger&apos;, 2)]&quot;</bucket>
              <bucket>&quot;[(&apos;Salad&apos;, 4), (&apos;Steak&apos;, 8), (&apos;Fries&apos;, 4), (&apos;Burger&apos;, 10)]&quot;</bucket>
              <bucket>&quot;[(&apos;Burger&apos;, 8), (&apos;Fries&apos;, 8), (&apos;Chicken&apos;, 10), (&apos;Salad&apos;, 7)]&quot;</bucket>
              <bucket>&quot;[(&apos;Salad&apos;, 8), (&apos;Steak&apos;, 8), (&apos;Fries&apos;, 2), (&apos;Chicken&apos;, 8)]&quot;</bucket>
              <bucket>&quot;[(&apos;Shrimp&apos;, 8), (&apos;Salmon&apos;, 3), (&apos;Pasta&apos;, 8)]&quot;</bucket>
              <bucket>&quot;[(&apos;Fries&apos;, 9), (&apos;Burger&apos;, 5), (&apos;Steak&apos;, 10), (&apos;Salad&apos;, 3)]&quot;</bucket>
              <bucket>&quot;[(&apos;Pasta&apos;, 1), (&apos;Shrimp&apos;, 6), (&apos;Salmon&apos;, 10)]&quot;</bucket>
              <bucket>&quot;[(&apos;Fries&apos;, 10), (&apos;Chicken&apos;, 1), (&apos;Salad&apos;, 2), (&apos;Steak&apos;, 10), (&apos;Burger&apos;, 4)]&quot;</bucket>
              <bucket>&quot;[(&apos;Shrimp&apos;, 4), (&apos;Pasta&apos;, 10), (&apos;Salmon&apos;, 4), (&apos;Fish&amp;Chips&apos;, 3)]&quot;</bucket>
              <bucket>&quot;[(&apos;Pasta&apos;, 9), (&apos;Shrimp&apos;, 3), (&apos;Fish&amp;Chips&apos;, 10)]&quot;</bucket>
              <bucket>&quot;[(&apos;Chicken&apos;, 5), (&apos;Burger&apos;, 9), (&apos;Fries&apos;, 3), (&apos;Steak&apos;, 4), (&apos;Salad&apos;, 6)]&quot;</bucket>
              <bucket>&quot;[(&apos;Steak&apos;, 4), (&apos;Fries&apos;, 3), (&apos;Chicken&apos;, 9), (&apos;Burger&apos;, 8)]&quot;</bucket>
              <bucket>&quot;[(&apos;Steak&apos;, 9), (&apos;Burger&apos;, 9), (&apos;Salad&apos;, 2), (&apos;Chicken&apos;, 1)]&quot;</bucket>
              <bucket>&quot;[(&apos;Steak&apos;, 9), (&apos;Burger&apos;, 7), (&apos;Chicken&apos;, 4)]&quot;</bucket>
              <bucket>&quot;[(&apos;Salad&apos;, 4), (&apos;Chicken&apos;, 9), (&apos;Burger&apos;, 9), (&apos;Steak&apos;, 2), (&apos;Fries&apos;, 2)]&quot;</bucket>
              <bucket>&quot;[(&apos;Chicken&apos;, 8), (&apos;Salad&apos;, 6), (&apos;Fries&apos;, 8), (&apos;Burger&apos;, 8), (&apos;Steak&apos;, 1)]&quot;</bucket>
              <bucket>&quot;[(&apos;Salmon&apos;, 7), (&apos;Pasta&apos;, 4), (&apos;Fish&amp;Chips&apos;, 10)]&quot;</bucket>
              <bucket>&quot;[(&apos;Fish&amp;Chips&apos;, 8), (&apos;Pasta&apos;, 4), (&apos;Shrimp&apos;, 2), (&apos;Salmon&apos;, 6)]&quot;</bucket>
              <bucket>&quot;[(&apos;Pasta&apos;, 2), (&apos;Fish&amp;Chips&apos;, 8), (&apos;Shrimp&apos;, 3), (&apos;Salmon&apos;, 6)]&quot;</bucket>
              <bucket>&quot;[(&apos;Fish&amp;Chips&apos;, 6), (&apos;Pasta&apos;, 4), (&apos;Shrimp&apos;, 1), (&apos;Salmon&apos;, 9)]&quot;</bucket>
              <bucket>&quot;[(&apos;Fish&amp;Chips&apos;, 8), (&apos;Salmon&apos;, 2), (&apos;Pasta&apos;, 4), (&apos;Shrimp&apos;, 5)]&quot;</bucket>
              <bucket>&quot;[(&apos;Salad&apos;, 1), (&apos;Burger&apos;, 7), (&apos;Chicken&apos;, 7), (&apos;Steak&apos;, 4), (&apos;Fries&apos;, 8)]&quot;</bucket>
              <bucket>&quot;[(&apos;Fries&apos;, 1), (&apos;Chicken&apos;, 3), (&apos;Burger&apos;, 10), (&apos;Steak&apos;, 7)]&quot;</bucket>
              <bucket>&quot;[(&apos;Salmon&apos;, 6), (&apos;Shrimp&apos;, 9)]&quot;</bucket>
              <bucket>&quot;[(&apos;Steak&apos;, 8), (&apos;Fries&apos;, 9), (&apos;Burger&apos;, 3), (&apos;Salad&apos;, 8), (&apos;Chicken&apos;, 1)]&quot;</bucket>
              <bucket>&quot;[(&apos;Pasta&apos;, 9), (&apos;Fish&amp;Chips&apos;, 2), (&apos;Salmon&apos;, 10)]&quot;</bucket>
              <bucket>&quot;[(&apos;Chicken&apos;, 7), (&apos;Steak&apos;, 9), (&apos;Burger&apos;, 3)]&quot;</bucket>
              <bucket>&quot;[(&apos;Chicken&apos;, 6), (&apos;Burger&apos;, 3), (&apos;Steak&apos;, 8), (&apos;Fries&apos;, 2), (&apos;Salad&apos;, 3)]&quot;</bucket>
              <bucket>&quot;[(&apos;Chicken&apos;, 10), (&apos;Salad&apos;, 6), (&apos;Steak&apos;, 5), (&apos;Fries&apos;, 6)]&quot;</bucket>
              <bucket>&quot;[(&apos;Steak&apos;, 9), (&apos;Burger&apos;, 8), (&apos;Chicken&apos;, 2)]&quot;</bucket>
              <bucket>&quot;[(&apos;Salad&apos;, 1), (&apos;Burger&apos;, 8), (&apos;Steak&apos;, 3), (&apos;Fries&apos;, 5), (&apos;Chicken&apos;, 8)]&quot;</bucket>
              <bucket>&quot;[(&apos;Salmon&apos;, 3), (&apos;Pasta&apos;, 2), (&apos;Shrimp&apos;, 8), (&apos;Fish&amp;Chips&apos;, 3)]&quot;</bucket>
              <bucket>&quot;[(&apos;Steak&apos;, 2), (&apos;Chicken&apos;, 10), (&apos;Salad&apos;, 3), (&apos;Fries&apos;, 3), (&apos;Burger&apos;, 7)]&quot;</bucket>
              <bucket>&quot;[(&apos;Chicken&apos;, 6), (&apos;Salad&apos;, 2), (&apos;Steak&apos;, 8), (&apos;Fries&apos;, 10)]&quot;</bucket>
              <bucket>&quot;[(&apos;Burger&apos;, 6), (&apos;Salad&apos;, 10), (&apos;Fries&apos;, 4), (&apos;Steak&apos;, 3), (&apos;Chicken&apos;, 5)]&quot;</bucket>
              <bucket>&quot;[(&apos;Fish&amp;Chips&apos;, 6), (&apos;Shrimp&apos;, 9)]&quot;</bucket>
              <bucket>&quot;[(&apos;Fish&amp;Chips&apos;, 7), (&apos;Pasta&apos;, 4), (&apos;Shrimp&apos;, 4), (&apos;Salmon&apos;, 3)]&quot;</bucket>
              <bucket>&quot;[(&apos;Pasta&apos;, 6), (&apos;Salmon&apos;, 8), (&apos;Fish&amp;Chips&apos;, 1), (&apos;Shrimp&apos;, 3)]&quot;</bucket>
              <bucket>&quot;[(&apos;Fish&amp;Chips&apos;, 1), (&apos;Shrimp&apos;, 9), (&apos;Pasta&apos;, 6)]&quot;</bucket>
              <bucket>&quot;[(&apos;Fries&apos;, 2), (&apos;Burger&apos;, 6), (&apos;Chicken&apos;, 2), (&apos;Salad&apos;, 3), (&apos;Steak&apos;, 8)]&quot;</bucket>
              <bucket>&quot;[(&apos;Steak&apos;, 7), (&apos;Chicken&apos;, 9), (&apos;Salad&apos;, 3), (&apos;Fries&apos;, 2)]&quot;</bucket>
              <bucket>&quot;[(&apos;Chicken&apos;, 7), (&apos;Steak&apos;, 9), (&apos;Salad&apos;, 1), (&apos;Burger&apos;, 1)]&quot;</bucket>
              <bucket>&quot;[(&apos;Fries&apos;, 7), (&apos;Chicken&apos;, 10), (&apos;Steak&apos;, 6)]&quot;</bucket>
              <bucket>&quot;[(&apos;Chicken&apos;, 5), (&apos;Fries&apos;, 9), (&apos;Steak&apos;, 9)]&quot;</bucket>
              <bucket>&quot;[(&apos;Pasta&apos;, 1), (&apos;Salmon&apos;, 8), (&apos;Fish&amp;Chips&apos;, 9)]&quot;</bucket>
              <bucket>&quot;[(&apos;Pasta&apos;, 5), (&apos;Salmon&apos;, 6), (&apos;Fish&amp;Chips&apos;, 8)]&quot;</bucket>
              <bucket>&quot;[(&apos;Pasta&apos;, 7), (&apos;Fish&amp;Chips&apos;, 4), (&apos;Salmon&apos;, 8)]&quot;</bucket>
              <bucket>&quot;[(&apos;Fish&amp;Chips&apos;, 1), (&apos;Salmon&apos;, 4), (&apos;Shrimp&apos;, 7), (&apos;Pasta&apos;, 3)]&quot;</bucket>
              <bucket>&quot;[(&apos;Pasta&apos;, 3), (&apos;Fish&amp;Chips&apos;, 6), (&apos;Shrimp&apos;, 6), (&apos;Salmon&apos;, 1)]&quot;</bucket>
              <bucket>&quot;[(&apos;Chicken&apos;, 10), (&apos;Fries&apos;, 5), (&apos;Steak&apos;, 5), (&apos;Salad&apos;, 3)]&quot;</bucket>
              <bucket>&quot;[(&apos;Shrimp&apos;, 4), (&apos;Salmon&apos;, 9), (&apos;Fish&amp;Chips&apos;, 2)]&quot;</bucket>
              <bucket>&quot;[(&apos;Fries&apos;, 9), (&apos;Steak&apos;, 6), (&apos;Chicken&apos;, 4), (&apos;Burger&apos;, 2), (&apos;Salad&apos;, 5)]&quot;</bucket>
              <bucket>&quot;[(&apos;Salad&apos;, 8), (&apos;Steak&apos;, 1), (&apos;Burger&apos;, 9), (&apos;Chicken&apos;, 6)]&quot;</bucket>
              <bucket>&quot;[(&apos;Shrimp&apos;, 6), (&apos;Salmon&apos;, 8)]&quot;</bucket>
              <bucket>&quot;[(&apos;Fish&amp;Chips&apos;, 10), (&apos;Pasta&apos;, 2), (&apos;Shrimp&apos;, 3), (&apos;Salmon&apos;, 2)]&quot;</bucket>
              <bucket>&quot;[(&apos;Burger&apos;, 9), (&apos;Chicken&apos;, 5), (&apos;Steak&apos;, 2), (&apos;Fries&apos;, 10)]&quot;</bucket>
              <bucket>&quot;[(&apos;Steak&apos;, 3), (&apos;Chicken&apos;, 6), (&apos;Burger&apos;, 10)]&quot;</bucket>
              <bucket>&quot;[(&apos;Shrimp&apos;, 8), (&apos;Salmon&apos;, 5)]&quot;</bucket>
              <bucket>&quot;[(&apos;Burger&apos;, 5), (&apos;Chicken&apos;, 7), (&apos;Salad&apos;, 7), (&apos;Steak&apos;, 3)]&quot;</bucket>
              <bucket>&quot;[(&apos;Fries&apos;, 2), (&apos;Chicken&apos;, 3), (&apos;Salad&apos;, 4), (&apos;Steak&apos;, 3), (&apos;Burger&apos;, 10)]&quot;</bucket>
              <bucket>&quot;[(&apos;Shrimp&apos;, 2), (&apos;Salmon&apos;, 8), (&apos;Fish&amp;Chips&apos;, 4), (&apos;Pasta&apos;, 2)]&quot;</bucket>
              <bucket>&quot;[(&apos;Pasta&apos;, 8), (&apos;Fish&amp;Chips&apos;, 4), (&apos;Shrimp&apos;, 5)]&quot;</bucket>
              <bucket>&quot;[(&apos;Shrimp&apos;, 2), (&apos;Salmon&apos;, 5), (&apos;Fish&amp;Chips&apos;, 9)]&quot;</bucket>
              <bucket>&quot;[(&apos;Salmon&apos;, 4), (&apos;Shrimp&apos;, 6), (&apos;Fish&amp;Chips&apos;, 4)]&quot;</bucket>
              <bucket>&quot;[(&apos;Chicken&apos;, 1), (&apos;Fries&apos;, 6), (&apos;Steak&apos;, 7), (&apos;Salad&apos;, 3), (&apos;Burger&apos;, 5)]&quot;</bucket>
              <bucket>&quot;[(&apos;Pasta&apos;, 7), (&apos;Salmon&apos;, 4), (&apos;Fish&amp;Chips&apos;, 3), (&apos;Shrimp&apos;, 3)]&quot;</bucket>
              <bucket>&quot;[(&apos;Fish&amp;Chips&apos;, 3), (&apos;Salmon&apos;, 10), (&apos;Shrimp&apos;, 2)]&quot;</bucket>
              <bucket>&quot;[(&apos;Cereal&apos;, 10), (&apos;Pancake&apos;, 10), (&apos;Eggs&apos;, 4), (&apos;Coffee&apos;, 10)]&quot;</bucket>
              <bucket>&quot;[(&apos;Fish&amp;Chips&apos;, 5), (&apos;Shrimp&apos;, 2), (&apos;Salmon&apos;, 2), (&apos;Pasta&apos;, 9)]&quot;</bucket>
              <bucket>&quot;[(&apos;Chicken&apos;, 10), (&apos;Fries&apos;, 3), (&apos;Burger&apos;, 6), (&apos;Salad&apos;, 4)]&quot;</bucket>
              <bucket>&quot;[(&apos;Burger&apos;, 5), (&apos;Steak&apos;, 7), (&apos;Fries&apos;, 1), (&apos;Chicken&apos;, 4)]&quot;</bucket>
              <bucket>&quot;[(&apos;Fish&amp;Chips&apos;, 10), (&apos;Pasta&apos;, 2), (&apos;Salmon&apos;, 1), (&apos;Shrimp&apos;, 3)]&quot;</bucket>
              <bucket>&quot;[(&apos;Shrimp&apos;, 8), (&apos;Fish&amp;Chips&apos;, 5)]&quot;</bucket>
              <bucket>&quot;[(&apos;Pasta&apos;, 10), (&apos;Salmon&apos;, 8)]&quot;</bucket>
              <bucket>&quot;[(&apos;Fish&amp;Chips&apos;, 4), (&apos;Shrimp&apos;, 4), (&apos;Pasta&apos;, 3), (&apos;Salmon&apos;, 4)]&quot;</bucket>
              <bucket>&quot;[(&apos;Burger&apos;, 6), (&apos;Chicken&apos;, 5), (&apos;Steak&apos;, 3), (&apos;Salad&apos;, 7)]&quot;</bucket>
              <bucket>&quot;[(&apos;Pasta&apos;, 10), (&apos;Shrimp&apos;, 6)]&quot;</bucket>
              <bucket>&quot;[(&apos;Eggs&apos;, 10), (&apos;Coffee&apos;, 4), (&apos;Cereal&apos;, 5), (&apos;Pancake&apos;, 10)]&quot;</bucket>
              <bucket>&quot;[(&apos;Pancake&apos;, 10), (&apos;Coffee&apos;, 7), (&apos;Cereal&apos;, 8), (&apos;Eggs&apos;, 6)]&quot;</bucket>
              <bucket>&quot;[(&apos;Salad&apos;, 5), (&apos;Chicken&apos;, 10), (&apos;Burger&apos;, 6)]&quot;</bucket>
              <bucket>&quot;[(&apos;Fish&amp;Chips&apos;, 8), (&apos;Salmon&apos;, 1), (&apos;Shrimp&apos;, 5)]&quot;</bucket>
              <bucket>&quot;[(&apos;Fish&amp;Chips&apos;, 3), (&apos;Shrimp&apos;, 9)]&quot;</bucket>
              <bucket>&quot;[(&apos;Fish&amp;Chips&apos;, 2), (&apos;Salmon&apos;, 6), (&apos;Shrimp&apos;, 1), (&apos;Pasta&apos;, 8)]&quot;</bucket>
              <bucket>&quot;[(&apos;Pasta&apos;, 1), (&apos;Shrimp&apos;, 9), (&apos;Salmon&apos;, 1), (&apos;Fish&amp;Chips&apos;, 1)]&quot;</bucket>
              <bucket>&quot;[(&apos;Steak&apos;, 5), (&apos;Burger&apos;, 8), (&apos;Chicken&apos;, 1), (&apos;Fries&apos;, 4), (&apos;Salad&apos;, 2)]&quot;</bucket>
              <bucket>&quot;[(&apos;Steak&apos;, 3), (&apos;Fries&apos;, 7), (&apos;Salad&apos;, 7), (&apos;Burger&apos;, 8)]&quot;</bucket>
              <bucket>&quot;[(&apos;Salmon&apos;, 9), (&apos;Shrimp&apos;, 3), (&apos;Pasta&apos;, 2)]&quot;</bucket>
              <bucket>&quot;[(&apos;Chicken&apos;, 8), (&apos;Steak&apos;, 2), (&apos;Salad&apos;, 7), (&apos;Burger&apos;, 2), (&apos;Fries&apos;, 4)]&quot;</bucket>
              <bucket>&quot;[(&apos;Pasta&apos;, 1), (&apos;Shrimp&apos;, 2), (&apos;Fish&amp;Chips&apos;, 2), (&apos;Salmon&apos;, 9)]&quot;</bucket>
              <bucket>&quot;[(&apos;Chicken&apos;, 10), (&apos;Steak&apos;, 1), (&apos;Fries&apos;, 7), (&apos;Burger&apos;, 4)]&quot;</bucket>
              <bucket>&quot;[(&apos;Burger&apos;, 1), (&apos;Chicken&apos;, 7), (&apos;Salad&apos;, 8), (&apos;Steak&apos;, 4)]&quot;</bucket>
              <bucket>&quot;[(&apos;Shrimp&apos;, 5), (&apos;Salmon&apos;, 2), (&apos;Pasta&apos;, 8)]&quot;</bucket>
              <bucket>&quot;[(&apos;Chicken&apos;, 9), (&apos;Salad&apos;, 3), (&apos;Burger&apos;, 6), (&apos;Steak&apos;, 1)]&quot;</bucket>
              <bucket>&quot;[(&apos;Salad&apos;, 5), (&apos;Burger&apos;, 4), (&apos;Steak&apos;, 8)]&quot;</bucket>
              <bucket>&quot;[(&apos;Pasta&apos;, 1), (&apos;Shrimp&apos;, 7), (&apos;Salmon&apos;, 4)]&quot;</bucket>
              <bucket>&quot;[(&apos;Coffee&apos;, 6), (&apos;Cereal&apos;, 5), (&apos;Pancake&apos;, 10), (&apos;Eggs&apos;, 8)]&quot;</bucket>
              <bucket>&quot;[(&apos;Pancake&apos;, 9), (&apos;Cereal&apos;, 10), (&apos;Coffee&apos;, 1), (&apos;Eggs&apos;, 6)]&quot;</bucket>
              <bucket>&quot;[(&apos;Salmon&apos;, 2), (&apos;Fish&amp;Chips&apos;, 3), (&apos;Shrimp&apos;, 7)]&quot;</bucket>
              <bucket>&quot;[(&apos;Chicken&apos;, 10), (&apos;Salad&apos;, 7), (&apos;Fries&apos;, 10)]&quot;</bucket>
              <bucket>&quot;[(&apos;Pasta&apos;, 4), (&apos;Fish&amp;Chips&apos;, 7), (&apos;Salmon&apos;, 5)]&quot;</bucket>
              <bucket>&quot;[(&apos;Shrimp&apos;, 8), (&apos;Salmon&apos;, 3)]&quot;</bucket>
              <bucket>&quot;[(&apos;Steak&apos;, 7), (&apos;Salad&apos;, 1), (&apos;Burger&apos;, 7)]&quot;</bucket>
              <bucket>&quot;[(&apos;Shrimp&apos;, 4), (&apos;Salmon&apos;, 8)]&quot;</bucket>
              <bucket>&quot;[(&apos;Fish&amp;Chips&apos;, 3), (&apos;Shrimp&apos;, 1), (&apos;Salmon&apos;, 8), (&apos;Pasta&apos;, 2)]&quot;</bucket>
              <bucket>&quot;[(&apos;Coffee&apos;, 3), (&apos;Pancake&apos;, 8), (&apos;Cereal&apos;, 8), (&apos;Eggs&apos;, 7)]&quot;</bucket>
              <bucket>&quot;[(&apos;Burger&apos;, 7), (&apos;Chicken&apos;, 10)]&quot;</bucket>
              <bucket>&quot;[(&apos;Steak&apos;, 3), (&apos;Fries&apos;, 1), (&apos;Salad&apos;, 4), (&apos;Chicken&apos;, 10)]&quot;</bucket>
              <bucket>&quot;[(&apos;Steak&apos;, 4), (&apos;Fries&apos;, 3), (&apos;Chicken&apos;, 3), (&apos;Burger&apos;, 7)]&quot;</bucket>
              <bucket>&quot;[(&apos;Steak&apos;, 9), (&apos;Salad&apos;, 7)]&quot;</bucket>
              <bucket>&quot;[(&apos;Pasta&apos;, 1), (&apos;Salmon&apos;, 6), (&apos;Fish&amp;Chips&apos;, 1), (&apos;Shrimp&apos;, 4)]&quot;</bucket>
              <bucket>&quot;[(&apos;Fries&apos;, 4), (&apos;Chicken&apos;, 4), (&apos;Steak&apos;, 7), (&apos;Burger&apos;, 1)]&quot;</bucket>
              <bucket>&quot;[(&apos;Salmon&apos;, 10), (&apos;Pasta&apos;, 4)]&quot;</bucket>
              <bucket>&quot;[(&apos;Fries&apos;, 4), (&apos;Burger&apos;, 9), (&apos;Chicken&apos;, 6)]&quot;</bucket>
              <bucket>&quot;[(&apos;Salad&apos;, 4), (&apos;Steak&apos;, 10)]&quot;</bucket>
              <bucket>&quot;[(&apos;Pasta&apos;, 2), (&apos;Salmon&apos;, 2), (&apos;Shrimp&apos;, 7)]&quot;</bucket>
              <bucket>&quot;[(&apos;Fish&amp;Chips&apos;, 3), (&apos;Salmon&apos;, 10)]&quot;</bucket>
              <bucket>&quot;[(&apos;Shrimp&apos;, 4), (&apos;Salmon&apos;, 2), (&apos;Fish&amp;Chips&apos;, 3), (&apos;Pasta&apos;, 4)]&quot;</bucket>
              <bucket>&quot;[(&apos;Chicken&apos;, 9), (&apos;Salad&apos;, 3), (&apos;Burger&apos;, 2), (&apos;Fries&apos;, 9)]&quot;</bucket>
              <bucket>&quot;[(&apos;Salad&apos;, 5), (&apos;Steak&apos;, 1), (&apos;Chicken&apos;, 2), (&apos;Burger&apos;, 10)]&quot;</bucket>
              <bucket>&quot;[(&apos;Chicken&apos;, 4), (&apos;Fries&apos;, 3), (&apos;Salad&apos;, 9), (&apos;Burger&apos;, 6)]&quot;</bucket>
              <bucket>&quot;[(&apos;Burger&apos;, 8), (&apos;Chicken&apos;, 8)]&quot;</bucket>
              <bucket>&quot;[(&apos;Pancake&apos;, 9), (&apos;Cereal&apos;, 2), (&apos;Coffee&apos;, 9), (&apos;Eggs&apos;, 8)]&quot;</bucket>
              <bucket>&quot;[(&apos;Shrimp&apos;, 4), (&apos;Salmon&apos;, 5), (&apos;Pasta&apos;, 3)]&quot;</bucket>
              <bucket>&quot;[(&apos;Pancake&apos;, 10), (&apos;Eggs&apos;, 10), (&apos;Coffee&apos;, 5)]&quot;</bucket>
              <bucket>&quot;[(&apos;Pancake&apos;, 10), (&apos;Coffee&apos;, 6), (&apos;Cereal&apos;, 9), (&apos;Eggs&apos;, 1)]&quot;</bucket>
              <bucket>&quot;[(&apos;Fish&amp;Chips&apos;, 4), (&apos;Pasta&apos;, 9), (&apos;Shrimp&apos;, 2)]&quot;</bucket>
              <bucket>&quot;[(&apos;Salad&apos;, 10), (&apos;Steak&apos;, 4), (&apos;Chicken&apos;, 2), (&apos;Burger&apos;, 1), (&apos;Fries&apos;, 4)]&quot;</bucket>
              <bucket>&quot;[(&apos;Steak&apos;, 6), (&apos;Fries&apos;, 10), (&apos;Salad&apos;, 6)]&quot;</bucket>
              <bucket>&quot;[(&apos;Steak&apos;, 8), (&apos;Salad&apos;, 5), (&apos;Fries&apos;, 1), (&apos;Chicken&apos;, 1)]&quot;</bucket>
              <bucket>&quot;[(&apos;Burger&apos;, 1), (&apos;Steak&apos;, 2), (&apos;Salad&apos;, 4), (&apos;Fries&apos;, 9), (&apos;Chicken&apos;, 6)]&quot;</bucket>
              <bucket>&quot;[(&apos;Coffee&apos;, 6), (&apos;Pancake&apos;, 10), (&apos;Eggs&apos;, 9)]&quot;</bucket>
              <bucket>&quot;[(&apos;Salmon&apos;, 1), (&apos;Fish&amp;Chips&apos;, 8), (&apos;Pasta&apos;, 2), (&apos;Shrimp&apos;, 2)]&quot;</bucket>
              <bucket>&quot;[(&apos;Burger&apos;, 9), (&apos;Chicken&apos;, 5), (&apos;Steak&apos;, 1)]&quot;</bucket>
              <bucket>&quot;[(&apos;Fish&amp;Chips&apos;, 6), (&apos;Shrimp&apos;, 2), (&apos;Pasta&apos;, 6)]&quot;</bucket>
              <bucket>&quot;[(&apos;Burger&apos;, 1), (&apos;Steak&apos;, 10)]&quot;</bucket>
              <bucket>&quot;[(&apos;Fish&amp;Chips&apos;, 2), (&apos;Salmon&apos;, 10)]&quot;</bucket>
              <bucket>&quot;[(&apos;Pancake&apos;, 6), (&apos;Coffee&apos;, 4), (&apos;Eggs&apos;, 8), (&apos;Cereal&apos;, 6)]&quot;</bucket>
              <bucket>&quot;[(&apos;Chicken&apos;, 2), (&apos;Salad&apos;, 6), (&apos;Burger&apos;, 10)]&quot;</bucket>
              <bucket>&quot;[(&apos;Fish&amp;Chips&apos;, 9), (&apos;Shrimp&apos;, 3)]&quot;</bucket>
              <bucket>&quot;[(&apos;Salmon&apos;, 1), (&apos;Shrimp&apos;, 8)]&quot;</bucket>
              <bucket>&quot;[(&apos;Burger&apos;, 8), (&apos;Steak&apos;, 5)]&quot;</bucket>
              <bucket>&quot;[(&apos;Cereal&apos;, 10), (&apos;Eggs&apos;, 2), (&apos;Pancake&apos;, 9)]&quot;</bucket>
              <bucket>&quot;[(&apos;Eggs&apos;, 10), (&apos;Pancake&apos;, 10)]&quot;</bucket>
              <bucket>&quot;[(&apos;Burger&apos;, 9), (&apos;Salad&apos;, 8), (&apos;Steak&apos;, 1)]&quot;</bucket>
              <bucket>&quot;[(&apos;Pancake&apos;, 5), (&apos;Cereal&apos;, 5), (&apos;Coffee&apos;, 2), (&apos;Eggs&apos;, 10)]&quot;</bucket>
              <bucket>&quot;[(&apos;Fish&amp;Chips&apos;, 10), (&apos;Pasta&apos;, 4)]&quot;</bucket>
              <bucket>&quot;[(&apos;Pasta&apos;, 1), (&apos;Shrimp&apos;, 8)]&quot;</bucket>
              <bucket>&quot;[(&apos;Pasta&apos;, 9), (&apos;Fish&amp;Chips&apos;, 6)]&quot;</bucket>
              <bucket>&quot;[(&apos;Coffee&apos;, 8), (&apos;Pancake&apos;, 10), (&apos;Eggs&apos;, 7)]&quot;</bucket>
              <bucket>&quot;[(&apos;Cereal&apos;, 6), (&apos;Eggs&apos;, 3), (&apos;Pancake&apos;, 8), (&apos;Coffee&apos;, 9)]&quot;</bucket>
              <bucket>&quot;[(&apos;Chicken&apos;, 8), (&apos;Steak&apos;, 4), (&apos;Salad&apos;, 1)]&quot;</bucket>
              <bucket>&quot;[(&apos;Salmon&apos;, 5), (&apos;Pasta&apos;, 9)]&quot;</bucket>
              <bucket>&quot;[(&apos;Coffee&apos;, 5), (&apos;Cereal&apos;, 8), (&apos;Pancake&apos;, 10)]&quot;</bucket>
              <bucket>&quot;[(&apos;Steak&apos;, 5), (&apos;Chicken&apos;, 1), (&apos;Fries&apos;, 7), (&apos;Salad&apos;, 6)]&quot;</bucket>
              <bucket>&quot;[(&apos;Pancake&apos;, 6), (&apos;Eggs&apos;, 4), (&apos;Cereal&apos;, 10)]&quot;</bucket>
              <bucket>&quot;[(&apos;Coffee&apos;, 10), (&apos;Cereal&apos;, 9), (&apos;Eggs&apos;, 8)]&quot;</bucket>
              <bucket>&quot;[(&apos;Chicken&apos;, 5), (&apos;Burger&apos;, 9)]&quot;</bucket>
              <bucket>&quot;[(&apos;Fries&apos;, 6), (&apos;Burger&apos;, 6), (&apos;Steak&apos;, 4)]&quot;</bucket>
              <bucket>&quot;[(&apos;Coffee&apos;, 4), (&apos;Cereal&apos;, 9)]&quot;</bucket>
              <bucket>&quot;[(&apos;Chicken&apos;, 4), (&apos;Fries&apos;, 4), (&apos;Salad&apos;, 6), (&apos;Burger&apos;, 5)]&quot;</bucket>
              <bucket>&quot;[(&apos;Salmon&apos;, 2), (&apos;Pasta&apos;, 3), (&apos;Shrimp&apos;, 3), (&apos;Fish&amp;Chips&apos;, 3)]&quot;</bucket>
              <bucket>&quot;[(&apos;Pasta&apos;, 8), (&apos;Fish&amp;Chips&apos;, 6)]&quot;</bucket>
              <bucket>&quot;[(&apos;Eggs&apos;, 10), (&apos;Cereal&apos;, 10)]&quot;</bucket>
              <bucket>&quot;[(&apos;Salad&apos;, 6), (&apos;Burger&apos;, 6), (&apos;Chicken&apos;, 1), (&apos;Fries&apos;, 9)]&quot;</bucket>
              <bucket>&quot;[(&apos;Burger&apos;, 3), (&apos;Salad&apos;, 3), (&apos;Fries&apos;, 5), (&apos;Chicken&apos;, 7)]&quot;</bucket>
              <bucket>&quot;[(&apos;Steak&apos;, 4), (&apos;Burger&apos;, 8)]&quot;</bucket>
              <bucket>&quot;[(&apos;Shrimp&apos;, 2), (&apos;Fish&amp;Chips&apos;, 6), (&apos;Pasta&apos;, 4)]&quot;</bucket>
              <bucket>&quot;[(&apos;Fish&amp;Chips&apos;, 5), (&apos;Pasta&apos;, 5), (&apos;Shrimp&apos;, 2)]&quot;</bucket>
              <bucket>&quot;[(&apos;Cereal&apos;, 9), (&apos;Eggs&apos;, 5), (&apos;Pancake&apos;, 5)]&quot;</bucket>
              <bucket>&quot;[(&apos;Steak&apos;, 8), (&apos;Burger&apos;, 1), (&apos;Fries&apos;, 1), (&apos;Salad&apos;, 1)]&quot;</bucket>
              <bucket>&quot;[(&apos;Chicken&apos;, 3), (&apos;Burger&apos;, 7), (&apos;Salad&apos;, 1), (&apos;Steak&apos;, 2)]&quot;</bucket>
              <bucket>&quot;[(&apos;Eggs&apos;, 8), (&apos;Pancake&apos;, 10)]&quot;</bucket>
              <bucket>&quot;[(&apos;Fish&amp;Chips&apos;, 6), (&apos;Salmon&apos;, 5)]&quot;</bucket>
              <bucket>&quot;[(&apos;Salmon&apos;, 6), (&apos;Fish&amp;Chips&apos;, 4), (&apos;Pasta&apos;, 1)]&quot;</bucket>
              <bucket>&quot;[(&apos;Coffee&apos;, 6), (&apos;Eggs&apos;, 5), (&apos;Cereal&apos;, 10), (&apos;Pancake&apos;, 2)]&quot;</bucket>
              <bucket>&quot;[(&apos;Coffee&apos;, 10), (&apos;Cereal&apos;, 8), (&apos;Pancake&apos;, 7)]&quot;</bucket>
              <bucket>&quot;[(&apos;Pancake&apos;, 9), (&apos;Cereal&apos;, 6), (&apos;Coffee&apos;, 9)]&quot;</bucket>
              <bucket>&quot;[(&apos;Cereal&apos;, 5), (&apos;Eggs&apos;, 4), (&apos;Pancake&apos;, 9)]&quot;</bucket>
              <bucket>&quot;[(&apos;Salmon&apos;, 6), (&apos;Pasta&apos;, 6)]&quot;</bucket>
              <bucket>&quot;[(&apos;Burger&apos;, 3), (&apos;Steak&apos;, 2), (&apos;Chicken&apos;, 2), (&apos;Fries&apos;, 5), (&apos;Salad&apos;, 6)]&quot;</bucket>
              <bucket>&quot;[(&apos;Chicken&apos;, 10), (&apos;Steak&apos;, 2)]&quot;</bucket>
              <bucket>&quot;[(&apos;Chicken&apos;, 7), (&apos;Burger&apos;, 6)]&quot;</bucket>
              <bucket>&quot;[(&apos;Pancake&apos;, 2), (&apos;Coffee&apos;, 8), (&apos;Eggs&apos;, 6), (&apos;Cereal&apos;, 8)]&quot;</bucket>
              <bucket>&quot;[(&apos;Steak&apos;, 8), (&apos;Fries&apos;, 4)]&quot;</bucket>
              <bucket>&quot;[(&apos;Cereal&apos;, 7), (&apos;Pancake&apos;, 5), (&apos;Coffee&apos;, 1), (&apos;Eggs&apos;, 6)]&quot;</bucket>
              <bucket>&quot;[(&apos;Cereal&apos;, 1), (&apos;Coffee&apos;, 9), (&apos;Eggs&apos;, 10), (&apos;Pancake&apos;, 4)]&quot;</bucket>
              <bucket>&quot;[(&apos;Cereal&apos;, 8), (&apos;Coffee&apos;, 1), (&apos;Eggs&apos;, 6), (&apos;Pancake&apos;, 4)]&quot;</bucket>
              <bucket>&quot;[(&apos;Steak&apos;, 7), (&apos;Fries&apos;, 7)]&quot;</bucket>
              <bucket>&quot;[(&apos;Fries&apos;, 7), (&apos;Steak&apos;, 7)]&quot;</bucket>
              <bucket>&quot;[(&apos;Fries&apos;, 10), (&apos;Salad&apos;, 5), (&apos;Chicken&apos;, 6)]&quot;</bucket>
              <bucket>&quot;[(&apos;Shrimp&apos;, 3), (&apos;Fish&amp;Chips&apos;, 2), (&apos;Pasta&apos;, 6)]&quot;</bucket>
              <bucket>&quot;[(&apos;Steak&apos;, 3), (&apos;Fries&apos;, 1), (&apos;Chicken&apos;, 4), (&apos;Burger&apos;, 1), (&apos;Salad&apos;, 5)]&quot;</bucket>
              <bucket>&quot;[(&apos;Fish&amp;Chips&apos;, 3), (&apos;Salmon&apos;, 7)]&quot;</bucket>
              <bucket>&quot;[(&apos;Cereal&apos;, 5), (&apos;Coffee&apos;, 9), (&apos;Pancake&apos;, 9)]&quot;</bucket>
              <bucket>&quot;[(&apos;Coffee&apos;, 7), (&apos;Eggs&apos;, 6), (&apos;Pancake&apos;, 5), (&apos;Cereal&apos;, 4)]&quot;</bucket>
              <bucket>&quot;[(&apos;Coffee&apos;, 6), (&apos;Cereal&apos;, 6), (&apos;Pancake&apos;, 9)]&quot;</bucket>
              <bucket>&quot;[(&apos;Steak&apos;, 4), (&apos;Salad&apos;, 10), (&apos;Fries&apos;, 3)]&quot;</bucket>
              <bucket>&quot;[(&apos;Pancake&apos;, 8), (&apos;Eggs&apos;, 5), (&apos;Cereal&apos;, 4)]&quot;</bucket>
              <bucket>&quot;[(&apos;Cereal&apos;, 7), (&apos;Coffee&apos;, 1), (&apos;Pancake&apos;, 6), (&apos;Eggs&apos;, 4)]&quot;</bucket>
              <bucket>&quot;[(&apos;Chicken&apos;, 3), (&apos;Burger&apos;, 2), (&apos;Salad&apos;, 8), (&apos;Steak&apos;, 2)]&quot;</bucket>
              <bucket>&quot;[(&apos;Cereal&apos;, 7), (&apos;Coffee&apos;, 9), (&apos;Pancake&apos;, 7)]&quot;</bucket>
              <bucket>&quot;[(&apos;Eggs&apos;, 7), (&apos;Pancake&apos;, 1), (&apos;Cereal&apos;, 9), (&apos;Coffee&apos;, 2)]&quot;</bucket>
              <bucket>&quot;[(&apos;Chicken&apos;, 3), (&apos;Burger&apos;, 5), (&apos;Fries&apos;, 8), (&apos;Salad&apos;, 2)]&quot;</bucket>
              <bucket>&quot;[(&apos;Salad&apos;, 5), (&apos;Chicken&apos;, 5), (&apos;Steak&apos;, 3)]&quot;</bucket>
              <bucket>&quot;[(&apos;Fish&amp;Chips&apos;, 7), (&apos;Salmon&apos;, 2), (&apos;Shrimp&apos;, 1)]&quot;</bucket>
              <bucket>&quot;[(&apos;Pasta&apos;, 10), (&apos;Fish&amp;Chips&apos;, 3)]&quot;</bucket>
              <bucket>&quot;[(&apos;Chicken&apos;, 1), (&apos;Salad&apos;, 4), (&apos;Burger&apos;, 9)]&quot;</bucket>
              <bucket>&quot;[(&apos;Cereal&apos;, 10), (&apos;Pancake&apos;, 7)]&quot;</bucket>
              <bucket>&quot;[(&apos;Chicken&apos;, 7), (&apos;Steak&apos;, 2), (&apos;Salad&apos;, 2), (&apos;Burger&apos;, 1)]&quot;</bucket>
              <bucket>&quot;[(&apos;Fries&apos;, 5), (&apos;Steak&apos;, 2), (&apos;Salad&apos;, 4), (&apos;Chicken&apos;, 5)]&quot;</bucket>
              <bucket>&quot;[(&apos;Steak&apos;, 1), (&apos;Chicken&apos;, 5), (&apos;Salad&apos;, 3), (&apos;Fries&apos;, 10)]&quot;</bucket>
              <bucket>&quot;[(&apos;Burger&apos;, 4), (&apos;Salad&apos;, 9), (&apos;Chicken&apos;, 3)]&quot;</bucket>
              <bucket>&quot;[(&apos;Salmon&apos;, 7), (&apos;Shrimp&apos;, 5), (&apos;Pasta&apos;, 3), (&apos;Fish&amp;Chips&apos;, 3)]&quot;</bucket>
              <bucket>&quot;[(&apos;Salad&apos;, 8), (&apos;Fries&apos;, 4), (&apos;Burger&apos;, 6)]&quot;</bucket>
              <bucket>&quot;[(&apos;Chicken&apos;, 7), (&apos;Steak&apos;, 3), (&apos;Fries&apos;, 1)]&quot;</bucket>
              <bucket>&quot;[(&apos;Coffee&apos;, 4), (&apos;Pancake&apos;, 7), (&apos;Eggs&apos;, 3), (&apos;Cereal&apos;, 5)]&quot;</bucket>
              <bucket>&quot;[(&apos;Cereal&apos;, 7), (&apos;Eggs&apos;, 1), (&apos;Pancake&apos;, 8), (&apos;Coffee&apos;, 1)]&quot;</bucket>
              <bucket>&quot;[(&apos;Pasta&apos;, 10), (&apos;Salmon&apos;, 1), (&apos;Shrimp&apos;, 1)]&quot;</bucket>
              <bucket>&quot;[(&apos;Pasta&apos;, 7), (&apos;Salmon&apos;, 3), (&apos;Shrimp&apos;, 1)]&quot;</bucket>
              <bucket>&quot;[(&apos;Pasta&apos;, 3), (&apos;Salmon&apos;, 7)]&quot;</bucket>
              <bucket>&quot;[(&apos;Pancake&apos;, 2), (&apos;Eggs&apos;, 6), (&apos;Cereal&apos;, 9)]&quot;</bucket>
              <bucket>&quot;[(&apos;Pancake&apos;, 2), (&apos;Cereal&apos;, 9), (&apos;Eggs&apos;, 6)]&quot;</bucket>
              <bucket>&quot;[(&apos;Pancake&apos;, 10), (&apos;Cereal&apos;, 6)]&quot;</bucket>
              <bucket>&quot;[(&apos;Cereal&apos;, 3), (&apos;Coffee&apos;, 1), (&apos;Eggs&apos;, 8), (&apos;Pancake&apos;, 5)]&quot;</bucket>
              <bucket>&quot;[(&apos;Coffee&apos;, 6), (&apos;Cereal&apos;, 8), (&apos;Eggs&apos;, 7)]&quot;</bucket>
              <bucket>&quot;[(&apos;Coffee&apos;, 2), (&apos;Eggs&apos;, 7), (&apos;Pancake&apos;, 8)]&quot;</bucket>
              <bucket>&quot;[(&apos;Cereal&apos;, 1), (&apos;Eggs&apos;, 10), (&apos;Pancake&apos;, 5)]&quot;</bucket>
              <bucket>&quot;[(&apos;Chicken&apos;, 3), (&apos;Salad&apos;, 4), (&apos;Steak&apos;, 3), (&apos;Burger&apos;, 2)]&quot;</bucket>
              <bucket>&quot;[(&apos;Salad&apos;, 6), (&apos;Chicken&apos;, 8)]&quot;</bucket>
              <bucket>&quot;[(&apos;Eggs&apos;, 5), (&apos;Coffee&apos;, 4), (&apos;Pancake&apos;, 9)]&quot;</bucket>
              <bucket>&quot;[(&apos;Cereal&apos;, 7), (&apos;Pancake&apos;, 2), (&apos;Coffee&apos;, 1), (&apos;Eggs&apos;, 7)]&quot;</bucket>
              <bucket>&quot;[(&apos;Pasta&apos;, 1), (&apos;Salmon&apos;, 8)]&quot;</bucket>
              <bucket>&quot;[(&apos;Coffee&apos;, 2), (&apos;Cereal&apos;, 1), (&apos;Pancake&apos;, 4), (&apos;Eggs&apos;, 10)]&quot;</bucket>
              <bucket>&quot;[(&apos;Eggs&apos;, 6), (&apos;Pancake&apos;, 9)]&quot;</bucket>
              <bucket>&quot;[(&apos;Eggs&apos;, 7), (&apos;Cereal&apos;, 1)]&quot;</bucket>
              <bucket>&quot;[(&apos;Salad&apos;, 2), (&apos;Steak&apos;, 7)]&quot;</bucket>
              <bucket>&quot;[(&apos;Cereal&apos;, 6), (&apos;Eggs&apos;, 7), (&apos;Coffee&apos;, 9)]&quot;</bucket>
              <bucket>&quot;[(&apos;Cereal&apos;, 5), (&apos;Pancake&apos;, 10)]&quot;</bucket>
              <bucket>&quot;[(&apos;Steak&apos;, 2), (&apos;Chicken&apos;, 8)]&quot;</bucket>
              <bucket>&quot;[(&apos;Salad&apos;, 7), (&apos;Steak&apos;, 5)]&quot;</bucket>
              <bucket>&quot;[(&apos;Cereal&apos;, 4), (&apos;Pancake&apos;, 5), (&apos;Eggs&apos;, 5), (&apos;Coffee&apos;, 4)]&quot;</bucket>
              <bucket>&quot;[(&apos;Steak&apos;, 5), (&apos;Fries&apos;, 10)]&quot;</bucket>
              <bucket>&quot;[(&apos;Fries&apos;, 9), (&apos;Chicken&apos;, 2), (&apos;Salad&apos;, 10)]&quot;</bucket>
              <bucket>&quot;[(&apos;Fries&apos;, 8), (&apos;Burger&apos;, 8)]&quot;</bucket>
              <bucket>&quot;[(&apos;Coffee&apos;, 9), (&apos;Cereal&apos;, 10), (&apos;Eggs&apos;, 3)]&quot;</bucket>
              <bucket>&quot;[(&apos;Cereal&apos;, 9), (&apos;Eggs&apos;, 7)]&quot;</bucket>
              <bucket>&quot;[(&apos;Fries&apos;, 6), (&apos;Steak&apos;, 6)]&quot;</bucket>
              <bucket>&quot;[(&apos;Chicken&apos;, 1), (&apos;Burger&apos;, 10)]&quot;</bucket>
              <bucket>&quot;[(&apos;Pancake&apos;, 5), (&apos;Eggs&apos;, 6), (&apos;Cereal&apos;, 1), (&apos;Coffee&apos;, 9)]&quot;</bucket>
              <bucket>&quot;[(&apos;Salmon&apos;, 1), (&apos;Shrimp&apos;, 4), (&apos;Pasta&apos;, 3)]&quot;</bucket>
              <bucket>&quot;[(&apos;Fish&amp;Chips&apos;, 5), (&apos;Salmon&apos;, 4)]&quot;</bucket>
              <bucket>&quot;[(&apos;Pancake&apos;, 6), (&apos;Cereal&apos;, 9)]&quot;</bucket>
              <bucket>&quot;[(&apos;Coffee&apos;, 4), (&apos;Cereal&apos;, 6), (&apos;Eggs&apos;, 7), (&apos;Pancake&apos;, 1)]&quot;</bucket>
              <bucket>&quot;[(&apos;Cereal&apos;, 4), (&apos;Coffee&apos;, 4), (&apos;Eggs&apos;, 10)]&quot;</bucket>
              <bucket>&quot;[(&apos;Fries&apos;, 5), (&apos;Burger&apos;, 3), (&apos;Steak&apos;, 4)]&quot;</bucket>
              <bucket>&quot;[(&apos;Pancake&apos;, 5), (&apos;Eggs&apos;, 1), (&apos;Cereal&apos;, 9)]&quot;</bucket>
              <bucket>&quot;[(&apos;Pancake&apos;, 5), (&apos;Cereal&apos;, 10)]&quot;</bucket>
              <bucket>&quot;[(&apos;Pancake&apos;, 9), (&apos;Coffee&apos;, 3), (&apos;Eggs&apos;, 4)]&quot;</bucket>
              <bucket>&quot;[(&apos;Coffee&apos;, 1), (&apos;Cereal&apos;, 3), (&apos;Pancake&apos;, 7), (&apos;Eggs&apos;, 4)]&quot;</bucket>
              <bucket>&quot;[(&apos;Fries&apos;, 6), (&apos;Chicken&apos;, 8)]&quot;</bucket>
              <bucket>&quot;[(&apos;Pancake&apos;, 10), (&apos;Cereal&apos;, 4)]&quot;</bucket>
              <bucket>&quot;[(&apos;Coffee&apos;, 5), (&apos;Eggs&apos;, 2), (&apos;Cereal&apos;, 7), (&apos;Pancake&apos;, 4)]&quot;</bucket>
              <bucket>&quot;[(&apos;Shrimp&apos;, 5), (&apos;Pasta&apos;, 2)]&quot;</bucket>
              <bucket>&quot;[(&apos;Eggs&apos;, 10), (&apos;Cereal&apos;, 5)]&quot;</bucket>
              <bucket>&quot;[(&apos;Salmon&apos;, 1), (&apos;Pasta&apos;, 9), (&apos;Fish&amp;Chips&apos;, 1)]&quot;</bucket>
              <bucket>&quot;[(&apos;Cereal&apos;, 5), (&apos;Coffee&apos;, 5), (&apos;Pancake&apos;, 2), (&apos;Eggs&apos;, 6)]&quot;</bucket>
              <bucket>&quot;[(&apos;Steak&apos;, 2), (&apos;Salad&apos;, 1), (&apos;Fries&apos;, 5), (&apos;Burger&apos;, 5)]&quot;</bucket>
              <bucket>&quot;[(&apos;Burger&apos;, 10), (&apos;Fries&apos;, 1)]&quot;</bucket>
              <bucket>&quot;[(&apos;Fish&amp;Chips&apos;, 8), (&apos;Salmon&apos;, 1)]&quot;</bucket>
              <bucket>&quot;[(&apos;Pancake&apos;, 8), (&apos;Cereal&apos;, 6)]&quot;</bucket>
              <bucket>&quot;[(&apos;Fish&amp;Chips&apos;, 2), (&apos;Pasta&apos;, 3), (&apos;Salmon&apos;, 4)]&quot;</bucket>
              <bucket>&quot;[(&apos;Fish&amp;Chips&apos;, 2), (&apos;Salmon&apos;, 6)]&quot;</bucket>
              <bucket>&quot;[(&apos;Pancake&apos;, 10), (&apos;Coffee&apos;, 1), (&apos;Eggs&apos;, 2), (&apos;Cereal&apos;, 1)]&quot;</bucket>
              <bucket>&quot;[(&apos;Coffee&apos;, 2), (&apos;Eggs&apos;, 7), (&apos;Pancake&apos;, 6)]&quot;</bucket>
              <bucket>&quot;[(&apos;Chicken&apos;, 9), (&apos;Fries&apos;, 2)]&quot;</bucket>
              <bucket>&quot;[(&apos;Pasta&apos;, 6), (&apos;Fish&amp;Chips&apos;, 3), (&apos;Salmon&apos;, 1)]&quot;</bucket>
              <bucket>&quot;[(&apos;Pasta&apos;, 3), (&apos;Fish&amp;Chips&apos;, 3), (&apos;Salmon&apos;, 3)]&quot;</bucket>
              <bucket>&quot;[(&apos;Chicken&apos;, 5), (&apos;Burger&apos;, 1), (&apos;Steak&apos;, 1), (&apos;Salad&apos;, 4)]&quot;</bucket>
              <bucket>&quot;[(&apos;Eggs&apos;, 1), (&apos;Coffee&apos;, 7), (&apos;Cereal&apos;, 4), (&apos;Pancake&apos;, 6)]&quot;</bucket>
              <bucket>&quot;[(&apos;Coffee&apos;, 3), (&apos;Cereal&apos;, 7), (&apos;Eggs&apos;, 6)]&quot;</bucket>
              <bucket>&quot;[(&apos;Pasta&apos;, 2), (&apos;Salmon&apos;, 6)]&quot;</bucket>
              <bucket>&quot;[(&apos;Pancake&apos;, 9), (&apos;Coffee&apos;, 5), (&apos;Cereal&apos;, 2)]&quot;</bucket>
              <bucket>&quot;[(&apos;Eggs&apos;, 2), (&apos;Cereal&apos;, 4), (&apos;Pancake&apos;, 7)]&quot;</bucket>
              <bucket>&quot;[(&apos;Eggs&apos;, 10), (&apos;Coffee&apos;, 10)]&quot;</bucket>
              <bucket>&quot;[(&apos;Eggs&apos;, 5), (&apos;Coffee&apos;, 9), (&apos;Cereal&apos;, 2), (&apos;Pancake&apos;, 3)]&quot;</bucket>
              <bucket>&quot;[(&apos;Chicken&apos;, 2), (&apos;Salad&apos;, 3), (&apos;Steak&apos;, 2), (&apos;Burger&apos;, 2), (&apos;Fries&apos;, 2)]&quot;</bucket>
              <bucket>&quot;[(&apos;Eggs&apos;, 10), (&apos;Coffee&apos;, 9)]&quot;</bucket>
              <bucket>&quot;[(&apos;Coffee&apos;, 1), (&apos;Pancake&apos;, 8), (&apos;Cereal&apos;, 4)]&quot;</bucket>
              <bucket>&quot;[(&apos;Eggs&apos;, 6), (&apos;Pancake&apos;, 6), (&apos;Coffee&apos;, 1)]&quot;</bucket>
              <bucket>&quot;[(&apos;Coffee&apos;, 2), (&apos;Cereal&apos;, 8), (&apos;Pancake&apos;, 4)]&quot;</bucket>
              <bucket>&quot;[(&apos;Eggs&apos;, 9), (&apos;Cereal&apos;, 1), (&apos;Coffee&apos;, 8)]&quot;</bucket>
              <bucket>&quot;[(&apos;Steak&apos;, 2), (&apos;Chicken&apos;, 3), (&apos;Fries&apos;, 2), (&apos;Salad&apos;, 4)]&quot;</bucket>
              <bucket>&quot;[(&apos;Eggs&apos;, 4), (&apos;Cereal&apos;, 9)]&quot;</bucket>
              <bucket>&quot;[(&apos;Eggs&apos;, 10), (&apos;Coffee&apos;, 1), (&apos;Pancake&apos;, 2)]&quot;</bucket>
              <bucket>&quot;[(&apos;Eggs&apos;, 5), (&apos;Coffee&apos;, 4), (&apos;Cereal&apos;, 3), (&apos;Pancake&apos;, 3)]&quot;</bucket>
              <bucket>&quot;[(&apos;Chicken&apos;, 5), (&apos;Fries&apos;, 7), (&apos;Burger&apos;, 1)]&quot;</bucket>
              <bucket>&quot;[(&apos;Pancake&apos;, 6), (&apos;Coffee&apos;, 8), (&apos;Eggs&apos;, 3)]&quot;</bucket>
              <bucket>&quot;[(&apos;Pancake&apos;, 6), (&apos;Cereal&apos;, 6)]&quot;</bucket>
              <bucket>&quot;[(&apos;Burger&apos;, 4), (&apos;Fries&apos;, 3), (&apos;Salad&apos;, 1), (&apos;Steak&apos;, 2)]&quot;</bucket>
              <bucket>&quot;[(&apos;Coffee&apos;, 4), (&apos;Cereal&apos;, 9), (&apos;Pancake&apos;, 1), (&apos;Eggs&apos;, 1)]&quot;</bucket>
              <bucket>&quot;[(&apos;Pasta&apos;, 2), (&apos;Fish&amp;Chips&apos;, 6)]&quot;</bucket>
              <bucket>&quot;[(&apos;Cereal&apos;, 3), (&apos;Pancake&apos;, 1), (&apos;Eggs&apos;, 8)]&quot;</bucket>
              <bucket>&quot;[(&apos;Coffee&apos;, 6), (&apos;Cereal&apos;, 2), (&apos;Eggs&apos;, 8)]&quot;</bucket>
              <bucket>&quot;[(&apos;Burger&apos;, 3), (&apos;Steak&apos;, 2), (&apos;Chicken&apos;, 1), (&apos;Fries&apos;, 4)]&quot;</bucket>
              <bucket>&quot;[(&apos;Burger&apos;, 2), (&apos;Chicken&apos;, 3), (&apos;Salad&apos;, 6)]&quot;</bucket>
              <bucket>&quot;[(&apos;Salad&apos;, 5), (&apos;Burger&apos;, 2), (&apos;Steak&apos;, 1), (&apos;Fries&apos;, 3), (&apos;Chicken&apos;, 1)]&quot;</bucket>
              <bucket>&quot;[(&apos;Pasta&apos;, 4), (&apos;Salmon&apos;, 1), (&apos;Shrimp&apos;, 2)]&quot;</bucket>
              <bucket>&quot;[(&apos;Pancake&apos;, 1), (&apos;Coffee&apos;, 3), (&apos;Cereal&apos;, 10)]&quot;</bucket>
              <bucket>&quot;[(&apos;Eggs&apos;, 7), (&apos;Coffee&apos;, 8), (&apos;Cereal&apos;, 2)]&quot;</bucket>
              <bucket>&quot;[(&apos;Chicken&apos;, 5), (&apos;Fries&apos;, 8)]&quot;</bucket>
              <bucket>&quot;[(&apos;Eggs&apos;, 9), (&apos;Coffee&apos;, 7)]&quot;</bucket>
              <bucket>&quot;[(&apos;Coffee&apos;, 5), (&apos;Cereal&apos;, 3), (&apos;Eggs&apos;, 3)]&quot;</bucket>
              <bucket>&quot;[(&apos;Fish&amp;Chips&apos;, 4), (&apos;Shrimp&apos;, 2)]&quot;</bucket>
              <bucket>&quot;[(&apos;Salad&apos;, 9), (&apos;Burger&apos;, 3)]&quot;</bucket>
              <bucket>&quot;[(&apos;Pasta&apos;, 6), (&apos;Salmon&apos;, 2)]&quot;</bucket>
              <bucket>&quot;[(&apos;Chicken&apos;, 1), (&apos;Salad&apos;, 7), (&apos;Burger&apos;, 3)]&quot;</bucket>
              <bucket>&quot;[(&apos;Cereal&apos;, 8), (&apos;Coffee&apos;, 10)]&quot;</bucket>
              <bucket>&quot;[(&apos;Fries&apos;, 2), (&apos;Burger&apos;, 7)]&quot;</bucket>
              <bucket>&quot;[(&apos;Pancake&apos;, 9), (&apos;Coffee&apos;, 3)]&quot;</bucket>
              <bucket>&quot;[(&apos;Cereal&apos;, 5), (&apos;Eggs&apos;, 3), (&apos;Coffee&apos;, 6), (&apos;Pancake&apos;, 1)]&quot;</bucket>
              <bucket>&quot;[(&apos;Coffee&apos;, 9), (&apos;Cereal&apos;, 9), (&apos;Pancake&apos;, 9)]&quot;</bucket>
              <bucket>&quot;[(&apos;Salad&apos;, 1), (&apos;Chicken&apos;, 3), (&apos;Burger&apos;, 4)]&quot;</bucket>
              <bucket>&quot;[(&apos;Eggs&apos;, 10), (&apos;Coffee&apos;, 2)]&quot;</bucket>
              <bucket>&quot;[(&apos;Salad&apos;, 1), (&apos;Burger&apos;, 7)]&quot;</bucket>
              <bucket>&quot;[(&apos;Salmon&apos;, 4), (&apos;Fish&amp;Chips&apos;, 2)]&quot;</bucket>
              <bucket>&quot;[(&apos;Chicken&apos;, 2), (&apos;Fries&apos;, 9), (&apos;Burger&apos;, 2)]&quot;</bucket>
              <bucket>&quot;[(&apos;Eggs&apos;, 5), (&apos;Pancake&apos;, 3), (&apos;Cereal&apos;, 1), (&apos;Coffee&apos;, 4)]&quot;</bucket>
              <bucket>&quot;[(&apos;Cereal&apos;, 5), (&apos;Eggs&apos;, 3), (&apos;Coffee&apos;, 5), (&apos;Pancake&apos;, 1)]&quot;</bucket>
              <bucket>&quot;[(&apos;Salmon&apos;, 5), (&apos;Pasta&apos;, 1)]&quot;</bucket>
              <bucket>&quot;[(&apos;Chicken&apos;, 3), (&apos;Fries&apos;, 7), (&apos;Salad&apos;, 3)]&quot;</bucket>
              <bucket>&quot;[(&apos;Salmon&apos;, 1), (&apos;Shrimp&apos;, 2), (&apos;Pasta&apos;, 3)]&quot;</bucket>
              <bucket>&quot;[(&apos;Coffee&apos;, 8), (&apos;Cereal&apos;, 5), (&apos;Eggs&apos;, 3)]&quot;</bucket>
              <bucket>&quot;[(&apos;Cereal&apos;, 4), (&apos;Pancake&apos;, 6)]&quot;</bucket>
              <bucket>&quot;[(&apos;Pancake&apos;, 1), (&apos;Cereal&apos;, 6), (&apos;Coffee&apos;, 10)]&quot;</bucket>
              <bucket>&quot;[(&apos;Eggs&apos;, 8), (&apos;Pancake&apos;, 2)]&quot;</bucket>
              <bucket>&quot;[(&apos;Fries&apos;, 10), (&apos;Salad&apos;, 6)]&quot;</bucket>
              <bucket>&quot;[(&apos;Fish&amp;Chips&apos;, 4), (&apos;Shrimp&apos;, 1), (&apos;Pasta&apos;, 1)]&quot;</bucket>
              <bucket>&quot;[(&apos;Eggs&apos;, 8), (&apos;Coffee&apos;, 6)]&quot;</bucket>
              <bucket>&quot;[(&apos;Cereal&apos;, 7), (&apos;Pancake&apos;, 3)]&quot;</bucket>
              <bucket>&quot;[(&apos;Coffee&apos;, 8), (&apos;Eggs&apos;, 2), (&apos;Pancake&apos;, 3), (&apos;Cereal&apos;, 2)]&quot;</bucket>
              <bucket>&quot;[(&apos;Steak&apos;, 2), (&apos;Chicken&apos;, 4)]&quot;</bucket>
              <bucket>&quot;[(&apos;Eggs&apos;, 1), (&apos;Pancake&apos;, 8)]&quot;</bucket>
              <bucket>&quot;[(&apos;Fries&apos;, 5), (&apos;Burger&apos;, 5)]&quot;</bucket>
              <bucket>&quot;[(&apos;Cereal&apos;, 8), (&apos;Eggs&apos;, 2)]&quot;</bucket>
              <bucket>&quot;[(&apos;Eggs&apos;, 1), (&apos;Cereal&apos;, 9)]&quot;</bucket>
              <bucket>&quot;[(&apos;Eggs&apos;, 5), (&apos;Pancake&apos;, 4)]&quot;</bucket>
              <bucket>&quot;[(&apos;Cereal&apos;, 7), (&apos;Coffee&apos;, 8)]&quot;</bucket>
              <bucket>&quot;[(&apos;Cereal&apos;, 2), (&apos;Pancake&apos;, 4), (&apos;Eggs&apos;, 3)]&quot;</bucket>
              <bucket>&quot;[(&apos;Salmon&apos;, 1), (&apos;Shrimp&apos;, 3)]&quot;</bucket>
              <bucket>&quot;[(&apos;Salad&apos;, 9), (&apos;Fries&apos;, 4)]&quot;</bucket>
              <bucket>&quot;[(&apos;Cereal&apos;, 5), (&apos;Pancake&apos;, 4)]&quot;</bucket>
              <bucket>&quot;[(&apos;Coffee&apos;, 7), (&apos;Eggs&apos;, 2), (&apos;Cereal&apos;, 5)]&quot;</bucket>
              <bucket>&quot;[(&apos;Pasta&apos;, 6), (&apos;Fish&amp;Chips&apos;, 1)]&quot;</bucket>
              <bucket>&quot;[(&apos;Fish&amp;Chips&apos;, 1), (&apos;Pasta&apos;, 6)]&quot;</bucket>
              <bucket>&quot;[(&apos;Salmon&apos;, 4), (&apos;Fish&amp;Chips&apos;, 1)]&quot;</bucket>
              <bucket>&quot;[(&apos;Cereal&apos;, 1), (&apos;Eggs&apos;, 8)]&quot;</bucket>
              <bucket>&quot;[(&apos;Pancake&apos;, 2), (&apos;Cereal&apos;, 7)]&quot;</bucket>
              <bucket>&quot;[(&apos;Cereal&apos;, 3), (&apos;Coffee&apos;, 2), (&apos;Eggs&apos;, 3), (&apos;Pancake&apos;, 2)]&quot;</bucket>
              <bucket>&quot;[(&apos;Coffee&apos;, 8), (&apos;Eggs&apos;, 6)]&quot;</bucket>
              <bucket>&quot;[(&apos;Coffee&apos;, 6), (&apos;Cereal&apos;, 7)]&quot;</bucket>
              <bucket>&quot;[(&apos;Cereal&apos;, 7), (&apos;Eggs&apos;, 2)]&quot;</bucket>
              <bucket>&quot;[(&apos;Pancake&apos;, 6), (&apos;Eggs&apos;, 2)]&quot;</bucket>
              <bucket>&quot;[(&apos;Pancake&apos;, 5), (&apos;Coffee&apos;, 9)]&quot;</bucket>
              <bucket>&quot;[(&apos;Pancake&apos;, 7), (&apos;Coffee&apos;, 2)]&quot;</bucket>
              <bucket>&quot;[(&apos;Fries&apos;, 1), (&apos;Salad&apos;, 10)]&quot;</bucket>
              <bucket>&quot;[(&apos;Burger&apos;, 1), (&apos;Fries&apos;, 9), (&apos;Steak&apos;, 1)]&quot;</bucket>
              <bucket>&quot;[(&apos;Coffee&apos;, 1), (&apos;Eggs&apos;, 8)]&quot;</bucket>
              <bucket>&quot;[(&apos;Fries&apos;, 9), (&apos;Salad&apos;, 4)]&quot;</bucket>
              <bucket>&quot;[(&apos;Coffee&apos;, 3), (&apos;Eggs&apos;, 7)]&quot;</bucket>
              <bucket>&quot;[(&apos;Cereal&apos;, 2), (&apos;Eggs&apos;, 6)]&quot;</bucket>
              <bucket>&quot;[(&apos;Coffee&apos;, 10), (&apos;Pancake&apos;, 4)]&quot;</bucket>
              <bucket>&quot;[(&apos;Cereal&apos;, 4), (&apos;Eggs&apos;, 4)]&quot;</bucket>
              <bucket>&quot;[(&apos;Coffee&apos;, 8), (&apos;Eggs&apos;, 4), (&apos;Cereal&apos;, 1)]&quot;</bucket>
              <bucket>&quot;[(&apos;Coffee&apos;, 2), (&apos;Eggs&apos;, 7)]&quot;</bucket>
              <bucket>&quot;[(&apos;Pasta&apos;, 1), (&apos;Fish&amp;Chips&apos;, 4)]&quot;</bucket>
              <bucket>&quot;[(&apos;Fries&apos;, 1), (&apos;Burger&apos;, 5)]&quot;</bucket>
              <bucket>&quot;[(&apos;Coffee&apos;, 2), (&apos;Cereal&apos;, 4), (&apos;Eggs&apos;, 3)]&quot;</bucket>
              <bucket>&quot;[(&apos;Burger&apos;, 4), (&apos;Fries&apos;, 3)]&quot;</bucket>
              <bucket>&quot;[(&apos;Cereal&apos;, 5), (&apos;Coffee&apos;, 7)]&quot;</bucket>
              <bucket>&quot;[(&apos;Pancake&apos;, 1), (&apos;Eggs&apos;, 6)]&quot;</bucket>
              <bucket>&quot;[(&apos;Pancake&apos;, 2), (&apos;Cereal&apos;, 5)]&quot;</bucket>
              <bucket>&quot;[(&apos;Eggs&apos;, 3), (&apos;Coffee&apos;, 6), (&apos;Cereal&apos;, 2)]&quot;</bucket>
              <bucket>&quot;[(&apos;Pasta&apos;, 1), (&apos;Salmon&apos;, 3)]&quot;</bucket>
              <bucket>&quot;[(&apos;Coffee&apos;, 3), (&apos;Cereal&apos;, 6)]&quot;</bucket>
              <bucket>&quot;[(&apos;Eggs&apos;, 1), (&apos;Pancake&apos;, 3), (&apos;Coffee&apos;, 7)]&quot;</bucket>
              <bucket>&quot;[(&apos;Coffee&apos;, 4), (&apos;Pancake&apos;, 2), (&apos;Eggs&apos;, 3)]&quot;</bucket>
              <bucket>&quot;[(&apos;Fish&amp;Chips&apos;, 1), (&apos;Pasta&apos;, 2), (&apos;Shrimp&apos;, 1)]&quot;</bucket>
              <bucket>&quot;[(&apos;Fish&amp;Chips&apos;, 1), (&apos;Shrimp&apos;, 2)]&quot;</bucket>
              <bucket>&quot;[(&apos;Eggs&apos;, 4), (&apos;Coffee&apos;, 7)]&quot;</bucket>
              <bucket>&quot;[(&apos;Salmon&apos;, 2), (&apos;Shrimp&apos;, 1)]&quot;</bucket>
              <bucket>&quot;[(&apos;Pasta&apos;, 1), (&apos;Fish&amp;Chips&apos;, 3)]&quot;</bucket>
              <bucket>&quot;[(&apos;Cereal&apos;, 4), (&apos;Pancake&apos;, 2)]&quot;</bucket>
              <bucket>&quot;[(&apos;Fries&apos;, 8), (&apos;Chicken&apos;, 1)]&quot;</bucket>
              <bucket>&quot;[(&apos;Coffee&apos;, 5), (&apos;Eggs&apos;, 2), (&apos;Pancake&apos;, 1), (&apos;Cereal&apos;, 1)]&quot;</bucket>
              <bucket>&quot;[(&apos;Chicken&apos;, 2), (&apos;Fries&apos;, 5)]&quot;</bucket>
              <bucket>&quot;[(&apos;Chicken&apos;, 1), (&apos;Fries&apos;, 7)]&quot;</bucket>
              <bucket>&quot;[(&apos;Eggs&apos;, 1), (&apos;Cereal&apos;, 1), (&apos;Pancake&apos;, 3)]&quot;</bucket>
              <bucket>&quot;[(&apos;Eggs&apos;, 4), (&apos;Pancake&apos;, 1)]&quot;</bucket>
              <bucket>&quot;[(&apos;Coffee&apos;, 2), (&apos;Pancake&apos;, 4)]&quot;</bucket>
              <bucket>&quot;[(&apos;Coffee&apos;, 3), (&apos;Eggs&apos;, 4)]&quot;</bucket>
              <bucket>&quot;[(&apos;Salad&apos;, 1), (&apos;Steak&apos;, 2)]&quot;</bucket>
              <bucket>&quot;[(&apos;Cereal&apos;, 3), (&apos;Eggs&apos;, 2)]&quot;</bucket>
              <bucket>&quot;[(&apos;Eggs&apos;, 1), (&apos;Cereal&apos;, 4)]&quot;</bucket>
              <bucket>&quot;[(&apos;Fries&apos;, 3), (&apos;Salad&apos;, 4)]&quot;</bucket>
              <bucket>&quot;[(&apos;Coffee&apos;, 3), (&apos;Pancake&apos;, 3)]&quot;</bucket>
              <bucket>&quot;[(&apos;Pancake&apos;, 1), (&apos;Coffee&apos;, 9)]&quot;</bucket>
              <bucket>&quot;[(&apos;Fish&amp;Chips&apos;, 1), (&apos;Pasta&apos;, 2)]&quot;</bucket>
              <bucket>&quot;[(&apos;Pancake&apos;, 2), (&apos;Coffee&apos;, 2), (&apos;Cereal&apos;, 1)]&quot;</bucket>
              <bucket>&quot;[(&apos;Fries&apos;, 4), (&apos;Burger&apos;, 1)]&quot;</bucket>
              <bucket>&quot;[(&apos;Coffee&apos;, 7), (&apos;Cereal&apos;, 1)]&quot;</bucket>
              <bucket>&quot;[(&apos;Coffee&apos;, 6), (&apos;Pancake&apos;, 1)]&quot;</bucket>
              <bucket>&quot;[(&apos;Coffee&apos;, 3), (&apos;Pancake&apos;, 1), (&apos;Cereal&apos;, 1)]&quot;</bucket>
              <bucket>&quot;[(&apos;Cereal&apos;, 2), (&apos;Pancake&apos;, 1)]&quot;</bucket>
              <bucket>&quot;[(&apos;Coffee&apos;, 6), (&apos;Cereal&apos;, 1)]&quot;</bucket>
              <bucket>&quot;[(&apos;Fries&apos;, 1), (&apos;Salad&apos;, 3)]&quot;</bucket>
              <bucket>&quot;[(&apos;Cereal&apos;, 1), (&apos;Pancake&apos;, 1), (&apos;Coffee&apos;, 1)]&quot;</bucket>
              <bucket>&quot;[(&apos;Eggs&apos;, 1), (&apos;Coffee&apos;, 4)]&quot;</bucket>
              <bucket>&quot;[(&apos;Coffee&apos;, 3), (&apos;Eggs&apos;, 1)]&quot;</bucket>
              <bucket>%all%</bucket>
            </dictionary>
          </manual-sort>
          <filter class='categorical' column='[federated.12vh8ue0eh2a7y1gdi8a105v0ete].[none:order_type:nk]'>
            <groupfilter function='except' user:ui-domain='relevant' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:order_type:nk]' />
              <groupfilter function='member' level='[none:order_type:nk]' member='%null%' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.12vh8ue0eh2a7y1gdi8a105v0ete].[none:order_type:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.12vh8ue0eh2a7y1gdi8a105v0ete].[sum:order_price:qk]' palette='tableau-map-temperatur' symmetric='false' type='interpolated' />
            <encoding attr='size-bar' field='[federated.12vh8ue0eh2a7y1gdi8a105v0ete].[sum:order_price:qk]' field-type='quantitative' max-size='1' min-size='0.005' type='centersize' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <encodings>
              <size column='[federated.12vh8ue0eh2a7y1gdi8a105v0ete].[sum:order_price:qk]' />
              <text column='[federated.12vh8ue0eh2a7y1gdi8a105v0ete].[none:Status:nk]' />
              <text column='[federated.12vh8ue0eh2a7y1gdi8a105v0ete].[none:order_type:nk]' />
              <text column='[federated.12vh8ue0eh2a7y1gdi8a105v0ete].[none:order_items:nk]' />
              <color column='[federated.12vh8ue0eh2a7y1gdi8a105v0ete].[none:Status:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-line-first' value='true' />
                <format attr='mark-labels-line-last' value='true' />
                <format attr='mark-labels-range-min' value='true' />
                <format attr='mark-labels-range-max' value='true' />
                <format attr='mark-labels-mode' value='all' />
                <format attr='mark-labels-range-scope' value='pane' />
                <format attr='mark-labels-range-field' value='' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
      <simple-id uuid='{0F79F0BD-54FC-47E4-989D-EF823A920FBB}' />
    </worksheet>
    <worksheet name='Sheet 3'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontname='Tableau Bold' fontsize='16'>Complain &amp; Refund Based On Order Type</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='outlier_data' name='federated.12vh8ue0eh2a7y1gdi8a105v0ete' />
          </datasources>
          <datasource-dependencies datasource='federated.12vh8ue0eh2a7y1gdi8a105v0ete'>
            <column datatype='integer' name='[Complain]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Refund]' role='measure' type='quantitative' />
            <column-instance column='[order_type]' derivation='None' name='[none:order_type:nk]' pivot='key' type='nominal' />
            <column caption='Order Type' datatype='string' name='[order_type]' role='dimension' type='nominal' />
            <column-instance column='[Complain]' derivation='Sum' name='[sum:Complain:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Refund]' derivation='Sum' name='[sum:Refund:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.12vh8ue0eh2a7y1gdi8a105v0ete].[none:order_type:nk]'>
            <groupfilter function='level-members' level='[none:order_type:nk]' />
          </filter>
          <slices>
            <column>[federated.12vh8ue0eh2a7y1gdi8a105v0ete].[none:order_type:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='mark'>
            <encoding attr='size-bar' field='[federated.12vh8ue0eh2a7y1gdi8a105v0ete].[sum:Complain:qk]' field-type='quantitative' max-size='1' min-size='0.005' type='centersize' />
            <encoding attr='color' field='[federated.12vh8ue0eh2a7y1gdi8a105v0ete].[sum:Complain:qk]' palette='green_gold_10_0' type='interpolated' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='on' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <size column='[federated.12vh8ue0eh2a7y1gdi8a105v0ete].[sum:Complain:qk]' />
              <color column='[federated.12vh8ue0eh2a7y1gdi8a105v0ete].[sum:Complain:qk]' />
              <text column='[federated.12vh8ue0eh2a7y1gdi8a105v0ete].[none:order_type:nk]' />
              <lod column='[federated.12vh8ue0eh2a7y1gdi8a105v0ete].[sum:Refund:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-line-first' value='true' />
                <format attr='mark-labels-line-last' value='true' />
                <format attr='mark-labels-range-min' value='true' />
                <format attr='mark-labels-range-max' value='true' />
                <format attr='mark-labels-mode' value='all' />
                <format attr='mark-labels-range-scope' value='pane' />
                <format attr='mark-labels-range-field' value='' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
        <mark-labels>
          <mark-label id='0' label-state='on'>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields />
                  <y-fields />
                </pane-descriptor>
                <columns>
                  <field>[federated.12vh8ue0eh2a7y1gdi8a105v0ete].[none:order_type:nk]</field>
                  <field>[federated.12vh8ue0eh2a7y1gdi8a105v0ete].[sum:Complain:qk]</field>
                  <field>[federated.12vh8ue0eh2a7y1gdi8a105v0ete].[sum:Refund:qk]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>&quot;Dinner&quot;</value>
                <value>26</value>
                <value>24</value>
              </tuple>
            </tuple-reference>
          </mark-label>
        </mark-labels>
      </table>
      <simple-id uuid='{4BB66A30-3041-430C-84F7-D9F486140964}' />
    </worksheet>
    <worksheet name='Sheet 4'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontname='Tableau Bold' fontsize='16'>Complain &amp; Refund Based On Restaurant Branch</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='outlier_data' name='federated.12vh8ue0eh2a7y1gdi8a105v0ete' />
          </datasources>
          <datasource-dependencies datasource='federated.12vh8ue0eh2a7y1gdi8a105v0ete'>
            <column datatype='integer' name='[Complain]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Refund]' role='measure' type='quantitative' />
            <column caption='Branch Code' datatype='string' name='[branch_code]' role='dimension' type='nominal' />
            <column-instance column='[branch_code]' derivation='None' name='[none:branch_code:nk]' pivot='key' type='nominal' />
            <column-instance column='[order_type]' derivation='None' name='[none:order_type:nk]' pivot='key' type='nominal' />
            <column caption='Order Type' datatype='string' name='[order_type]' role='dimension' type='nominal' />
            <column-instance column='[Complain]' derivation='Sum' name='[sum:Complain:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Refund]' derivation='Sum' name='[sum:Refund:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.12vh8ue0eh2a7y1gdi8a105v0ete].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.12vh8ue0eh2a7y1gdi8a105v0ete].[sum:Complain:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.12vh8ue0eh2a7y1gdi8a105v0ete].[sum:Refund:qk]&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.12vh8ue0eh2a7y1gdi8a105v0ete].[none:branch_code:nk]'>
            <groupfilter function='except' user:ui-domain='relevant' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:branch_code:nk]' />
              <groupfilter function='member' level='[none:branch_code:nk]' member='%null%' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.12vh8ue0eh2a7y1gdi8a105v0ete].[none:order_type:nk]'>
            <groupfilter function='level-members' level='[none:order_type:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.12vh8ue0eh2a7y1gdi8a105v0ete].[none:branch_code:nk]</column>
            <column>[federated.12vh8ue0eh2a7y1gdi8a105v0ete].[:Measure Names]</column>
            <column>[federated.12vh8ue0eh2a7y1gdi8a105v0ete].[none:order_type:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.12vh8ue0eh2a7y1gdi8a105v0ete].[:Measure Names]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.12vh8ue0eh2a7y1gdi8a105v0ete].[none:branch_code:nk] / [federated.12vh8ue0eh2a7y1gdi8a105v0ete].[:Measure Names])</rows>
        <cols>[federated.12vh8ue0eh2a7y1gdi8a105v0ete].[Multiple Values]</cols>
      </table>
      <simple-id uuid='{38F2FC75-9E1C-4975-A2D7-7455CD9BA3E4}' />
    </worksheet>
    <worksheet name='Sheet 5'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontname='Tableau Bold' fontsize='16'>Order Type VS Sum of Order Price </run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='outlier_data' name='federated.12vh8ue0eh2a7y1gdi8a105v0ete' />
          </datasources>
          <datasource-dependencies datasource='federated.12vh8ue0eh2a7y1gdi8a105v0ete'>
            <column-instance column='[order_type]' derivation='None' name='[none:order_type:nk]' pivot='key' type='nominal' />
            <column caption='Order Price' datatype='real' name='[order_price]' role='measure' type='quantitative' />
            <column caption='Order Type' datatype='string' name='[order_type]' role='dimension' type='nominal' />
            <column-instance column='[order_price]' derivation='Sum' name='[sum:order_price:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.12vh8ue0eh2a7y1gdi8a105v0ete].[none:order_type:nk]'>
            <groupfilter function='except' user:ui-domain='relevant' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:order_type:nk]' />
              <groupfilter function='member' level='[none:order_type:nk]' member='%null%' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.12vh8ue0eh2a7y1gdi8a105v0ete].[none:order_type:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.12vh8ue0eh2a7y1gdi8a105v0ete].[none:order_type:nk]' />
            </encodings>
            <reference-line axis-column='[federated.12vh8ue0eh2a7y1gdi8a105v0ete].[sum:order_price:qk]' enable-instant-analytics='true' formula='average' id='refline0' label-type='automatic' probability='95' scope='per-pane' value-column='[federated.12vh8ue0eh2a7y1gdi8a105v0ete].[sum:order_price:qk]' z-order='1' />
          </pane>
        </panes>
        <rows>[federated.12vh8ue0eh2a7y1gdi8a105v0ete].[sum:order_price:qk]</rows>
        <cols>[federated.12vh8ue0eh2a7y1gdi8a105v0ete].[none:order_type:nk]</cols>
      </table>
      <simple-id uuid='{CB471803-88C7-436B-9979-BA4A5BBAC6F9}' />
    </worksheet>
    <worksheet name='Sheet 6'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontname='Tableau Bold' fontsize='16'>Customer Loyalty Based On Order Type</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='outlier_data' name='federated.12vh8ue0eh2a7y1gdi8a105v0ete' />
          </datasources>
          <datasource-dependencies datasource='federated.12vh8ue0eh2a7y1gdi8a105v0ete'>
            <column datatype='integer' name='[Complain]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Refund]' role='measure' type='quantitative' />
            <column datatype='integer' name='[customerHasloyalty?]' role='dimension' type='ordinal' />
            <column-instance column='[customerHasloyalty?]' derivation='None' name='[none:customerHasloyalty?:ok]' pivot='key' type='ordinal' />
            <column-instance column='[order_type]' derivation='None' name='[none:order_type:nk]' pivot='key' type='nominal' />
            <column caption='Order Type' datatype='string' name='[order_type]' role='dimension' type='nominal' />
            <column-instance column='[Complain]' derivation='Sum' name='[sum:Complain:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Refund]' derivation='Sum' name='[sum:Refund:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.12vh8ue0eh2a7y1gdi8a105v0ete].[none:customerHasloyalty?:ok]'>
            <groupfilter function='except' user:ui-domain='relevant' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:customerHasloyalty?:ok]' />
              <groupfilter function='member' level='[none:customerHasloyalty?:ok]' member='%null%' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.12vh8ue0eh2a7y1gdi8a105v0ete].[none:customerHasloyalty?:ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='mark'>
            <encoding attr='size-bar' field='[federated.12vh8ue0eh2a7y1gdi8a105v0ete].[sum:Refund:qk]' field-type='quantitative' max-size='1' min-size='0.005' type='centersize' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.12vh8ue0eh2a7y1gdi8a105v0ete].[sum:Refund:qk]' />
              <lod column='[federated.12vh8ue0eh2a7y1gdi8a105v0ete].[sum:Complain:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.12vh8ue0eh2a7y1gdi8a105v0ete].[none:customerHasloyalty?:ok]</rows>
        <cols>[federated.12vh8ue0eh2a7y1gdi8a105v0ete].[none:order_type:nk]</cols>
      </table>
      <simple-id uuid='{4AFF38B4-A99F-4740-A63E-66546261FF6F}' />
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard name='Dashboard 1'>
      <style />
      <size maxheight='800' maxwidth='1000' minheight='800' minwidth='1000' />
      <datasources>
        <datasource caption='outlier_data' name='federated.12vh8ue0eh2a7y1gdi8a105v0ete' />
      </datasources>
      <datasource-dependencies datasource='federated.12vh8ue0eh2a7y1gdi8a105v0ete'>
        <column datatype='integer' name='[Refund]' role='measure' type='quantitative' />
        <column-instance column='[Refund]' derivation='Sum' name='[sum:Refund:qk]' pivot='key' type='quantitative' />
      </datasource-dependencies>
      <zones>
        <zone _.fcp.SetMembershipControl.false...type='layout-basic' _.fcp.SetMembershipControl.true...type-v2='layout-basic' h='100000' id='4' w='100000' x='0' y='0'>
          <zone _.fcp.SetMembershipControl.false...type='layout-flow' _.fcp.SetMembershipControl.true...type-v2='layout-flow' h='98000' id='20' param='vert' w='98400' x='800' y='1000'>
            <zone _.fcp.SetMembershipControl.false...type='title' _.fcp.SetMembershipControl.true...type-v2='title' h='6000' id='21' w='98400' x='800' y='1000'>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='4' />
              </zone-style>
            </zone>
            <zone _.fcp.SetMembershipControl.false...type='layout-flow' _.fcp.SetMembershipControl.true...type-v2='layout-flow' h='92000' id='7' param='horz' w='98400' x='800' y='7000'>
              <zone _.fcp.SetMembershipControl.false...type='layout-basic' _.fcp.SetMembershipControl.true...type-v2='layout-basic' h='92000' id='5' w='87300' x='800' y='7000'>
                <zone h='45999' id='3' name='Sheet 1' show-title='false' w='48310' x='800' y='7000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
                <zone h='46001' id='11' name='Sheet 3' show-title='false' w='45343' x='800' y='52999'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
                <zone h='46001' id='13' name='Sheet 4' show-title='false' w='41957' x='46143' y='52999'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
                <zone h='45999' id='15' name='Sheet 5' show-title='false' w='38990' x='49110' y='7000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
              </zone>
              <zone _.fcp.SetMembershipControl.false...type='layout-flow' _.fcp.SetMembershipControl.true...type-v2='layout-flow' fixed-size='111' h='92000' id='6' is-fixed='true' param='vert' w='11100' x='88100' y='7000'>
                <zone _.fcp.SetMembershipControl.false...type='filter' _.fcp.SetMembershipControl.true...type-v2='filter' h='9000' id='9' name='Sheet 1' param='[federated.12vh8ue0eh2a7y1gdi8a105v0ete].[sum:Refund:qk]' show-domain='false' show-null-ctrls='false' w='11100' x='88100' y='7000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
                <zone _.fcp.SetMembershipControl.false...type='color' _.fcp.SetMembershipControl.true...type-v2='color' h='13875' id='10' name='Sheet 1' pane-specification-id='0' param='[federated.12vh8ue0eh2a7y1gdi8a105v0ete].[none:AdhocCluster:1:ok]' w='11100' x='88100' y='16000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
                <zone _.fcp.SetMembershipControl.false...type='color' _.fcp.SetMembershipControl.true...type-v2='color' h='9125' id='12' name='Sheet 3' pane-specification-id='0' param='[federated.12vh8ue0eh2a7y1gdi8a105v0ete].[sum:Complain:qk]' w='11100' x='88100' y='29875'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
                <zone _.fcp.SetMembershipControl.false...type='color' _.fcp.SetMembershipControl.true...type-v2='color' h='8875' id='14' name='Sheet 4' pane-specification-id='0' param='[federated.12vh8ue0eh2a7y1gdi8a105v0ete].[:Measure Names]' w='11100' x='88100' y='39000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
                <zone _.fcp.SetMembershipControl.false...type='color' _.fcp.SetMembershipControl.true...type-v2='color' h='11375' id='16' name='Sheet 5' pane-specification-id='0' param='[federated.12vh8ue0eh2a7y1gdi8a105v0ete].[none:order_type:nk]' w='11100' x='88100' y='47875'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
              </zone>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='1600' minheight='1600' sizing-mode='vscroll' />
          <zones>
            <zone _.fcp.SetMembershipControl.false...type='layout-basic' _.fcp.SetMembershipControl.true...type-v2='layout-basic' h='100000' id='23' w='100000' x='0' y='0'>
              <zone _.fcp.SetMembershipControl.false...type='layout-flow' _.fcp.SetMembershipControl.true...type-v2='layout-flow' h='98000' id='22' param='vert' w='98400' x='800' y='1000'>
                <zone _.fcp.SetMembershipControl.false...type='title' _.fcp.SetMembershipControl.true...type-v2='title' h='6000' id='21' w='98400' x='800' y='1000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone _.fcp.SetMembershipControl.false...type='filter' _.fcp.SetMembershipControl.true...type-v2='filter' h='9000' id='9' name='Sheet 1' param='[federated.12vh8ue0eh2a7y1gdi8a105v0ete].[sum:Refund:qk]' show-domain='false' show-null-ctrls='false' w='11100' x='88100' y='7000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='45999' id='3' is-fixed='true' name='Sheet 1' show-title='false' w='48310' x='800' y='7000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone _.fcp.SetMembershipControl.false...type='color' _.fcp.SetMembershipControl.true...type-v2='color' h='13875' id='10' name='Sheet 1' pane-specification-id='0' param='[federated.12vh8ue0eh2a7y1gdi8a105v0ete].[none:AdhocCluster:1:ok]' w='11100' x='88100' y='16000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='45999' id='15' is-fixed='true' name='Sheet 5' show-title='false' w='38990' x='49110' y='7000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone _.fcp.SetMembershipControl.false...type='color' _.fcp.SetMembershipControl.true...type-v2='color' h='11375' id='16' name='Sheet 5' pane-specification-id='0' param='[federated.12vh8ue0eh2a7y1gdi8a105v0ete].[none:order_type:nk]' w='11100' x='88100' y='47875'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='46001' id='11' is-fixed='true' name='Sheet 3' show-title='false' w='45343' x='800' y='52999'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone _.fcp.SetMembershipControl.false...type='color' _.fcp.SetMembershipControl.true...type-v2='color' h='9125' id='12' name='Sheet 3' pane-specification-id='0' param='[federated.12vh8ue0eh2a7y1gdi8a105v0ete].[sum:Complain:qk]' w='11100' x='88100' y='29875'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='46001' id='13' is-fixed='true' name='Sheet 4' show-title='false' w='41957' x='46143' y='52999'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone _.fcp.SetMembershipControl.false...type='color' _.fcp.SetMembershipControl.true...type-v2='color' h='8875' id='14' name='Sheet 4' pane-specification-id='0' param='[federated.12vh8ue0eh2a7y1gdi8a105v0ete].[:Measure Names]' w='11100' x='88100' y='39000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{7B7D8A83-AEAC-48AA-8411-4CA54BF5F83E}' />
    </dashboard>
  </dashboards>
  <windows saved-dpi-scale-factor='1.25' source-height='63'>
    <window class='worksheet' name='Sheet 1'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.12vh8ue0eh2a7y1gdi8a105v0ete].[sum:Complain:qk]' show-domain='false' show-null-ctrls='false' type='filter' />
            <card param='[federated.12vh8ue0eh2a7y1gdi8a105v0ete].[sum:Refund:qk]' show-domain='false' show-null-ctrls='false' type='filter' />
            <card pane-specification-id='0' param='[federated.12vh8ue0eh2a7y1gdi8a105v0ete].[none:AdhocCluster:1:ok]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.12vh8ue0eh2a7y1gdi8a105v0ete].[none:AdhocCluster:1:ok]</field>
            <field>[federated.12vh8ue0eh2a7y1gdi8a105v0ete].[none:Status:nk]</field>
            <field>[federated.12vh8ue0eh2a7y1gdi8a105v0ete].[none:branch_code:nk]</field>
            <field>[federated.12vh8ue0eh2a7y1gdi8a105v0ete].[none:order_id:nk]</field>
            <field>[federated.1pox3z816ynujy1czskml0omw4jy].[none:Phone Number:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{549F5F92-46DC-4315-8458-472FF9A3C33D}' />
    </window>
    <window class='worksheet' name='Sheet 2'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.12vh8ue0eh2a7y1gdi8a105v0ete].[none:Status:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.12vh8ue0eh2a7y1gdi8a105v0ete].[none:AdhocCluster:2:ok]</field>
            <field>[federated.12vh8ue0eh2a7y1gdi8a105v0ete].[none:Status:nk]</field>
            <field>[federated.12vh8ue0eh2a7y1gdi8a105v0ete].[none:order_items:nk]</field>
            <field>[federated.12vh8ue0eh2a7y1gdi8a105v0ete].[none:order_type:nk]</field>
            <field>[federated.12vh8ue0eh2a7y1gdi8a105v0ete].[sum:Complain:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{BBD06269-854D-43C1-B074-63CC87DADAFA}' />
    </window>
    <window class='worksheet' name='Sheet 3'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.12vh8ue0eh2a7y1gdi8a105v0ete].[none:order_type:nk]' type='filter' />
            <card pane-specification-id='0' param='[federated.12vh8ue0eh2a7y1gdi8a105v0ete].[sum:Complain:qk]' type='color' />
            <card param='[federated.12vh8ue0eh2a7y1gdi8a105v0ete].[none:order_type:nk]' type='highlighter' />
          </strip>
          <strip size='160'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.12vh8ue0eh2a7y1gdi8a105v0ete].[none:branch_code:nk]</field>
            <field>[federated.12vh8ue0eh2a7y1gdi8a105v0ete].[none:order_type:nk]</field>
            <field>[federated.12vh8ue0eh2a7y1gdi8a105v0ete].[sum:Complain:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{70A800AE-07CF-48C5-9CDB-DF0268DE3925}' />
    </window>
    <window class='dashboard' maximized='true' name='Dashboard 1'>
      <viewpoints>
        <viewpoint name='Sheet 1'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Sheet 3' />
        <viewpoint name='Sheet 4'>
          <zoom type='entire-view' />
          <highlight>
            <color-one-way>
              <field>[federated.12vh8ue0eh2a7y1gdi8a105v0ete].[:Measure Names]</field>
            </color-one-way>
          </highlight>
        </viewpoint>
        <viewpoint name='Sheet 5'>
          <zoom type='entire-view' />
          <highlight>
            <color-one-way>
              <field>[federated.12vh8ue0eh2a7y1gdi8a105v0ete].[none:order_type:nk]</field>
            </color-one-way>
          </highlight>
        </viewpoint>
      </viewpoints>
      <active id='21' />
      <simple-id uuid='{C37F14B4-E4CC-4FD2-8F77-D3ADC6D931E2}' />
    </window>
    <window class='worksheet' name='Sheet 4'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.12vh8ue0eh2a7y1gdi8a105v0ete].[none:order_type:nk]' type='filter' />
            <card pane-specification-id='0' param='[federated.12vh8ue0eh2a7y1gdi8a105v0ete].[:Measure Names]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.12vh8ue0eh2a7y1gdi8a105v0ete].[:Measure Names]</field>
            <field>[federated.12vh8ue0eh2a7y1gdi8a105v0ete].[none:branch_code:nk]</field>
            <field>[federated.12vh8ue0eh2a7y1gdi8a105v0ete].[none:order_type:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{83415EE5-5177-4C41-861A-B603011E9662}' />
    </window>
    <window class='worksheet' name='Sheet 5'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.12vh8ue0eh2a7y1gdi8a105v0ete].[none:order_type:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.12vh8ue0eh2a7y1gdi8a105v0ete].[none:order_type:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{ABA4A8A8-6D87-4903-9021-986AB223AF8C}' />
    </window>
    <window class='worksheet' name='Sheet 6'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.12vh8ue0eh2a7y1gdi8a105v0ete].[Refund (group)]</field>
            <field>[federated.12vh8ue0eh2a7y1gdi8a105v0ete].[none:customerHasloyalty?:ok]</field>
            <field>[federated.12vh8ue0eh2a7y1gdi8a105v0ete].[none:order_type:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{DF2507E7-002D-4E28-A3ED-9389C8741B0A}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='Dashboard 1' width='192'>
      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
      EPsI/x8qD4y8VTnksAAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Sheet 1' width='192'>
      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
      AABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Sheet 2' width='192'>
      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
      Jg1VVeU3GQZ0aNqXK+sAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Sheet 3' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAABJ0AAASdAHeZh94
      AAAEOElEQVR4nO3ZS29UdRzG8d9Mh3aASgsEsYIINFGI9wSJEeNaE1cuXPtKfAu+CF25NK5M
      RLws0EgwRmq5tEixAi29wCCllHZcQUxMcGHpRJ/PZ/U/ycnJs/nmzMk0Zmdnu+12uyBRq91u
      16cnP69TU2O93gIbrlVV9cPUmfro9Ge93gIbrnX/cPjJ0dq7/Ykam75Qa921munM1+raai+3
      wSP3IIBDIwfr09PH671X367xq5O1bfNjtW/nSE3MTNWe7btrc3+7Tk78WEcPvlQT1y7VgV17
      a/zKZP2+ONPL/fCvtP56sbq2WtdvLdSR/c/X9c5C/Tx9rl4bfbkG21vqp8tn6/033q1rN+Zq
      29Nba8fgcB3/5WSvdsO6aN4/bOrbVG+98Gb1NZs1c3Oulu/drT+Wl2pl9V7dXLpVyyvL9ev1
      6Wo0GjU2faFu3u70cjesi0an0+l+8MmHPoKJ1PznW+D/SwBEEwDRBEA0ARBNAEQTANEEQDQB
      EE0ARBMA0QRANAEQTQBEEwDRBEA0ARBNAEQTANEEQDQBEE0ARBMA0QRANAEQTQBEEwDRBEA0
      ARBNAEQTANEEQDQBEE0ARBMA0QRANAEQTQBEEwDRBEA0ARBNAEQTANEEQDQBEE0ARBMA0QRA
      NAEQTQBEEwDRBEA0ARBNAEQTANEEQDQBEE0ARBMA0QRANAEQTQBEEwDRBEA0ARBNAEQTANEE
      QDQBEE0ARBMA0QRANAEQTQBEEwDRBEA0ARBNAEQTANEEQDQBEE0ARBMA0QRANAEQTQBEEwDR
      BEA0ARBNAEQTANEEQDQBEE0ARBMA0QRANAEQTQBEEwDRBEA0ARBNAEQTANEEQDQBEE0ARBMA
      0QRANAEQTQBEa1VVvTP6VB17/Fivt8CGa1VV7Rq8U3u2LvZ6C2y4Bz+BLl66Ud1u96E3z8ze
      roXFO498FGyU1v3DmfG52r9vW42Nz9XoweGamFys6Su3qtls1JFXdtd3p65WX7NRc/NLdeiZ
      HfXic7t6uRvWxd8+gs9PLtTKymqdn1io+YU7dXtppb74aqpePzpSQ0MDdfjZnTV+br4XW2Hd
      PXgDVLdbJ779rbYN9teJby5XX1+zhoda1Wo1a3hkoL78+nINDQ3UjuGB2rK59ZBHwn9Ho9Pp
      dC+e/bj6u9/3egtsOP8DEE0ARBMA0QRANAEQTQBEEwDRBEA0ARBNAEQTANEEQDQBEE0ARBMA
      0QRANAEQTQBEEwDRBEA0ARBNAEQTANEEQDQBEE0ARBMA0QRANAEQTQBEEwDRBEA0ARBNAEQT
      ANEEQDQBEE0ARBMA0QRANAEQTQBEEwDRBEA0ARBNAEQTANEEQDQBEE0ARBMA0QRANAEQTQBE
      EwDRBEA0ARBNAEQTANEEQDQBEE0ARBMA0QRANAEQrVVV1dd/oFbuNnq9BTZcY3Z2tttut3u9
      A3riT5hGs7CTBq2ZAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Sheet 4' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Sheet 5' width='192'>
      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
    </thumbnail>
    <thumbnail height='80' name='Sheet 6' width='192'>
      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
      YII=
    </thumbnail>
  </thumbnails>
</workbook>
